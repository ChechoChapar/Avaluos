<?xml version="1.0" encoding="utf-8"?>
<!--- 
Modulo para la descarga de complementos y manuales
@implements modulos.IModule
@see com.segurosbolivar.avaluos.componentes.FileUploadComplementos
@see mx.modules.Module
-->
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute" width="722" height="440"
		   xmlns:file="com.segurosbolivar.avaluos.componentes.*"
		   implements="modulos.IModule"  xmlns:services="services.*"
		   initialize="module1_initializeHandler(event)"
		   >
	<fx:Script>
		<![CDATA[
			import com.segurosbolivar.avaluos.modulos.FileDownload;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.hamcrest.object.equalTo;
			import org.osmf.media.LoadableMediaElement;
			
			import permisos.Permiso;
			
			import valueObjects.Archivo;
			import valueObjects.ComplementosExcel;
			import valueObjects.Usuario;			
			
			[Bindable]
			public var mensaje:String = new String();
			
			/**
			 * variables para guardar los permisos y usuario actual
			 * */
			
			[Bindable]
			public var myUsuario:Usuario;
			
			[Bindable]
			public var myListaPermisos:Permiso;
			
			
			/**
			 * Funciones implementadas de la interface IModule
			 * estas funciones aseguran que el modulo se pueda ejecutar en
			 * el menu principal, se conoscan su permisos y puedan ser accedidas
			 * desde la barra de botones
			 * Solo se implementan las funcionalidades que aplican a este Modulo
			 * @see modulos.IModule
			 * */
			
			public function setTexto(t:String):void
			{
			}
			public function setPermisos(listaPermisos:Permiso):void
			{
				myListaPermisos = listaPermisos;
			}				
			public function getPermisos():Permiso
			{
				return myListaPermisos;
			}				
			public function ejecutar():void
			{
			}						
			
			public function adicionar():void
			{
				
			}							
			public function consultar():void
			{
			}							
			
			public function imprimir():void
			{
				
			}
			
			/**
			 * Actualiza los complementos segun los cambios que se hayan hecho en el datagrid dtgComplementosArchivo 
			 */
			public function editar():void
			{
											
				for(var indice:int = 0; indice < cambiados.length; indice++)
				{
					try{
						//arch=dtgComplementosArchivo.dataProvider.getItemAt(dtgComplementosArchivo.selectedIndex) as  Archivo;
						arch=dtgComplementosArchivo.dataProvider.getItemAt(indice) as  Archivo;
						actualizaComplementoResult.token = complementosService.actualizaComplemento(arch);			
						getMensajeTransaccionResult.token = complementosService.getMensajeTransaccion();
						dtgComplementosArchivo.dataProvider.refresh();
					}catch(err:Error)
					{
						trace(err);
					}
				}
			}	
			
			[Bindable]
			var compl:ComplementosExcel = new ComplementosExcel();
			var arch:Archivo = new Archivo();
			//var emp:EmpresasAvaluos = new EmpresasAvaluos();
			/**
			 * Elimina el complemento seleccionado en el datagrid dtgComplementosArchivo
			 */
			public function eliminar():void	
			{
				arch=dtgComplementosArchivo.dataProvider.getItemAt(dtgComplementosArchivo.selectedIndex) as  Archivo;
				eliminaArchivoComplementoResult.token = complementosService.eliminaArchivoComplemento(arch);
				getMensajeTransaccionResult.token = complementosService.getMensajeTransaccion();
				dtgComplementosArchivo.dataProvider.removeItemAt(dtgComplementosArchivo.selectedIndex);
				dtgComplementosArchivo.dataProvider.refresh();				
			}
			
			
			/**
			 * Captura el registro seleccionado en el datagrid dtgComplementosArchivo y
			 * extrae el nombre del archivo para descargarlo
			 * */
			public function linkbutton1_clickHandler(event:MouseEvent):void
			{
				var archivo:Archivo = dtgComplementosArchivo.selectedItem as Archivo;
				var fileDownload:FileDownload = new FileDownload();
				fileDownload.init(downloadProgress,null);
				var usuario:Usuario = parentApplication.getUsuarioActual();
				fileDownload.startComplementosDownload(archivo.idArchivo,archivo.nombreArchivo,usuario);
			}

			/**
			 * Llama al servicio de consulta de consultaArchivosComplementosResult, para poblar
			 * la grilla desde su creación
			 **/ 
			protected function dtgLogsArchivo_creationCompleteHandler(event:FlexEvent):void
			{
				consultaArchivosComplementosResult.token = complementosService.consultaArchivosComplementos();
			}
			
			/**
			 * Realiza el cargue de un complemento en el sistema
			 * */
			protected function startUpload_clickHandler(event:MouseEvent):void
			{
				if(descripcionCompl.text=="")
				{
					Alert.show("Por favor ingrese una descripcion antes de cargar...");
				}
				else
				{	
					fileUpload.descripcion=descripcionCompl.text;
					fileUpload.startUpload();
				}
			}
			
			/**
			 * Oculta o muestra la seccion de cargar pnlUpload si el perfil no es administrador
			 * */						
			protected function module1_initializeHandler(event:FlexEvent):void
			{
				pnlUpload.visible = false; 
				var usuario:Usuario = parentApplication.getUsuarioActual();
				var codigoPerfil:String = usuario.codigoPerfil;
				if(codigoPerfil == "PGBADMINIST01"){
					pnlUpload.visible = true;
				}
				//Man 7280 Adicionar link para capacitación virtual
				btnCapacitacion.addEventListener(MouseEvent.CLICK,abrirEkp);
				
			}
			
			/**
			 * Refresca el datagrid luego de un borrado o modificacion, y limpia el
			 * arreglo de filas modificadas que se usa para la edicion.
			 * */
			public function refrescarData():void{
				
				consultaArchivosComplementosResult.token = complementosService.consultaArchivosComplementos();				
				cambiados = new Array();
			}
			
			/**
			* Servicio consulta complementos
			 * */			
			protected function consultaArchivosComplementosResult_resultHandler(event:ResultEvent):void
			{
				dtgComplementosArchivo.dataProvider=consultaArchivosComplementosResult.lastResult;
			}
			
			/**
			 * Muestra el resultado de la transaccion en pantalla
			 * */			
			protected function getMensajeTransaccionResult_resultHandler(event:ResultEvent):void
			{ mensaje = getMensajeTransaccionResult.lastResult as String;
				if(mensaje!=null)
				{
					Alert.show(mensaje);
				}
			}			

			/**
			 * Arreglo para ir almacenando los indices de las filas modificadas, se 
			 * recorre al guardar los cambios
			 * */		
			[Bindable]
			var cambiados:Array = new Array();
			/**
			 * Se activa al modificar alguna fila
			 * */			
			protected function dtgComplementosArchivo_changeHandler(event:ListEvent):void
			{
				cambiados.push((dtgComplementosArchivo.selectedIndex)-1);
				dtgComplementosArchivo.setFocus();
			}
			/**
			 * Funcion para el formato de la fecha
			 * */
			protected function labelFecha(item:Object, column:DataGridColumn):String{
				if(item.fechaCreacion != null){
					return formatDateTime.format(item.fechaCreacion);
				}
				else { 
					return "";
				}
			}
			

			function abrirEkp (event:MouseEvent):void{
				var miURL:URLRequest = new URLRequest("https://www.bolnet.com.co/ekp/servlet/ekp/verify?UID=avaluosbolivar&PWD=avaluosbolivar");
				navigateToURL(miURL,"_blank");
			}
			
		]]>
	</fx:Script>			
	<fx:Declarations>
		<services:ComplementosService id="complementosService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
		<s:CallResponder id="consultaArchivosComplementosResult" result="consultaArchivosComplementosResult_resultHandler(event)"/>
		<s:CallResponder id="eliminaArchivoComplementoResult"/>
		<s:CallResponder id="getMensajeTransaccionResult" result="getMensajeTransaccionResult_resultHandler(event)"/>
		<s:CallResponder id="actualizaComplementoResult"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:DateFormatter id="formatDateTime" formatString="DD/MM/YYYY JJ:NN:SS" />
	</fx:Declarations>
	
	<fx:Style source="assets/css/AvaluosBolivar.css"/>
	<fx:Style source="assets/css/AvaluosBolivarPanel.css"/>
	
	<mx:DataGrid allowMultipleSelection="true" y="206" width="672" height="160" id="dtgComplementosArchivo" creationComplete="dtgLogsArchivo_creationCompleteHandler(event)"  editable="true" dataProvider="{consultaArchivosComplementosResult.lastResult}" horizontalCenter="4" change="dtgComplementosArchivo_changeHandler(event)">
		<mx:columns>
			<mx:DataGridColumn headerText="Identificador Arch." dataField="idArchivo" editable="false"/>
			<mx:DataGridColumn headerText="Nombre Archivo" dataField="nombreArchivo" resizable="true" sortable="true" editable="false"/>
			<mx:DataGridColumn headerText="Tamaño Archivo" dataField="tamanioArchivo" editable="false"/>
			<mx:DataGridColumn headerText="Fecha Creación" labelFunction="labelFecha" dataField="fechaCreacion" itemEditor="mx.controls.DateField" editorDataField="selectedDate" editable="false"/>
			<mx:DataGridColumn dataField="descripcion" headerText="Descripción"
							   editable="true" >
				<mx:itemEditor>
					<fx:Component>
						<mx:TextInput maxChars="255"  />
					</fx:Component>
				</mx:itemEditor>
			</mx:DataGridColumn>	
			<mx:DataGridColumn textAlign="center" resizable="false" sortable="false" headerText="Descargar" editable="false">
				<mx:itemRenderer>
					<fx:Component>
						<mx:LinkButton label="Descargar" click="outerDocument.linkbutton1_clickHandler(event)" />
					</fx:Component>						
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	
	<file:FileUploadComplementos id="fileUpload" creationComplete="fileUpload.init(uploadProgress, cancelUpload,this);"/>	
	<mx:Panel id="pnlUpload" title="Cargar Archivo" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10" y="11" height="176" width="255" dropShadowVisible="false" horizontalCenter="4">
		<s:HGroup width="218" height="30" verticalAlign="middle">
			<s:Label text="Descripcion"/>
			<s:TextInput id="descripcionCompl" maxChars="255"/>
		</s:HGroup>
		<mx:ProgressBar id="uploadProgress" label="" mode="manual" />
		<mx:ControlBar horizontalAlign="right">
			<mx:Button id="startUpload" label="Cargar" click="startUpload_clickHandler(event)"/>
			<mx:Button id="cancelUpload" label="Cancelar" click="fileUpload.cancelUpload();" enabled="false" />
		</mx:ControlBar>		
	</mx:Panel>	
	
	<mx:ProgressBar id="downloadProgress" label="" mode="manual" y="372" horizontalCenter="4"/>
	<s:Button x="274" y="410" label="Ingresar a Capacitación Virtual" click="btnCapacitacion.addEventListener(MouseEvent.CLICK,abrirEkp)" id="btnCapacitacion" enabled="true"/>
	
</mx:Module>
