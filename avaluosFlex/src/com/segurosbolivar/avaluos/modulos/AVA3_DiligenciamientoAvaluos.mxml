<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:file="com.segurosbolivar.avaluos.modulos.*"
		   xmlns:comp="com.segurosbolivar.avaluos.componentes.*" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute" width="872" height="770" xmlns:services="services.*" xmlns:valueObjects="valueObjects.*"
		   implements="modulos.IModule" initialize="module1_initializeHandler(event)" xmlns:serviciosterceroswsport="services.serviciosterceroswsport.*" xmlns:componentes="com.segurosbolivar.avaluos.componentes.WndMultiRegistroConstructor" x="604" y="609" fontWeight="normal">
	
	<fx:Script>
		<![CDATA[
			import com.segurosbolivar.avaluos.componentes.WndAnexosPdf;
			import com.segurosbolivar.avaluos.componentes.WndBuscarPerito;
			
			import flash.events.MouseEvent;
			import flash.utils.setInterval;
			
			import flashx.textLayout.formats.Float;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.core.UIComponent;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.InvalidateRequestData;
			import mx.events.ModuleEvent;
			import mx.events.StateChangeEvent;
			import mx.formatters.CurrencyFormatter;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.flexunit.internals.runners.InitializationError;
			import org.flexunit.runners.ParentRunner;
			
			import permisos.Permiso;
			
			import services.LogsArchivoService;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import valueObjects.AnexoFotografico;
			import valueObjects.Avaluo;
			import valueObjects.Dominios;
			import valueObjects.DominiosAux;
			import valueObjects.EmpresasAvaluos;
			import valueObjects.EstructuraArchivoPlano;
			import valueObjects.InformacionConstruccion;
			import valueObjects.LiquidacionAvaluo;
			import valueObjects.LogsGeneraArchivo;
			import valueObjects.Usuario;
			
			private var nombreSeccion:String = new String();
			private static var nombreSeccionDirecccion:String = new String();
			protected static var numeroIntentos:int = 2 ; 
			protected static var contadorIntentos:int = 0 ; 
			
			[Bindable]
			public var mensaje:String = new String();
			[Bindable]
			public var myUsuario:Usuario;
			[Bindable]
			public var myListaPermisos:Permiso;
			[Bindable]
			public static var selectTipoId:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectTipoConsulta:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectCiudadbasico:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public var selectCiudadfiltro:ArrayCollection = new ArrayCollection() ;
			
			[Bindable]
			public static var selectDepartamento:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectMetodologia:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectEstadoVias:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectEstrato:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectLegalidad:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectTopografia:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectTransporte:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectObjeto:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selectSector:ArrayCollection = new ArrayCollection() ;
			[Bindable]
			public static var selecttipovivienda:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectusoinmueble:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectclaseinmueble:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcategoria:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectubicacion2:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectubicacion3:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectafirmarusoactual:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public static var selectusoInmuebleSF:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public static var selectusoInmuebleBUA:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var selectciudadescritura:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectafirmarcercafuenthidri:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdistanciametros:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectalura:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectpisosbodega:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestadoconstruccion:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestadoconservacion:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestructura:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectmaterialestructura:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectfachada:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selecttipofachada:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcubierta:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectparapetos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selecttanquesagua:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectlongluces:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectsimetriaaltura:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectsimetriaplanta:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectsobrepeso:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectgolpeteo:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectasentamientos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdanosprevios:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectventilacion:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectiluminacion:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectreccondsalubri:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcondsalubridad:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectaroborizacion:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectaguasservidas:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectbasura:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectruido:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectparques:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectzonasverdes:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectinseguridad:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectporaire:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestpisos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcalpisos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestmuros:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcalmuros:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectesttechos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcaltechos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestmadera:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcalmadera:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestmetal:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcalmetal:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestbanos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcalbanos:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectestcocina:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcalcocina:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectprophorizontal:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectconjcerrado:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectubicacion:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectcalificacion:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq0:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq1:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq2:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq3:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq4:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq5:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq6:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq7:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq8:ArrayCollection = new ArrayCollection();
			[Bindable]
			public static var selectdescliq9:ArrayCollection = new ArrayCollection();
			
			
			[Bindable]
			public var selectdanoPrevioSF:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectdanoReparadoSF:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectdanoPrevioBUA:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectreparadosBUA:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectsimetriaAlturaSF:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectsimetriaPlantaSF:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectrangoConstruccionSF:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectdetalleMaterialSFBUA:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectestructuraReforzadaBUA:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectirregularidadAlturaBUA:ArrayCollection = new ArrayCollection();
			[Bindable]			
			public var selectirregularidadPlantaBUA:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var selectmaterialConstruccionBUA:ArrayCollection = new ArrayCollection();		
			[Bindable]
			public var selectMaterialConstruccionSF:ArrayCollection = new ArrayCollection();			
			[Bindable]
			public var selectEstructuraReforzadaSF:ArrayCollection = new ArrayCollection();
			
			
			[Bindable]
			public static var selectEstadoAvaluo:ArrayCollection = new ArrayCollection();
			
			private var aprobarPostValidar:Boolean = new Boolean(false);
			private var impresionEnEdicion:Boolean = new Boolean(false);
			private var guardarConstruccionSinClick:Boolean = new Boolean(false);
			private var guardarBarrioSinClick:Boolean = new Boolean(false);
			private var guardarPropiedadHorizontal:Boolean = new Boolean(false);
			
			private var aprobar:Boolean = new Boolean(false);
			private var imprAprobar:Boolean = new Boolean(false);
			private var estadoTx:Boolean = new Boolean(false);
			private var isEnabled:Boolean;
			private var existsFachada:Boolean = false;
			private var isValidAprobador:Boolean = false;			
			private var isValidAprobadorHijo:Boolean = false;
			private var isValidAdministrador:Boolean = false;
			public var existsAnexo:Boolean = false;
			private var isAvaluoValid:Boolean = false;
			private var categoria:Dominios = new Dominios();
			private var isBodega:Boolean = false;
			private var isLocal:Boolean = false;
			private var propiedadHorizontal:Boolean = false;
			private var isCargaInicial:String = null;
			private const MSG_DESCLIQ:String = "Recuerde en la sección información de la construcción seleccionar un valor de la lista propiedad horizontal de  y guardar sección";
			private const MSG_VALOR_AVALO:String = "Haga click aquí para que el sistema calcule el valor UVR del avaluo";
			
			private var infoInmueble:InformacionInmueble = new InformacionInmueble();
			private var empAvaluo:EmpresasAvaluos = new EmpresasAvaluos();
			
			public var newVBoxAdicion:VBox ; 
			public var mlAdicion:CustomModuleLoader ;
			
			public var newVBoxEdicion:VBox ; 
			public var mlEdicion:CustomModuleLoader ;
			
			var restrict_:String ="^|<>&'";
			
			/**
			 * Inicializa el módulo AVA3:DiligenciamientoDeAvaluos, obtiene el usuario de la aplicación padre
			 * y con base en el perfil de este definie si los componentes de la forma estaran activados o no.
			 * */
			// import com.sociodox.theminer.*;
			import mx.core.UIComponent;
			
			//import com.demonsters.debugger.MonsterDebugger;
			
			protected function module1_initializeHandler(event:FlexEvent):void
			{
				
				var sprite:Sprite = new Sprite();
				var ui:UIComponent = new UIComponent();
				//Solo quitar comentarios para profiler
				//ui.addChild(new TheMiner());
				//this.addElement(ui);
				//MonsterDebugger.initialize(sprite);
				//MonsterDebugger.trace(sprite, "Hello World!");

				myUsuario = parentApplication.getUsuarioActual();
				if(myUsuario.codigoPerfil != "PGBPERITO01" && 
					myUsuario.codigoPerfil != "PGBPERITO02" && 
					myUsuario.codigoPerfil != "PGBPERITO03") {
					isEnabled = new Boolean(false);
				}else {
					isEnabled = new Boolean(true);
				}
				
				if((myUsuario.codigoPerfil == "PGBPERITO01") /** || (myUsuario.codigoPerfil == "PGBADMINIST01")*/ ) {
					isValidAprobador = new Boolean(true);
					
				}else{
					isValidAprobador = new Boolean(false);
				}
				
				if(myUsuario.codigoPerfil == "PGBADMINIST01"){
					isValidAdministrador = new Boolean(true);
				}else{
					isValidAdministrador = new Boolean(false);
				}
				
				if((myUsuario.codigoPerfil == "PGBPERITO01") ||
					(myUsuario.codigoPerfil == "PGBPERITO02") ||					 
					(myUsuario.codigoPerfil == "PGBPERITO03")) {
					isValidAprobadorHijo = new Boolean(true);
				}else{
					isValidAprobadorHijo = new Boolean(false);
				}
				
				//01Ago2013
				getValoresDominioResult43.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
				
				if(selectDepartamento==null || selectDepartamento.length<1){
					consultaDepartamentosResult.token = departamentoService.consultaDepartamentos();
				}else {
					consultaDepartamentosResult = null ; 					
				}
				
				if(selectEstadoAvaluo == null || selectEstadoAvaluo.length<1){
					getValoresDominioResult78.token = dominiosAuxDao.getValoresDominio("ESTADOAVALUO");
				}else {
					getValoresDominioResult78 = null ;					
				}
				
				if(selectMetodologia==null || selectMetodologia.length<1){
					getValoresDominioResult29.token = dominiosAuxDao.getValoresDominio("METODOLOGIA");
				}else {
					getValoresDominioResult29 = null ;
				}
				
				if(selectEstadoVias==null || selectEstadoVias.length<1){
					getValoresDominioResult5.token = dominiosAuxDao.getValoresDominio("MBR");
				}else {
					getValoresDominioResult5 = null ;
				}
				
				if(selectEstrato==null || selectEstrato.length<1){
					getValoresDominioResult2.token = dominiosAuxDao.getValoresDominio("ESTRATO");
				}else {
					getValoresDominioResult2 = null ;	
				}
				
				if(selectLegalidad==null || selectLegalidad.length<1){	
					getValoresDominioResult3.token = dominiosAuxDao.getValoresDominio("LEGALBARRIO");
				}else {
					getValoresDominioResult3 = null ;	
				}
				
				if(selectTopografia==null || selectTopografia.length<1)
					getValoresDominioResult4.token = dominiosAuxDao.getValoresDominio("TOPOGRAFIA");
				else {
					getValoresDominioResult4 = null ;
				}
				
				if(selectTransporte==null || selectTransporte.length<1)
					getValoresDominioResult32.token = dominiosAuxDao.getValoresDominio("MBR");
				else {
					getValoresDominioResult32 = null ;
				}
				
				if(selectObjeto==null || selectObjeto.length<1)	
					getValoresDominioResult30.token = dominiosAuxDao.getValoresDominio("OBJETOAVALUO");
				else {
					getValoresDominioResult30 = null ;	
				}
				
				if(selectSector==null || selectSector.length<1)
					getValoresDominioResult31.token = dominiosAuxDao.getValoresDominio("SECTOR");
				else {
					getValoresDominioResult31 = null ;
				}
				
				if(selecttipovivienda==null || selecttipovivienda.length<1)
					getValoresDominioResult6.token = dominiosAuxDao.getValoresDominio("TIPOVIVIENDA");
				else {
					getValoresDominioResult6 = null ;
				}
				
				if(selectusoinmueble==null || selectusoinmueble.length<1)
					getValoresDominioResult7.token = dominiosAuxDao.getValoresDominio("USOINMUEBLE");
				else {
					getValoresDominioResult7 = null ;
				}
				
				if(selectclaseinmueble==null || selectclaseinmueble.length<1)
					getValoresDominioResult8.token = dominiosAuxDao.getValoresDominio("CLASEINMUEBLE");
				else {
					getValoresDominioResult8 = null ;
				}
				
				if(selectcategoria==null || selectcategoria.length<1)
					getValoresDominioResult9.token = dominiosAuxDao.getValoresDominio("CATEGORIA");
				else {
					getValoresDominioResult9 = null ;
				}
				
				if(selectubicacion2==null || selectubicacion2.length<1)
					getValoresDominioResult10.token = dominiosAuxDao.getValoresDominio("UBICACION2");
				else {
					getValoresDominioResult10 = null ;
				}
				
				if(selectafirmarusoactual==null || selectafirmarusoactual.length<1)
					getValoresDominioResult33.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
				else {
					getValoresDominioResult33 = null ;
				}
				
				if(selectubicacion3==null || selectubicacion3.length<1)
					getValoresDominioResult11.token = dominiosAuxDao.getValoresDominio("UBICACION3");
				else {
					getValoresDominioResult11 = null ;
				}
				
				if(selectafirmarcercafuenthidri==null || selectafirmarcercafuenthidri.length<1)
					getValoresDominioResult12.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
				else {
					getValoresDominioResult12 = null ;	
				}
				
				if(selectestadoconservacion==null || selectestadoconservacion.length<1)
					getValoresDominioResult13.token = dominiosAuxDao.getValoresDominio("ESTADOCONSERVACION");
				else {
					getValoresDominioResult13 = null ;
				}
				
				if(selectestructura==null || selectestructura.length<1)
					getValoresDominioResult14.token = dominiosAuxDao.getValoresDominio("ESTRUCTURA");
				else {
					getValoresDominioResult14 = null ;
				}
				
				if(selectfachada==null || selectfachada.length<1)
					getValoresDominioResult16.token = dominiosAuxDao.getValoresDominio("FACHADA");
				else {
					getValoresDominioResult16 = null ;
				}
				
				if(selectcubierta==null || selectcubierta.length<1)
					getValoresDominioResult18.token = dominiosAuxDao.getValoresDominio("CUBIERTA");
				else {
					getValoresDominioResult18 = null ;
				}
				
				if(selectparapetos==null || selectparapetos.length<1)
					getValoresDominioResult38.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
				else {
					getValoresDominioResult38 = null ;
				}
				
				if(selectgolpeteo==null || selectgolpeteo.length<1)
					getValoresDominioResult22.token = dominiosAuxDao.getValoresDominio("GOLPETEO");
				else {
					getValoresDominioResult22 = null ;
				}
				
				if(selectubicacion==null || selectubicacion.length<1)
					getValoresDominioResult27.token = dominiosAuxDao.getValoresDominio("UBICACION");
				else {
					getValoresDominioResult27 = null ;
				}
				//dominiosAuxDao.
				
				if(selectdescliq0==null || selectdescliq0.length<1)
					getValoresDominioResult28.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq1==null || selectdescliq1.length<1)
					getValoresDominioResult69.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq2==null || selectdescliq2.length<1)
					getValoresDominioResult70.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq3==null || selectdescliq3.length<1)
					getValoresDominioResult71.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq4==null || selectdescliq4.length<1)
					getValoresDominioResult72.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq5==null || selectdescliq5.length<1)
					getValoresDominioResult73.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq6==null || selectdescliq6.length<1)
					getValoresDominioResult74.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq7==null || selectdescliq7.length<1)
					getValoresDominioResult75.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq8==null || selectdescliq8.length<1)
					getValoresDominioResult76.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				if(selectdescliq9==null || selectdescliq9.length<1)
					getValoresDominioResult77.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
				
				var dominio:DominiosAux = new DominiosAux();
				dominio.rvDomain = "TIPOIDENTIFICACION";
				getValoresTipoDocumento.token = dominiosAuxDao.getValoresDominioProcedatos(dominio);
				getValoresDominioResult.token = dominiosAuxDao.getValoresDominioProcedatos(dominio);
			}
			
			public function setTexto(t:String):void
			{
			}
			
			public function setPermisos(listaPermisos:Permiso):void
			{
				myListaPermisos = listaPermisos;
			}
			
			public function getPermisos():Permiso
			{
				return myListaPermisos;
			}
			
			/**
			 * Ejecuta la prevalidación del avaluo en modo de edición.
			 * */
			public function ejecutar():void
			{
				
				//01Ago2013
				//Activar el acordeon para que el componente no sea null
				
				if(acdAvaluo != null){
					var indice:int = acdAvaluo.selectedIndex;
					acdAvaluo.selectedIndex=3;
					acdAvaluo.validateNow();
					var indice2:int =0; 
					try{
						tbnAvaluosConstruccion.validateNow();
						indice2 = tbnAvaluosConstruccion.selectedIndex;
						tbnAvaluosConstruccion.selectedIndex=1;
						tbnAvaluosConstruccion.validateNow();
						tbnAvaluosConstruccion.selectedIndex=2;
						tbnAvaluosConstruccion.validateNow();
						//tbnAvaluosConstruccion.getChildByName(cbxReqCondSalubirda) as 
						tbnAvaluosConstruccion.selectedIndex=3;
						tbnAvaluosConstruccion.validateNow();					
						tbnAvaluosConstruccion.selectedIndex=indice2;
						tbnAvaluosConstruccion.validateNow();
					}
					catch(e:Error)
					{
						trace(e);
					}
					
					acdAvaluo.selectedIndex=indice;
					acdAvaluo.validateNow();
					
					
					
					var propiedidadHor:String;
					var reqCondSalub:String;
					
					if((avaluo2 != null) && (avaluo2.idAvaluo != null) && (avaluo2.idAvaluo.length > 0))
					{
						if((avaluo2.informacionInmueble != null) && (avaluo2.informacionInmueble.length > 0)) {
							categoria.rvLowValue = (avaluo2.informacionInmueble[0] as InformacionInmueble).idCategoria;
						}
						else { 
							categoria = null;
						}
						
						if((avaluo2.informacionConstruccion != null) && (avaluo2.informacionConstruccion.length > 0)) {
							//var avaluo2.informacionConstruccion[0] as informacionConstruccion
							propiedidadHor = ((avaluo2.informacionConstruccion[0] as InformacionConstruccion).propiedadHorizontal as String);
						}
						else { 
							propiedidadHor = null;
						}
						
						if((avaluo2.condicionSalubridad != null) && (avaluo2.condicionSalubridad.length > 0)) {
							
							//var cond:CondicionesSalubridad;
							//cond = avaluo2.condicionSalubridad[0] as CondicionesSalubridad;
							//requiereCondicionesSalubridad = cond.requiereCondicionesSalubridad as String;
							
							//requiereCondicionesSalubridad = (((avaluo2.condicionSalubridad[0] as CondicionesSalubridad).requiereCondicionesSalubridad) as String);
							
							
							//						//01Ago2013												
							if((cbxReqCondSalubirda != null) && (cbxReqCondSalubirda.selectedIndex > -1)) {
								reqCondSalub = cbxReqCondSalubirda.selectedItem.rvLowValue;
							}
							
						}
						else { 					
							reqCondSalub = null;
							
						}
						
						if(avaluo2.condicionSalubridad!=null)
						{	
							if((reqCondSalub == null) && (avaluo2.condicionSalubridad.length > 0))						
							{
								var cond:CondicionesSalubridad;
								cond = avaluo2.condicionSalubridad[0] as CondicionesSalubridad;
								reqCondSalub=cond.idCondicionSalubridad;						
							}	
						}
						
						if((categoria != null) && (categoria.rvLowValue != null) && (propiedidadHor!=null) && (reqCondSalub!=null) ){
							
							///Recorrer todos los componentes y acordeones para  activarlos y que puedean ser validados.
							recorrerAcordeones();
							//Limpiar validaciones anteriores de los campos 
							limpiarCampoRequeridoDTOlist(ListaCampos(1,true));
							
							prevalidarResult.token = avaluosService.prevalidar(avaluo2.idAvaluo);
						}
						else {
							//Alert.show("Para ejecutar la validación debe seleccionar una categoria del inmueble.\n\nRecuerde seleccionar la categoria y guardar la sección en información del inmueble.","INFO");											
							
							try{
								// Alert.show("categoria :"   +categoria.toString()   ,"INFO", null, null, null, null, Alert.OK);
								categoria.toString(); 
							}catch(e:Error){
								trace(e);};
							
							try{
								// Alert.show("categoria.rvLowValue :"   +categoria.rvLowValue.toString()   ,"INFO", null, null, null, null, Alert.OK);
								categoria.rvLowValue.toString(); 
							}catch(e:Error){trace(e);};
							
							try{
								// Alert.show("propiedidadHor :"   +propiedidadHor.toString()   ,"INFO", null, null, null, null, Alert.OK);
								propiedidadHor.toString(); 
							}catch(e:Error){trace(e);};
							
							try{
								// Alert.show("reqCondSalub :"   +reqCondSalub.toString()   ,"INFO", null, null, null, null, Alert.OK);
								reqCondSalub.toString(); 
							}catch(e:Error){trace(e);};
							
							
							Alert.show(
								"Para ejecutar la validación debe seleccionar y guardar sección:\n"+
								"-	Categoría (Sec. Información del inmueble)\n"+
								"-	Sometido P.H (Sec. Información construcción)\n"+
								"-	Condiciones de salubridad (Sec. Información construcción)"								
								,"INFO", null, null, null, null, Alert.OK);
						}
					}
					else{
						Alert.show("Para ejecutar la validación debe estar en el modo de edición del avaluo","INFO", null, null, null, null, Alert.OK);
					}
				}else {
					Alert.show("Para ejecutar la validación debe estar en el modo de edición del avaluo","INFO", null, null, null, null, Alert.OK);					
				}
				
			}				
			public function validaAvaluo():void
			{
				var propiedidadHor:String;
				var reqCondSalub:String;
				
				if((avaluo2 != null) && (avaluo2.idAvaluo != null) && (avaluo2.idAvaluo.length > 0))
				{
					if((avaluo2.informacionInmueble != null) && (avaluo2.informacionInmueble.length > 0)) {
						categoria.rvLowValue = (avaluo2.informacionInmueble[0] as InformacionInmueble).idCategoria;
					}
					else { 
						categoria = null;
					}
					
					if((avaluo2.informacionConstruccion != null) && (avaluo2.informacionConstruccion.length > 0)) {
						//var avaluo2.informacionConstruccion[0] as informacionConstruccion
						propiedidadHor = ((avaluo2.informacionConstruccion[0] as InformacionConstruccion).propiedadHorizontal as String);
					}
					else { 
						propiedidadHor = null;
					}
					
					if((avaluo2.condicionSalubridad != null) && (avaluo2.condicionSalubridad.length > 0)) {
						
						/*var cond:CondicionesSalubridad;
						cond = avaluo2.condicionSalubridad[0] as CondicionesSalubridad;
						requiereCondicionesSalubridad = cond.requiereCondicionesSalubridad as String;*/
						
						//requiereCondicionesSalubridad = (((avaluo2.condicionSalubridad[0] as CondicionesSalubridad).requiereCondicionesSalubridad) as String);
						
						
						if((cbxReqCondSalubirda != null) && (cbxReqCondSalubirda.selectedIndex > -1)) {
							reqCondSalub = cbxReqCondSalubirda.selectedItem.rvLowValue;
						}
						
					}
					else { 
						reqCondSalub = null;
					}
					
					if((categoria != null) && (categoria.rvLowValue != null) && (propiedidadHor!=null) && (reqCondSalub!=null) ){
						
						/*
						Recorrer todos los componentes y acordeones para  activarlos y que puedean ser validados.
						*/
						recorrerAcordeones();
						/*
						Limpiar validaciones anteriores de los campos 
						*/
						limpiarCampoRequeridoDTOlist(ListaCampos(1,true));
						
						prevalidarResult.token = avaluosService.prevalidar(avaluo2.idAvaluo);
						
					}
					else {
						//Alert.show("Para ejecutar la validación debe seleccionar una categoria del inmueble.\n\nRecuerde seleccionar la categoria y guardar la sección en información del inmueble.","INFO");
						Alert.show("Para ejecutar la validación debe seleccionar una categoria del inmueble, seleccionar si esta sometido a propiedad horizontal y si requiere condiciones de salubridad.\n\nRecuerde seleccionar la categoria y guardar la sección en información del inmueble y seleccionar si esta sometido a propiedad horizontal y si requiere condiciones de salubridad y guardar la informacion de la construccion. Ad","INFO", null, null, null, null, Alert.OK);
					}
				}
				else{
					Alert.show("Para ejecutar la validación debe estar en el modo de edición del avaluo","INFO", null, null, null, null, Alert.OK);
				}
			}
			
			
			/**
			 * Permite crear un nuevo avaluo, en este paso crea únicamente la información básica.
			 * */
			public function adicionar():void
			{
				if(myUsuario.codigoPerfil == "PGBADMINIST01") {
					Alert.show("El administrador del sistema no tiene autorización para crear avaluos","INFO", null, null, null, null, Alert.OK);
				}
				else{
					nombreSeccion = "encanbezado";
					if(btnGuardarEncabezado!=null){
						btnGuardarEncabezado.visible=true;
						if(btnGuardarEncabezadoCon!=null){
							btnGuardarEncabezadoCon.visible=false;
						}
					}
					avaluo.nombreSolicitante = "";
					avaluo.numeroIdentificacion = "";
					avaluo.barrio = "";
					avaluo.direccionInmueble = "";
					avaluo.matriculaInmobiliariaPpal1 = "";
					vstAvaluo.selectedIndex = 1;
					if(cbxTipoIdentificacionEncabezado != null){
						cbxTipoIdentificacionEncabezado.selectedIndex = 0;
					}
					if(acdAvaluo != null){
						acdAvaluo.selectedIndex = 0;
					}
					if(cbxCiudadBasico != null){
						cbxCiudadBasico.selectedItem= null ; 
					}
					if(cbxDepartamento != null){
						cbxDepartamento.selectedItem= null ;
					}
						
					selectCiudadbasico = new ArrayCollection(); 
					
					crearModuloEdicionFormulario(true); 
					
				}
				
			}	
			
			/**
			 * Recupera un objeto de una lista a partir del índice 
			 * @param target valor del indice correspondiente al objeto que se quiere recuperar. 
			 * @param fields Lista de objetos
			 * @param propiedad nombre de la propiedad mediante la cual se quiere consultar el objeto
			 * */
			public function getItemIndex(target:String, fields:ArrayCollection,propiedad:String ):int { 
				for(var x:int=0; x<fields.length; x++) { 
					if(fields[x][propiedad] == target) 
					{ return x; 
					} 
				} 
				return -1; 
			}
			
			/**
			 * Convierte a español los rótulos de un componente calendar.
			 * @parama dt Componente calendar.
			 * */
			private function dateChooser_init(dt:DateField):void {
				dt.dayNames=['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'];
				dt.monthNames=[	'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
					'Julio', 'Agosto', 'Septiembre', 'Octubre',
					'Noviembre', 'Diciembre'];
				dt.firstDayOfWeek = 1;
				dt.formatString = "DD/MM/YYYY";
			}
			
			var dateFormatter:DateFormatter;
			
			/**
			 * Permite consultar avaluos por los siguientes criterios de búsqueda: Tipo de identificación, número de identificación,
			 * Departamento, ciudad, dirección, Matricula inmobiliaria, estado, fecha, Nombre del Txt, número de línea,
			 * identificación del perito. 
			 * */
			public function consultar():void
			{
				impresionEnEdicion = new Boolean(false);
				var isTipoDoc:Boolean = (cbxTipoIdentificacion != null) &&  (cbxTipoIdentificacion.selectedIndex > -1) ? true : false;
				var isDepto:Boolean = (cbxDepartamentoFiltro != null) &&  (cbxDepartamentoFiltro.selectedIndex > -1) ? true : false;
				var isCiudad:Boolean = (cbxCiudadFiltro != null) &&  (cbxCiudadFiltro.selectedIndex > -1) ? true : false;
				var isNumDcto:Boolean = (numeroIdentificacionTextInput != null) &&  (numeroIdentificacionTextInput.text.length > 0) ? true : false;
				var isDireccion:Boolean = (direccionInmuebleTextInput != null) &&  (direccionInmuebleTextInput.text.length > 0) ? true : false;
				var isMatricula:Boolean = (txtmatriculaInmobiliariaPpal1 != null) &&  (txtmatriculaInmobiliariaPpal1.text.length > 0) ? true : false;
				var isEstado:Boolean = (cbxEstadoAvaluo != null) &&  (cbxEstadoAvaluo.selectedIndex > -1) ? true : false;
				var isNombreTxt:Boolean = (txtNombreTxt != null) &&  (txtNombreTxt.text.length > 0) ? true : false;
				var isNumLinea:Boolean = (txtNumeroLinea != null) &&  (txtNombreTxt.text.length > 0) ? true : false;
				var isNombrePeritoTxt:Boolean = (txtNombrePerito != null) &&  (txtNombrePerito.text.length > 0) ? true : false;
				var isIdentificacionPeritoTxt:Boolean = (txtIdentificacionPerito != null) &&  (txtIdentificacionPerito.text.length > 0) ? true : false;
				var isFechaAvaluoFiltro:Boolean = (fechaAvaluoFiltro != null) &&  (fechaAvaluoFiltro.text.length > 0) ? true : false;
				var isFechaCreacionDesde:Boolean = (fechaCreacionDesde != null) &&  (fechaCreacionDesde.text.length > 0) ? true : false;
				var isFechaCreacionHasta:Boolean = (fechaCreacionHasta != null) &&  (fechaCreacionHasta.text.length > 0) ? true : false;
				
				var isFechaAvaluoFiltroHasta:Boolean = (fechaAvaluoFiltroHasta != null) &&  (fechaAvaluoFiltroHasta.text.length > 0) ? true : false;
				
				if ( isTipoDoc || isDepto || isCiudad || isNumDcto || isDireccion || isMatricula|| isEstado || isNombreTxt  || isNumLinea 
					|| isNombrePeritoTxt || isFechaAvaluoFiltro || isIdentificacionPeritoTxt || isFechaCreacionDesde || isFechaCreacionHasta)
				{
					if (isTipoDoc && !(isDepto || isCiudad || isNumDcto || isDireccion || isMatricula || isEstado || isIdentificacionPeritoTxt
						|| isNombreTxt || isNumLinea || isNombrePeritoTxt || isFechaAvaluoFiltro || isFechaCreacionDesde || isFechaCreacionHasta))
					{
						Alert.show("No esta permitido realizar consultas por Tipo de Documento Únicamente", "INFO", null, null, null, null, Alert.OK);
					}
					else if(isDepto && !(isTipoDoc || isCiudad || isNumDcto || isDireccion || isMatricula || isEstado || isIdentificacionPeritoTxt
						|| isNombreTxt || isNumLinea || isNombrePeritoTxt || isFechaAvaluoFiltro || isFechaCreacionDesde || isFechaCreacionHasta))
					{
						Alert.show("No esta permitido realizar consultas por Departamento Únicamente", "INFO", null, null, null, null, Alert.OK);
					}
					else if(isCiudad && !(isTipoDoc || isDepto || isNumDcto || isDireccion || isMatricula || isEstado || isIdentificacionPeritoTxt
						|| isNombreTxt || isNumLinea || isNombrePeritoTxt || isFechaAvaluoFiltro || isFechaCreacionDesde || isFechaCreacionHasta))
					{
						Alert.show("No esta permitido realizar consultas por Ciudad Únicamente", "INFO", null, null, null, null, Alert.OK);
					}
					else
					{
						
						informacionInmueble.matriculaInmobiliariaPpal1 = txtmatriculaInmobiliariaPpal1.text.concat(txtmatriculaInmobiliariaPpal2.text);
						if(cbxTipoIdentificacion.selectedIndex > -1) {
							informacionInmueble.avaluo.idTipoIdentificacion = cbxTipoIdentificacion.selectedItem.rvLowValue;					
						}						
						informacionInmueble.avaluo.numeroIdentificacion = numeroIdentificacionTextInput.text;
						
						if(cbxDepartamentoFiltro.selectedIndex > -1){
							informacionInmueble.avaluo.idDepartamento = cbxDepartamentoFiltro.selectedItem.codAsobancaria;
						}
						if(cbxEstadoAvaluo.selectedIndex > -1)
						{
							informacionInmueble.avaluo.estadoAvaluo = cbxEstadoAvaluo.selectedItem.rvLowValue;
						}
						var empresaAvaluo:EmpresasAvaluos = new EmpresasAvaluos();
						empresaAvaluo.numeroDocumento = myUsuario.codigoUsuario;
						empresaAvaluo.usuarioTransaccion = myUsuario.codigoPerfil
						empresaAvaluo.descEmpresa = txtNombrePerito.text;
						informacionInmueble.avaluo.objCiudad = cbxCiudadFiltro.selectedItem;
						informacionInmueble.avaluo.direccionInmueble = direccionInmuebleTextInput.text;
						var logsGenera:LogsGeneraArchivo = new LogsGeneraArchivo();
						logsGenera.nombrePlano = txtNombreTxt.text;
						informacionInmueble.avaluo.logsGeneraArchivo = logsGenera; 
						informacionInmueble.avaluo.numLinea = txtNumeroLinea.text;
						informacionInmueble.avaluo.fechaAvaluo = fechaAvaluoFiltro.selectedDate;
						informacionInmueble.avaluo.TUsuario = txtIdentificacionPerito.text;
						informacionInmueble.avaluo.fechaCreacion = fechaCreacionDesde.selectedDate;
						
						//informacionInmueble.avaluo.fechaAvaluoTetxo .fechaCreacion = fechaCreacionDesde.selectedDate;
						
						dateFormatter = new DateFormatter();
						//formatString="DD/MM/YYYY"
						dateFormatter.formatString = 'DD/MM/YYYY'
						var formato:String = dateFormatter.format(fechaAvaluoFiltroHasta.selectedDate);
						
						if((formato != null) &&  (formato.length > 0))
						{
							//informacionInmueble.avaluo.fechaAvaluoTetxo = fechaAvaluoFiltroHasta.selectedDate.dateUTC;						
							informacionInmueble.avaluo.fechaAvaluoTetxo = formato;
						}	
						
						if(fechaCreacionHasta.selectedDate != null)
						{
							fechaCreacionHasta.selectedDate.setHours(23,59,59,999);
						}
						
						if(myUsuario.codigoPerfil == "PGBPERITO03")
						{
							informacionInmueble.avaluo.usuarioCreacion = myUsuario.cedulaEmpleado ; 
						}	
						
						informacionInmueble.avaluo.fechaTransaccion = fechaCreacionHasta.selectedDate;						
						infoInmueble = informacionInmueble;
						
						if(chkConstructorFiltro.selected)
						{	
							informacionInmueble.avaluo.tipoInforme="2";
							//informacion construccion estado terminado nuevo
						}
						else
						{
							informacionInmueble.avaluo.tipoInforme=null;
						}	
						empresaAvaluo = empresaAvaluo;
						getAvaluosPorCriterioResult.token = avaluosService.getAvaluosPorCriterio(informacionInmueble,empresaAvaluo);
						limpiarControles();
					}
				}
				else
				{
					Alert.show("Debe seleccionar como mínimo un criterio de búsqueda", "INFO", null, null, null, null, Alert.OK);
				}
				parentApplication.validateNow();
			}							
			
			private static const IMPRESION_MASIVA:Number = 100;
			/**
			 * Genera el reporte PDF con la información del avaluo seleccionado
			 * */
			public function imprimir():void
			{
				if(dtgAvaluos.selectedItem == null){
					//Alert.show("Debe seleccionar un avalúo");
					// if(vstAvaluo.selectedIndex == 0){
					
					if(impresionEnEdicion){
						if(!imprAprobar){
							aprobarPostValidar = false; 
							imprimirEnEdicion.token = avaluosService.getAvaluosPorId(avaluo2.idAvaluo);
						}else {
							var request:URLRequest = new URLRequest();
							request.method = "POST";
							request.url = "ReporteAvaluo/"+avaluo2.consecutivoBanco+".pdf";
							navigateToURL(request,"_blank");
							aprobarPostValidar = new Boolean(false);								
						}
					}else { 
						if(getAvaluosPorCriterioResult.lastResult != null){
							if(getAvaluosPorCriterioResult.lastResult.length > 0){
								if(getAvaluosPorCriterioResult.lastResult.length <= IMPRESION_MASIVA){	
									//Alert.show("Esta seguro de imprimir masivamente? Esto tomara mas tiempo. de lo contrario seleccione un avalúo para impresión individual", "Confirmar Impresión Masiva",  Alert.YES | Alert.NO, null,confirmPrintHandler, null, Alert.NO);
									Alert.show("¿Está seguro de imprimir masivamente?, esto tomara más tiempo. De lo contrario seleccione un avalúo para impresión individual", "Confirmar Impresión Masiva",  Alert.YES | Alert.NO, null,confirmPrintHandler, null, Alert.NO);
								}else{
									var isFechaAvaluoFiltro:Boolean = (fechaAvaluoFiltro != null) &&  (fechaAvaluoFiltro.text.length > 0) ? true : false;
									var isFechaCreacionDesde:Boolean = (fechaCreacionDesde != null) &&  (fechaCreacionDesde.text.length > 0) ? true : false;
									var isFechaCreacionHasta:Boolean = (fechaCreacionHasta != null) &&  (fechaCreacionHasta.text.length > 0) ? true : false;							
									var isFechaAvaluoFiltroHasta:Boolean = (fechaAvaluoFiltroHasta != null) &&  (fechaAvaluoFiltroHasta.text.length > 0) ? true : false;
									
									if((isFechaAvaluoFiltro && isFechaAvaluoFiltroHasta)&&fechaAvaluoFiltro.text==fechaAvaluoFiltroHasta.text)
									{
										//Alert.show("Esta seguro de imprimir masivamente? Esto tomara mas tiempo y se imprimirá en lotes de "+IMPRESION_MASIVA+" Avalúos; De lo contrario seleccione un avalúo para impresión individual", "Confirmar Impresión Masiva",  Alert.YES | Alert.NO, null,confirmPrintHandler, null, Alert.NO);
										Alert.show("¿Está seguro de imprimir masivamente?, esto tomara más tiempo y se imprimirá en lotes de "+IMPRESION_MASIVA+" avalúos. De lo contrario seleccione un avalúo para impresión individual", "Confirmar Impresión Masiva",  Alert.YES | Alert.NO, null,confirmPrintHandler, null, Alert.NO);
									}
									else
									{
										Alert.show("Solo puede imprimir simultáneamente "+IMPRESION_MASIVA+" avaluos. Por favor filtre mas su consulta");
										
									}													
								}
							}
						}else{
							Alert.show("No hay registros para impresión");
						}						
					}
				} else {        // cuando se selecciona un item de la lista de avaluos  
					var avaluoForPrint:Avaluo = dtgAvaluos.selectedItem as Avaluo;
					if(imprAprobar)
					{						
						avaluoForPrint.estadoAvaluo = "3";						
					}
					if(avaluoForPrint.estadoAvaluo == "3")
					{
						var request:URLRequest = new URLRequest();
						request.method = "POST";
						request.url = "ReporteAvaluo/"+avaluoForPrint.consecutivoBanco+".pdf";
						navigateToURL(request,"_blank");
					}else
					{
						imprimirEnEdicion.token = avaluosService.getAvaluosPorId(avaluoForPrint.idAvaluo);
					}
				}
				parentApplication.validateNow();
			}							
			
			private function confirmPrintHandler(e:CloseEvent):void {
				if (e.detail == Alert.YES) {
					if(getAvaluosPorCriterioResult.lastResult!=null)
					{ 	 
						var lote:int=0;
						
						var idAvaluos:String;
						idAvaluos="";
						
						var reportes:ArrayCollection=new ArrayCollection();
						
						// delete logic //
						/*
						getAvaluosPorCriterioResult.lastResult.id*/
						for each(var avaTmp1:Object in getAvaluosPorCriterioResult.lastResult)
						{
							var avaTmp2:Avaluo = avaTmp1 as Avaluo;
							
							if(avaTmp2.estadoAvaluo != "3" && !validarImpresionAvaluo(avaTmp2) ){
								return ; 
							}
							
							if(idAvaluos=="")
							{
								idAvaluos=idAvaluos+avaTmp2.idAvaluo;
								lote++;
							}
							else
							{
								idAvaluos=idAvaluos+","+avaTmp2.idAvaluo;
								lote++;
							}
							
							if(lote==IMPRESION_MASIVA)
							{
								var request:URLRequest = new URLRequest();
								request.method = "POST";
								request.url = "ReportServlet?idAvaluos="+idAvaluos;
								//navigateToURL(request,"_blank");
								//callLater(callLater, [navigateToURL, [request,"_blank"]]);
								reportes.addItem(request);
								idAvaluos="";
								lote=0;
							}	
							
						}
						
						if(lote>0)
						{	
							var request:URLRequest = new URLRequest();
							request.method = "POST";
							request.url = "ReportServlet?idAvaluos="+idAvaluos;
							//navigateToURL(request,"_blank");
							//callLater(callLater, [navigateToURL, [request,"_blank"]]);
							reportes.addItem(request);
						}
						
						openWindowsReportes(reportes,0);
						
					}
					else
					{
						Alert.show("No hay avaluos a imprimir.",null, null, null, null, null, Alert.OK);
					}	
				} 
			}
			
			private function openWindowsReportes(reportes:ArrayCollection,n: Number):void
				
			{
				if (n < reportes.length)
					
				{
					navigateToURL(reportes.getItemAt(n) as URLRequest, "_blank");
					callLater(callLater, [openWindowsReportes, [reportes,n+1]]);
				}
			}
			
			/**
			 * Permite ingresar al modo de edición del avaluo seleccionado. 
			 * */
			public function editar():void
			{
				if (dtgAvaluos.selectedItem != null)
				{
					avaluo2 = dtgAvaluos.selectedItem as Avaluo;
					getAvaluosPorIdResult.token = avaluosService.getAvaluosPorId(avaluo2.idAvaluo);
					if(acdAvaluo != null){
						acdAvaluo.selectedIndex = 0; 
						acdAvaluo.setFocus();
					}
					dtgAvaluos.selectedItem = null; 
					impresionEnEdicion = new Boolean(true); 
					
					crearModuloEdicionFormulario(false);  
				}
				else
				{
					Alert.show("Debe seleccionar un avalúo",null, null, null, null, null, Alert.OK);
				}
				parentApplication.validateNow();
			}	
				
			
			public function eliminar():void	
			{
				limpiarTodosFormularios(); 
				vstAvaluo.selectedIndex = 0;
			}
			
			protected function comboBox_creationCompleteHandler(event:FlexEvent):void
			{
				if (selectTipoId == null || selectTipoId.length < 1){
					var dominio:DominiosAux = new DominiosAux();
					dominio.rvDomain = "TIPOIDENTIFICACION";
					getValoresDominioResult.token = dominiosAuxDao.getValoresDominioProcedatos(dominio);
				}
				if(cbxTipoIdentificacionEncabezado != null){
					cbxTipoIdentificacionEncabezado.selectedIndex = 0;
				}				
			}
			
			/**
			 * Ejecuta la acción al pulsar el botón crear en el formulario de crear avaluo.
			 * Consume el WebService ServiciosTercerosWSPort.
			 * */
			protected function btnGuardarEncabezado_clickHandler(event:MouseEvent):void
			{
				nombreSeccion = "encanbezado";
				
				/*if(cbxTipoInforme.selectedIndex == 1)
				{
				Alert.show("Recuerde diligenciar el avance de obra menor al 70% para que sea proyecto constructor");	
				}
				else*/
				/*
				if(cbxTipoInforme.selectedIndex == -1)
				{
				Alert.show("El tipo de  Avaluo es requerido",null, null, null, null, null, Alert.OK);
				return;
				}
				*/
				if(nombreSolicitanteTextInput.text != null
					&& nombreSolicitanteTextInput.text.length > 0
					&& cbxTipoIdentificacionEncabezado.selectedItem != null 
					&& numeroIdentificacionTextInput2.text != null
					&& numeroIdentificacionTextInput2.text.length > 0
					&& fechaAvaluoDateField.text != null 
					&& fechaAvaluoDateField.text.length > 0
					&& cbxDepartamento.selectedItem != null 
					&& cbxCiudadEncabezado.selectedItem != null
					&& barrioTextInput.text != null 
					&& barrioTextInput.text.length > 0
					&& direccionInmuebleTextInput2.text != null 
					&& direccionInmuebleTextInput2.text.length > 0
					&& matriculaInmobiliariaPpal1TextInput2.text != null 
					&& matriculaInmobiliariaPpal1TextInput2.text.length > 0
					&& txtMatriculaInmobiliariaPpal2Encab.text != null
					&& txtMatriculaInmobiliariaPpal2Encab.text.length > 0)
				{
					//Consume ws para validar la direccion y en el manejador de la respuesta del ws graba la seccion
					
					// la validacion del formato de direccion se deja en tiempo de escritura
					// se habilita el guardado de la informacion debido a que la validacion de la direccion se realiza en tiempo de digitacion
					
					if(avaluo.direccionInmueble == null || avaluo.direccionInmueble.length == 0){
						imprimirMensaje("Un momento por favor. Se esta terminando de realizar la validación de la dirección.", "Validación de registro"); 
					}else{
						if(avaluo.direccionInmueble != direccionInmuebleTextInput2.text){
							imprimirMensaje("Un momento por favor. Se esta terminando de realizar la validación de la dirección.", "Validación de registro");
						}else {
							guardarEncabezado();							
						}						
					}
				}
				else
				{
					Alert.show("Debe diligenciar todos los campos",null, null, null, null, null, Alert.OK);
				}
			}
			
			/**
			 * Persiste los datos basicos de un nuevo avaluo.
			 * */
			protected function guardarEncabezado():void {
				
				//Ojo solo pruebas locales fvor borrar llamado a guardarEncabezado();
				//avaluo.direccionInmueble=direccionInmuebleTextInput2.text;
				
				avaluo.nombreSolicitante = nombreSolicitanteTextInput.text;
				avaluo.idTipoIdentificacion = cbxTipoIdentificacionEncabezado.selectedItem.rvLowValue;
				avaluo.tipoDocumento = cbxTipoIdentificacionEncabezado.selectedItem.rvAbbreviation;
				avaluo.numeroIdentificacion = numeroIdentificacionTextInput2.text;
				avaluo.fechaAvaluo = fechaAvaluoDateField.selectedDate;
				avaluo.codigoDaneDepartamento = cbxDepartamento.selectedItem.codDane;
				avaluo.idDepartamento = cbxDepartamento.selectedItem.idDepartamento;
				avaluo.ciudad = cbxCiudadEncabezado.selectedItem as Ciudad;
				avaluo.codigoDaneCiudad = cbxCiudadEncabezado.selectedItem.codDane;
				avaluo.idCiudad = cbxCiudadEncabezado.selectedItem.codAsobancaria;
				avaluo.objCiudad = cbxCiudadEncabezado.selectedItem;
				avaluo.barrio = barrioTextInput.text;
				avaluo.matriculaInmobiliariaPpal1 = matriculaInmobiliariaPpal1TextInput2.text.concat(txtMatriculaInmobiliariaPpal2Encab.text);
				avaluo.usuarioCreacion = myUsuario.codigoUsuario;
				avaluo.usuarioTransaccion = myUsuario.codigoUsuario;
				avaluo.TUsuario = myUsuario.codigoUsuario;
				
				if(chkTipoInforme.selected == false )
				{
					avaluo.tipoInforme = "1";
				}
				else if(chkTipoInforme.selected == true )
				{
					avaluo.tipoInforme = "2";
					//Alert.show("Recuerde diligenciar el avance de obra menor al 70% para que sea proyecto constructor",null, null, null, null, null, Alert.OK);
					Alert.show("Recuerde que debe marcar la vivienda como nueva y terminada para que sea proyecto constructor",null, null, null, null, null, Alert.OK);
				}
				
				/*
				if(cbxTipoInforme.selectedItem=="Individual")
				{	
				avaluo.tipoInforme = "1";
				}
				else if(cbxTipoInforme.selectedItem=="Constructor")
				{	
				avaluo.tipoInforme = "2";
				}
				*/
				
				avaluo.idObjetoAvaluo="1";
				createResult.token = avaluosService.create(avaluo);
				
				/*
				if(cbxTipoInforme.selectedItem=="Constructor")
				{	
				Alert.show("Recuerde diligenciar el avance de obra menor al 70% para que sea proyecto constructor",null, null, null, null, null, Alert.OK);				
				}
				*/
				
				dtgAvaluos.invalidateDisplayList();
				dtgAvaluos.invalidateList();
				limpiarControles();
				impresionEnEdicion = new Boolean(true);
				avaluo=new Avaluo();
			}
			
			/**
			 * Persiste los datos basicos de un nuevo avaluo.
			 * */
			protected function guardarConstructor():void {
				
				avaluo.nombreSolicitante = nombreSolicitanteTextInput.text;
				avaluo.idTipoIdentificacion = cbxTipoIdentificacionEncabezado.selectedItem.rvLowValue;
				avaluo.tipoDocumento = cbxTipoIdentificacionEncabezado.selectedItem.rvAbbreviation;
				avaluo.numeroIdentificacion = numeroIdentificacionTextInput2.text;
				avaluo.fechaAvaluo = fechaAvaluoDateField.selectedDate;
				avaluo.codigoDaneDepartamento = cbxDepartamento.selectedItem.codDane;
				//avaluo.idDepartamento = cbxDepartamento.selectedItem.idDepartamento;
				avaluo.idDepartamento = cbxDepartamento.selectedItem.codAsobancaria;;
				avaluo.ciudad = cbxCiudadEncabezado.selectedItem as Ciudad;
				avaluo.codigoDaneCiudad = cbxCiudadEncabezado.selectedItem.codDane;
				avaluo.idCiudad = cbxCiudadEncabezado.selectedItem.codAsobancaria;
				avaluo.objCiudad = cbxCiudadEncabezado.selectedItem;
				avaluo.barrio = barrioTextInput.text;
				avaluo.matriculaInmobiliariaPpal1 = matriculaInmobiliariaPpal1TextInput2.text.concat(txtMatriculaInmobiliariaPpal2Encab.text);
				avaluo.usuarioCreacion = myUsuario.codigoUsuario;
				avaluo.usuarioTransaccion = myUsuario.codigoUsuario;
				avaluo.TUsuario = myUsuario.codigoUsuario;			
				
				copiarAvaluoConstructorResult.token = avaluosService.copiarAvaluoConstructor(avaluo);
				//copiarAvaluoConstructorResult
				
				dtgAvaluos.invalidateDisplayList();
				dtgAvaluos.invalidateList();
				limpiarControles();
				avaluo=new Avaluo();
				
			}
			
			import mx.events.ValidationResultEvent;
			public var vResult:ValidationResultEvent;
			/**
			 * Ejecuta la acción al pulsar el botón guardar sección en el bloque información básica.
			 * Consume el WebService ServiciosTercerosWSPort.
			 * */
			protected function idBtnBasico_clickHandler(event:MouseEvent):void
			{	
				
				var valid:Boolean;
				
				vResult = LatitudNumberValidator.validate(coordenadasLatitudTextInput.text);
				
				if (vResult.type==ValidationResultEvent.VALID) {
					// Validation succeeded.
					valid=true;
				}
				else {
					// Validation failed.
					valid=false;
				}
				
				vResult = LongitudNumberValidator.validate(coordenadasLongitudTextInput.text);
				
				if (vResult.type!=ValidationResultEvent.VALID) {
					// Validation failed.
					valid=false;
				}
				
				if(direccionInmuebleTextInput3.text.length == 0){
					imprimirMensaje("La dirección no puede estar vacia, diligencie una dirección.", "Validación de registros"); 
					valid=false;
				}else{
					if(avaluo2.direccionInmueble == null || avaluo2.direccionInmueble.length == 0){
						imprimirMensaje("Un momento por favor. Se esta terminando de realizar la validación de la dirección. En un instante puede continuar ", "Validación de registros"); 
						valid=false;					
					}else {
						if(avaluo2.direccionInmueble != direccionInmuebleTextInput3.text){
							imprimirMensaje("Un momento por favor. Se esta terminando de realizar la validación de la dirección. En un instante puede continuar", "Validación de registro");
							valid=false;
						}
					}					
				}
				
				if(valid)
				{	
					//Consume ws para validar la direccion y en el manejador de la respuesta del ws graba la seccion
					nombreSeccion = "informacionBasica";
					
					//11 Jul 2013 Mantis 13739 Comentario 0061577 1. Dejar los campos obligatorios resaltados (coloreados) independiente que el contenido haya sido diligenciado o no.
					//limpiarCampoRequeridoDTOlist(ListaCampos(1));
					
					// la validacion del formato de direccion se deja en tiempo de escritura
					// se habilita el guardado de la informacion debido a que la validacion de la direccion se realiza en tiempo de digitacion
					
					//Ojo solo pruebas locales fvor borrar llamado a guardarInformacionBasica(); 
					guardarInformacionBasica();
				}
			}
			
			/**
			 * Actualiza los datos del bloque información básica
			 * */
			protected function guardarInformacionBasica():void {
				
				
				avaluo.nombreSolicitante = "";
				avaluo.idTipoIdentificacion = "";
				avaluo.numeroIdentificacion = "";
				avaluo.codigoDaneDepartamento = "";
				
				avaluo.sistemaCoordenadasBUA = "";
				avaluo.latitudSFBUA = "";
				avaluo.longitudSFBUA = "";
				avaluo.sistemaCoordenadasTxtBUA = "";
				
				if(avaluo.ciudad!=null)
					avaluo.ciudad.codDane = "";
				
				avaluo.barrio = "";
				avaluo.direccionInmueble = "";
				avaluo.matriculaInmobiliariaPpal1 = "";
				
				avaluo2.nombreSolicitante = nombreSolicitanteTextInput2.text;
				if((cbxIdTipoIdentificacion != null) && (cbxIdTipoIdentificacion.selectedIndex > -1)) {
					avaluo2.tipoDocumento = cbxIdTipoIdentificacion.selectedItem.rvAbbreviation;
				}
				if((cbxIdTipoIdentificacion != null) && (cbxIdTipoIdentificacion.selectedIndex > -1)) {
					avaluo2.idTipoIdentificacion = cbxIdTipoIdentificacion.selectedItem.rvLowValue;
				}
				
				//cambio de cedula
				avaluo2.consecutivoBanco=consecutivoBancoTextInput.text;
				
				avaluo2.numeroIdentificacion = numeroIdentificacionTextInput3.text;
				avaluo2.fechaAvaluo = fechaAvaluoDateField2.selectedDate;
				avaluo2.telefonoSolicitante = telefonoSolicitanteTextInput.text;
				avaluo2.celularSolicitante = celularSolicitanteTextInput.text;
				avaluo2.correoSolicitante = correoSolicitanteTextInput.text;
				if((cbxSector != null) && (cbxSector.selectedIndex > -1)) {
					avaluo2.sector = cbxSector.selectedItem.rvLowValue;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					avaluo2.objCiudad = cbxCiudadBasico.selectedItem;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					avaluo2.codigoDaneCiudad = cbxCiudadBasico.selectedItem.codDane;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					avaluo2.idCiudad = cbxCiudadBasico.selectedItem.codAsobancaria;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					avaluo2.codigoDaneDepartamento = cbxCiudadBasico.selectedItem.departamento.codDane;
				}
				avaluo2.nombreConjuntoEdificio = nombreConjuntoEdificioTextInput.text;
				avaluo2.barrio = barrioTextInput2.text;
				if((cbxMetodologia != null) && (cbxMetodologia.selectedIndex > -1)) {
					avaluo2.idMetodologia = cbxMetodologia.selectedItem.rvLowValue;
				}
				if((cbxObjetivo != null) && (cbxObjetivo.selectedIndex > -1)) {
					avaluo2.idObjetoAvaluo = cbxObjetivo.selectedItem.rvLowValue;
				}
				avaluo2.justificacion = justificacionTextInput.text;
				
				//var coordenadas:String = coordenadasLatitudTextInput.text+";"+coordenadasLongitudTextInput.text;
				//var coordenadas:String = coordenadasLatitudTextInput.text+","+coordenadasLongitudTextInput.text;
				
				//ubicacionGpsTextInput.text = coordenadas;
				
				avaluo2.ubicacionGps = ubicacionGpsTextInput.text;
				avaluo2.TUsuario = myUsuario.codigoUsuario;
				avaluo2.usuarioTransaccion = myUsuario.codigoUsuario;
				
				var liqTotal:ArrayCollection = new ArrayCollection();
				
				liqTotal.addItem(liquidacionAvaluoTotal);
				avaluo2.liquidacionTotal = liqTotal;
				
				//avaluo2.sistemaCoordenadasBUA 	= sisCoordBUATextInput.text;
				
				avaluo2.latitudSFBUA 			= coordenadasLatitud;
				avaluo2.longitudSFBUA 			= coordenadasLongitud;
				avaluo2.sistemaCoordenadasTxtBUA = sisCoordBUATxtTextInput.text;
				
				updateResult.token = avaluosService.update(avaluo2);				 
				
			}
			
			/**
			 * Crea o actualiza la informacíón del barrio.
			 * */
			protected function btnGuardarBarrio_clickHandler(event:MouseEvent):void
			{
				//11 Jul 2013 Mantis 13739 Comentario 0061577 1. Dejar los campos obligatorios resaltados (coloreados) independiente que el contenido haya sido diligenciado o no.
				//limpiarCampoRequeridoDTOlist(ListaCampos(1));
				
				
							
				informacionBarrio.avaluo = null;
				var avaluoTmp:Avaluo = new Avaluo();
				avaluoTmp.idAvaluo = avaluo2.idAvaluo;				
				avaluoTmp = avaluo2;
				informacionBarrio.avaluo = avaluoTmp;
				
				
				if((cbxEstadoVias != null) && (cbxEstadoVias.selectedIndex > -1)) {
					informacionBarrio.estadosViaAcceso = cbxEstadoVias.selectedItem.rvLowValue;
				}
				if((cbxEstrato != null) && (cbxEstrato.selectedIndex > -1)) {
					informacionBarrio.estrato = cbxEstrato.selectedItem.rvLowValue;
				}
				if((cbxEstrato != null) && (cbxEstrato.selectedIndex > -1)) {
					informacionBarrio.legalidad = cbxLegalidad.selectedItem.rvLowValue;
				}
				if((cbxEstrato != null) && (cbxEstrato.selectedIndex > -1)) {
					informacionBarrio.topografia = cbxTopografia.selectedItem.rvLowValue;
				}
				if((cbxEstrato != null) && (cbxEstrato.selectedIndex > -1)) {
					informacionBarrio.transporte = cbxTransporte.selectedItem.rvLowValue;
				}
				if(chkAcueductoSector != null){
					informacionBarrio.acueductoSector = chkAcueductoSector.selected ?"1":"0";
				}
				if(chkAcueducto != null){
					informacionBarrio.acueductoPredio = chkAcueducto.selected ?"1":"0";
				}
				if(chkAlcantarilladoSector != null){
					informacionBarrio.alcantarilladoSector = chkAlcantarilladoSector.selected ?"1":"0";
				}
				if(chkAlcantarillado != null){
					informacionBarrio.alcantarilladoPredio = chkAlcantarillado.selected ?"1":"0";
				}
				if(chkElectricidadSector != null){
					informacionBarrio.electricidadSector = chkElectricidadSector.selected ?"1":"0";
				}
				if(chkElectricidad != null){
					informacionBarrio.electricidadPredio = chkElectricidad.selected ?"1":"0";
				}
				if(chkGasSector != null){
					informacionBarrio.gasSector = chkGasSector.selected ?"1":"0";
				}
				if(chkGas != null){
					informacionBarrio.gasPredio = chkGas.selected ?"1":"0";
				}
				if(chkTelefonoSector != null){
					informacionBarrio.telefonoSector = chkTelefonoSector.selected ?"1":"0";
				}
				if(chkTelefono != null){
					informacionBarrio.telefonoPredio = chkTelefono.selected ?"1":"0";
				}
				if(chkIndustria != null){
					informacionBarrio.industria = chkIndustria.selected ?"1":"0";
				}
				if(viviendaTextInput != null){
					informacionBarrio.vivienda = viviendaTextInput.selected ?"1":"0";
				}
				if(comercioTextInput != null){
					informacionBarrio.comercio = comercioTextInput.selected ?"1":"0";
				}
				if(otrosUsosTextInput != null){
					informacionBarrio.otrosUsos = otrosUsosTextInput.selected ?"1":"0";
				}
				if(textoOtrosUsosTextInput != null){
					informacionBarrio.textoOtrosUsos = textoOtrosUsosTextInput.text;
				}
				if(pavimentadaTextInput != null){
					informacionBarrio.pavimentada = pavimentadaTextInput.selected ?"1":"2";
				}
				else {
					informacionBarrio.pavimentada = "2";
				}
				if(sardenelesTextInput != null){
					informacionBarrio.sardeneles = sardenelesTextInput.selected ?"1":"2";
				}
				else {
					informacionBarrio.sardeneles = "2";
				}
				if(andenesTextInput != null){
					informacionBarrio.andenes = andenesTextInput.selected ?"1":"2";
				}
				else {
					informacionBarrio.andenes = "2";
				}
				if(parquesTextInput != null){
					informacionBarrio.parques = parquesTextInput.selected ?"1":"0";
				}
				if(arborizacionTextInput != null){
					informacionBarrio.arborizacion = arborizacionTextInput.selected ?"1":"0";
				}
				if(paraderoTextInput != null){
					informacionBarrio.paradero = paraderoTextInput.selected ?"1":"0";
				}
				if(alamedasTextInput != null){
					informacionBarrio.alamedas = alamedasTextInput.selected ?"1":"0";
				}
				if(alumbradoTextInput != null){
					informacionBarrio.alumbrado = alumbradoTextInput.selected ?"1":"0";
				}
				if(zonasVerdesTextInput != null){
					informacionBarrio.zonasVerdes = zonasVerdesTextInput.selected ?"1":"0";
				}
				if(cicloRutasTextInput != null){
					informacionBarrio.cicloRutas = cicloRutasTextInput.selected ?"1":"0";
				}
				if(perspectivasTextInput != null){
					informacionBarrio.perspectivas = perspectivasTextInput.text;
				}
				if(edificacionesIgualesTextInput != null){
					informacionBarrio.edificacionesIguales = edificacionesIgualesTextInput.text;
				}
				informacionBarrio.usuarioTransaccion = myUsuario.codigoUsuario;
				nombreSeccion="InfoBarrio";
				
				if(tbnAvaluosBarrio.selectedIndex != 4)
				{
					isChangeTab=false;
					if(!guardarBarrioSinClick || event !=null){
						if(!guardarBarrioSinClick){
							guardarBarrioSinClick = new Boolean(true);							
						}else{
							guardarBarrioSinClick = new Boolean(false);							
						}
						if(event != null){
							event = null ; 
						}
						administrarPanelesBarrio();												
					}						
				}
				else if(tbnAvaluosBarrio.selectedIndex == 4)
				{
					isChangeTab=true;
					if(tbnAvaluosConstruccion != null){
						tbnAvaluosConstruccion.selectedIndex = 0;
					}
					if(!guardarBarrioSinClick || event !=null){
						if(!guardarBarrioSinClick){
							guardarBarrioSinClick = new Boolean(true);							
						}else{
							guardarBarrioSinClick = new Boolean(false);							
						}
					}
				}
				
				if ((avaluo2.informacionBarrio != null) && (avaluo2.informacionBarrio.length > 0)){
					informacionBarrio.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult2.token = barrioService.update(informacionBarrio);	
				}
				else {
					informacionBarrio.usuarioCreacion = myUsuario.codigoUsuario;
					informacionBarrio.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult2.token = barrioService.create(informacionBarrio);
				}
				//isChangeTab=true;
			}			
			
			import mx.core.UIComponent;
			import valueObjects.CampoRequeridoDTO;
			
			public function recorrerAcordeones():void
			{
				
				var indice:int = acdAvaluo.selectedIndex;
				var indice1:int = 0;
				var indice2:int = 0;
				
				acdAvaluo.selectedIndex=0;
				acdAvaluo.validateNow();
				acdAvaluo.selectedIndex=1;
				acdAvaluo.validateNow();
				var indice1:int=0;
				try{
					tbnAvaluosBarrio.validateNow();
					indice1 = tbnAvaluosBarrio.selectedIndex;
					tbnAvaluosBarrio.selectedIndex=0;
					tbnAvaluosBarrio.validateNow();
					tbnAvaluosBarrio.selectedIndex=1;
					tbnAvaluosBarrio.validateNow();
					tbnAvaluosBarrio.selectedIndex=2;
					tbnAvaluosBarrio.validateNow();
					tbnAvaluosBarrio.selectedIndex=3;
					tbnAvaluosBarrio.validateNow();
					tbnAvaluosBarrio.selectedIndex=4;
					tbnAvaluosBarrio.validateNow();
					tbnAvaluosBarrio.selectedIndex=indice1;
					tbnAvaluosBarrio.validateNow();
				}
				catch(e:Error)
				{
					trace(e);
				}	
				acdAvaluo.selectedIndex=2;
				acdAvaluo.validateNow();
				acdAvaluo.selectedIndex=3;
				acdAvaluo.validateNow();
				var indice2:int =0; 
				try{
					tbnAvaluosConstruccion.validateNow();
					indice2 = tbnAvaluosConstruccion.selectedIndex;
					tbnAvaluosConstruccion.selectedIndex=0;
					tbnAvaluosConstruccion.validateNow();
					tbnAvaluosConstruccion.selectedIndex=1;
					tbnAvaluosConstruccion.validateNow();
					tbnAvaluosConstruccion.selectedIndex=2;
					tbnAvaluosConstruccion.validateNow();
					tbnAvaluosConstruccion.selectedIndex=3;
					tbnAvaluosConstruccion.validateNow();
					tbnAvaluosConstruccion.selectedIndex=4;
					tbnAvaluosConstruccion.validateNow();
					tbnAvaluosConstruccion.selectedIndex=indice2;
					tbnAvaluosConstruccion.validateNow();
				}
				catch(e:Error)
				{
					trace(e);
				}	
				acdAvaluo.selectedIndex=4;
				acdAvaluo.validateNow();
				acdAvaluo.selectedIndex=5;
				acdAvaluo.validateNow();
				acdAvaluo.selectedIndex=6;
				acdAvaluo.validateNow();
				
				acdAvaluo.selectedIndex=indice;
				acdAvaluo.validateNow();
				
			}				
			
			protected function ListaCampos(categoria:int,todos:Boolean):ArrayCollection
			{
				var arrayDto : ArrayCollection = new ArrayCollection();
				var mapCampos:Object = new Object();
				
				
				mapCampos["nombreSolicitanteTextInput2"] = "T_NOMBRESOLICITANTE";
				mapCampos["cbxIdTipoIdentificacion"] = "C_IDTIPOIDENTIFICACION";
				mapCampos["cbxObjetivo"] = "C_IDOBJETOAVALUO";
				mapCampos["direccionInmuebleTextInput3"] = "T_DIRINMUEBLE";
				mapCampos["barrioTextInput2"] = "T_BARRIO";
				mapCampos["nombreConjuntoEdificioTextInput"] = "T_NOMBCONJEDIF";
				mapCampos["cbxDepartamentoBasico"] = "A_CODDANE_DEPTO";
				mapCampos["cbxCiudadBasico"] = "A_CODDANE_CIUDAD";
				mapCampos["cbxSector"] = "T_SECTOR";
				mapCampos["ubicacionGpsTextInput"] = "A_UBICGPS";
				//correoSolicitanteTextInput
				mapCampos["correoSolicitanteTextInput"] = "A_SOLCORREO";
				
				mapCampos["telefonoSolicitanteTextInput"] = "A_SOLTEL";
				//celularSolicitanteTextInput
				mapCampos["celularSolicitanteTextInput"] = "A_SOLCEL";
				
				mapCampos["justificacionTextInput"] = "T_JUSTIFICACION";
				//cbxMetodologia
				mapCampos["cbxMetodologia"] = "C_IDMETODOLOGIA";
				
				mapCampos["sisCoordBUATxtTextInput"] = "T_SISTEMA";
				
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_AVALUOS";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				
				mapCampos["edificacionesIgualesTextInput"] = "A_EDIIGUALES";
				mapCampos["cbxEstadoVias"] = "C_ESTVIAACCESO";
				mapCampos["cbxEstrato"] = "C_ESTRATO";
				mapCampos["cbxLegalidad"] = "C_LEGALIDAD";
				mapCampos["cbxTopografia"] = "C_TOPOGRAFIA";
				mapCampos["cbxTransporte"] = "C_TRANSPORTE";
				//OJO
				mapCampos["perspectivasTextInput"] = "T_PERSPECTIVAS";
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_INFBARRIO";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				
				mapCampos["cbxTipoVivienda"] = "C_TIPOVIVIENDA";
				mapCampos["cbxUso"] = "C_USOINMUEBLE";
				mapCampos["cbxClase"] = "C_CLASEINMUEBLE";
				mapCampos["cbxCategoria"] = "IDCATEGORIA";
				mapCampos["notariaTextInput"] = "T_NOTARIA";
				mapCampos["cbxCiudadEscritura"] = "C_CIUDADESCRITURA";
				mapCampos["matriculaInmobiliariaPpal1TextInput3"] = "T_MINMBPPAL1";
				mapCampos["matriculaInmobiliariaGaraje2TextInput"] = "T_MINMOBGJ2";
				mapCampos["matriculaInmobiliariaGaraje5TextInput"] = "T_MINMOBGJ5";
				// mapCampos["cbxusoInmuebleBUA"] = "C_USOINMUEBLE_BUA";
				mapCampos["catastralTextInput"] = "T_CATASTRAL_SF";
				
				//Condicion pgbavaluos
				//if ciudad== bogota
				if(cbxCiudadBasico!=null)
					if(cbxCiudadBasico.selectedItem!=null)
						if(((cbxCiudadBasico.selectedItem as Ciudad).codAsobancaria as String)==("149"))
							mapCampos["chipTextInput"] = "T_CHIP";
				
				if(todos==true)
					mapCampos["chipTextInput"] = "T_CHIP";
				
				var rvLowvalue:String=null;
				
				if(cbxCategoria!=null)
					if(cbxCategoria.selectedItem!=null)
						rvLowvalue = (cbxCategoria.selectedItem as Dominios).rvLowValue;
				
				/*rvLowvalue=(categoria.rvLowValue) as String;
				rvLowvalue=(categoria.rvLowValue) as String;*/
				
				
				
				//Condicion pgbavaluos
				//if != lote or loteurbano
				if(rvLowvalue!=null)
					if(rvLowvalue!='12' && rvLowvalue!='15')
						//if(categoria.rvLowValue!=12 && categoria.rvLowValue!=15)
						if(chkSinTerminarNueva!=null)	
							if(chkSinTerminarNueva.selected!=null)
								if(chkSinTerminarNueva.selected)
									//if enobra
									mapCampos["avanceObraTextInput"] = "T_AVANCEOBRA";
				
				if(todos==true)
					mapCampos["avanceObraTextInput"] = "T_AVANCEOBRA";
				
				//OJO
				mapCampos["cbxUbicacion2"] = "C_UBICACION2";
				mapCampos["otroUsoInmuebleTextInput"] = "T_OTROUSOINM";
				mapCampos["otroClaseTextInput"] = "T_OTROCLASE";
				mapCampos["cbxConstUsoActual"] = "A_EDICONSTUSO";
				mapCampos["numeroEscrituraTextInput"] = "T_NUMESCRITURA";
				mapCampos["fechaEscrituraDateField"] = "F_FECHAESCRITURA";
				mapCampos["matriculaInmobiliariaPpal2TextInput"] = "T_MINMBPPAL2";
				mapCampos["matriculaInmobiliariaGaraje3TextInput"] = "T_MINMOBGJ3";
				mapCampos["matriculaInmobiliariaDeposito1TextInput"] = "T_MINMOBDP1";
				mapCampos["cbxUbiaccionLocal"] = "C_UBICACION3";
				mapCampos["cbxDepartamentoEscritura"] = "C_DEPTOESCRITURA";
				mapCampos["matriculaInmobiliariaGaraje1TextInput"] = "T_MINMOBGJ1";
				mapCampos["matriculaInmobiliariaGaraje4TextInput"] = "T_MINMOBGJ4";
				mapCampos["txtMatriculaInmDeposito2"] = "T_MINMOBDP2";
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_INFINMUEBLE";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				
				mapCampos["pisosTextInput"] = "N_PISOS";
				mapCampos["cbxFuentesHidricas"] = "A_UBICFUENTESH";
				mapCampos["sotanosTextInput"] = "N_SOTANOS";
				//OJO
				mapCampos["cbxDistancia"] = "A_UBICNIVELZ";			
				mapCampos["vetustezTextInput"] = "N_VETUSTEZ";
				mapCampos["cbxAltura"] = "C_ALTURA";
				mapCampos["pisoInmuebleTextInput"] = "A_EDIPISO";
				mapCampos["cbxPisosBodega"] = "C_PISOSBODEGA";
				mapCampos["cbxEstadoConstruccion"] = "R_ESTCONS";
				
				//chkTerminadoNueva
				//chkSinTerminarNueva
				//avanceObraTextInput
				//chbTerminado
				//chbSinTerminar
				//chbRemodelado
				
				mapCampos["cbxEstadoConservacion"] = "C_ESTCONSERVACION";
				mapCampos["cbxEstructura"] = "C_ESTRUCTURA";
				//mapCampos["textoEstructuraTextInput"] = "T_ESTRUCTURA";
				// mapCampos["cbxMaterialesEstructura"] = "A_EDIMAT";
				//mapCampos["otroMaterialTextInput"] = "A_OTRO_MATERIAL";
				mapCampos["cbxFachada"] = "C_FACHADA";
				//mapCampos["textoFachadaTextInput"] = "T_FACHADA";
				mapCampos["cbxTipoFachada"] = "C_TIPOFACHADA";
				mapCampos["cbxCubierta"] = "C_CUBIERTA";
				//mapCampos["textoCubiertaTextInput"] = "T_CUBIERTA";
				mapCampos["cbxParapetosCubierta"] = "A_EDIPARAPET";
				//mapCampos["cbxUbiTanques"] = "A_DCELEVTANQ";
				//mapCampos["otraUbicacionTanqueTextInput"] = "A_OTRA_UBIC_TANQUE";
				//OJO
				//mapCampos["cbxLongLuces"] = "A_LUCES";
				
				//mapCampos["cbxSimetriaAltura"] = "A_EDISIMALT";
				//mapCampos["cbxSimetriaPlanta"] = "A_EDISIMPLANTA";				
				mapCampos["cbxirregularidadAlturaBUA"] = "C_IRRALTURA";
				mapCampos["cbxirregularidadPlantaBUA"] = "C_IRRPLANTA";
				
				//mapCampos["cbxSobrepeso"] = "A_SOBREPESO";
				mapCampos["cbxGolpeteo"] = "A_GOLPETEO";
				//mapCampos["cbxAsentamientos"] = "A_ASENTAMIENTOS";
				//mapCampos["cbxDanoPrevio"] = "A_DANOPREVIO";
				mapCampos["cbxdanoPrevioBUA"] = "C_DANOPREVIO";
				
				mapCampos["cbxreparadosBUA"] = "C_REPARADOS";
				
				mapCampos["salaTextInput"] = "N_SALA";				
				mapCampos["comedorTextInput"] = "N_COMEDOR";
				mapCampos["estudioTextInput"] = "N_ESTUDIO";
				mapCampos["totalGarajesTextInput"] = "N_TOTALGARAJES";
				mapCampos["cubiertoTextInput"] = "N_CUBIERTO";
				//estarHabitacionTextInput
				
				mapCampos["descubiertoTextInput"] = "N_DESCUBIERTO";
				//OJO
				mapCampos["cbxVentilacion"] = "C_VENTILACION";
				mapCampos["banioSocialTextInput"] = "N_BANIOSOCIAL";
				mapCampos["estarHabitacionTextInput"] = "N_ESTARHAB";				
				mapCampos["numeroHabitacionesTextInput"] = "N_HABITACIONES";
				mapCampos["usoExclusivoTextInput"] = "N_USOEXCLUSIVO";
				mapCampos["privadoTextInput"] = "N_PRIVADO";
				mapCampos["bahiaComunalTextInput"] = "N_BAHIACOMUNAL";
				mapCampos["banioPrivadoTextInput"] = "N_BANIOPRIVADO";
				mapCampos["cocinaTextInput"] = "N_COCINA";
				mapCampos["cuartoServicioTextInput"] = "N_CUARTOSERV";
				mapCampos["sencilloTextInput"] = "N_SENCILLO";
				mapCampos["dobleTextInput"] = "N_DOBLE";
				mapCampos["servidumbreTextInput"] = "N_SERVIDUMBRE";
				//OJO
				mapCampos["cbxIluminacion"] = "C_ILUMINACION";
				mapCampos["banioServicioTextInput"] = "N_BANIOSERVICIO";
				mapCampos["patioInteriorTextInput"] = "N_PATIOINT";
				mapCampos["terrazaTextInput"] = "N_TERRAZA";
				mapCampos["depositoTextInput"] = "N_DEPOSITO";
				mapCampos["jardinTextInput"] = "N_JARDIN";
				mapCampos["balconTextInput"] = "N_BALCON";
				mapCampos["zonaVerdePrivadaTextInput"] = "N_ZVERDEPRIV";
				mapCampos["localTextInput"] = "N_LOCAL";
				mapCampos["bodegaTextInput"] = "N_BODEGA";
				mapCampos["oficinaTextInput"] = "N_OFICINA";
				mapCampos["cbxEstadoPisos"] = "C_ESTPISOS";
				mapCampos["cbxEstadoMuros"] = "C_ESTMUROS";
				mapCampos["cbxEstadoTecho"] = "C_ESTTECHOS";
				mapCampos["cbxEstadoMadera"] = "C_ESTMADERA";
				mapCampos["cbxEstadoMetal"] = "C_ESTMETAL";
				mapCampos["cbxEstadobanos"] = "C_ESTBANIOS";
				mapCampos["cbxEstadoCocina"] = "C_ESTCOCINA";
				mapCampos["cbxCalidadPisos"] = "C_CALIDPISO";
				mapCampos["cbxCalidadMuros"] = "C_CALIDPISO";
				mapCampos["cbxCalidadTechos"] = "C_CALIDTECHO";
				mapCampos["cbxCalidadMadera"] = "C_CALIDCMADER";
				mapCampos["cbxCalidadMetal"] = "C_CALIDCMETAL";
				mapCampos["cbxCalidadBanos"] = "C_CALIDBANIO";
				mapCampos["cbxCalidadCocina"] = "C_CALIDCOCINA";
				//OJO
				mapCampos["cbxPorpiedadHorizontal"] = "C_PROPHORZ";
				
				var rvLowvaluePropHor:String = null;
				
				if(cbxPorpiedadHorizontal!=null)
					if(cbxPorpiedadHorizontal.selectedItem!=null)
						rvLowvaluePropHor = (cbxPorpiedadHorizontal.selectedItem as Dominios).rvLowValue;
				
				//OJO
				//Condicion pgbavaluos
				if(rvLowvalue!=null)
					if(rvLowvalue!='12' && rvLowvalue!='15')
						//if(categoria.rvLowValue!=12 && categoria.rvLowValue!=15)	
						//Nota 62182 mantis 13739
						/*if(rvLowvaluePropHor!=null)
						if(rvLowvaluePropHor=='1')*/
						/*
						if != lote or loteurbano
						if sometidoprophoriz*/
					{
						mapCampos["numeroEdificiosTextInput"] = "N_NUMEDIF";				
						mapCampos["unidadPorPisoTextInput"] = "N_UNDPISO";
						mapCampos["totalUnidadesTextInput"] = "N_TOTALUND";				
					}
				/**/
				
				if(todos==true)
				{	
					mapCampos["numeroEdificiosTextInput"] = "N_NUMEDIF";				
					mapCampos["unidadPorPisoTextInput"] = "N_UNDPISO";
					mapCampos["totalUnidadesTextInput"] = "N_TOTALUND";
				}
				//Condicion pgbavaluos
				//Nota 62182 mantis 13739
				/*if(rvLowvaluePropHor!=null)
				if(rvLowvaluePropHor=='1')*/
				//if sometidoprophoriz
				
				//{
				mapCampos["cbxAguCerrada"] = "C_CONJAGRUPCERR";
				mapCampos["cbxUbicacionInmueble"] = "C_UBICACIONINM";					
				//}
				////Condicion pgbavaluos 
				//IF ascensor
				/**/
				if(ascensorTextInput!=null)
					if(ascensorTextInput.selected)
						mapCampos["numeroAscensoresTextInput"] = "N_NUMASCENSORES";
				
				if(todos==true)
					mapCampos["numeroAscensoresTextInput"] = "N_NUMASCENSORES";
				
				mapCampos["otrosDotacionTextInput"] = "T_OTROSDOTACION";
				mapCampos["otrosDotacion2TextInput"] = "T_OTROSDOTACION2";
				
				mapCampos["cbxestructuraReforzadaBUA"] = "C_ESTRUCTURAREFORZADA";
				mapCampos["cbxmaterialConstruccionBUA"] = "C_MATERIAL";
				mapCampos["cbxdetalleMaterialSFBUA"] = "C_DETALLEMATERIAL";
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_INFCONSTRUCCION";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				mapCampos["cbxReqCondSalubirda"] = "A_REQUIERE_COND_SALUB";
				mapCampos["cbxCondSalubridad"] = "C_SALUBRIDAD";
				mapCampos["cbxArborizacion"] = "K_AMBARBORIZA";
				mapCampos["cbxParques"] = "K_AMBPARQUES";
				mapCampos["cbxZonaVerde"] = "K_AMBZVERDE";
				mapCampos["cbxPorAire"] = "K_PORAIRE";
				mapCampos["cbxBasura"] = "K_BASURA";
				mapCampos["cbxInseguridad"] = "K_INSERGURIDAD";
				mapCampos["cbxRuido"] = "K_RUIDO";
				mapCampos["cbxAguasServidas"] = "K_AGUASHERV";
				mapCampos["impactoNegativoOtrosTextInput"] = "T_AMBNEGOTRO";
				mapCampos["ambientalOtrosTextInput"] = "T_AMBOTRO";
				
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_CONDSALUBRIDAD";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				mapCampos["tipoComercializacionTextInput"] = "N_TIPOCOMERCIALIZA";
				//OJO
				mapCampos["actualidadEdificadoraTextInput"] = "T_ACTEDIFICADORA";
				//OJO
				mapCampos["comportamientoOfertaDemandaTextInput"] = "T_COMPORTAOD";				
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_COMP_OFERTA_DEMANDA";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				
				
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_LIQAVALUO";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				
				mapCampos["cbxCalificacion"] = "R_CALIFICACION";
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_LIQAVALUO_TOTAL";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				
				mapCampos= new Object();
				
				mapCampos["direccionAnexosTextInput"] = "T_DIRANEXOS";
				mapCampos["otrasDireccionesTextInput"] = "T_OTRASDIR";
				mapCampos["observacionAvaluoTextInput"] = "T_OBSERVAVALUO";
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_OBSERVACIONES";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				return arrayDto;
			}
			
			protected function validarCampos(arrayDto:ArrayCollection):void
			{				
				validarCampoLista(arrayDto);
			}
			
			protected function campovacio(campo:UIComponent):Boolean
			{
				if (campo is TextInput)
				{	
					var campoTxt:TextInput=campo as TextInput;
					
					if(campoTxt!=null)
					{
						if(campoTxt.text != null)
						{	
							if(campoTxt.text.length>0)
							{
								return false;
							}
							else
							{
								return true;
							}	
						}
						else
						{
							return true;
						}
					}
					else
					{
						return true;
					}	
					return false;
				}
				if (campo is ComboBox)
				{	
					var campoCbb:ComboBox=campo as ComboBox;
					if(campoCbb!=null)
					{
						if(campoCbb.selectedItem != null)
						{
							if(campoCbb.selectedIndex > -1)
							{
								return false;
							}
							else
							{
								return true;
							}
						}
						else
						{
							return true;
						}
					}
					else
					{
						return true;
					}
					return false;
				}
				if (campo is DateField)
				{	
					var campoDat:DateField=campo as DateField;
					
					if(campoDat!=null)
					{
						if(campoDat.text != null)
						{	
							if(campoDat.text.length>0)
							{
								return false;
							}
							else
							{
								return true;
							}	
						}
						else
						{
							return true;
						}
					}
					else
					{
						return true;
					}	
					return false;
				}
				
				if (campo is CheckBox)
				{	
					var campoCbx:CheckBox=campo as CheckBox;
					if(campoCbx!=null)
					{
						return true;					
					}
					else
					{
						return true;
					}
					return false;
				}
				if (campo is TextArea)
				{	
					var campoTxtA:TextArea=campo as TextArea;
					
					if(campoTxtA!=null)
					{
						if(campoTxtA.text != null)
						{	
							if(campoTxtA.text.length>0)
							{
								return false;
							}
							else
							{
								return true;
							}	
						}
						else
						{
							return true;
						}
					}
					else
					{
						return true;
					}	
					return false;
				}
				return false;	
			}
			
			protected function validarCampoLista(arrayDto:ArrayCollection):void
			{
				var componente:UIComponent;
				var arrayDtoValida : ArrayCollection = new ArrayCollection();
				
				for each(var item:CampoRequeridoDTO in arrayDto)
				{
					
					try{						
						componente = getChildByName(item.nombreComponente) as UIComponent;
						if(componente==null)
							componente =this[item.nombreComponente];
						
						if(campovacio(componente))
						{
							//campoRequeridoDTOResult.token = avaluosService.campoRequeridoDTO(campo);
							arrayDtoValida.addItem(item);
						}	
						
					}catch(e:Error)
					{
						trace(e);
					}
				}
				campoRequeridoDTOListResult.token = avaluosService.campoRequeridoDTOList(arrayDtoValida);
			}
			
			/*
			//protected function validarCampo(nomcampo:String):void
			protected function validarCampo(campo:CampoRequeridoDTO):void
			{
			//DisplayObject.
			//You typically cast the return value to UIComponent
			var componente:UIComponent;
			
			try{
			
			//componente = getChildByName(nomcampo) as UIComponent;
			componente = getChildByName(campo.nombreComponente) as UIComponent;
			if(componente==null)
			componente =this[campo.nombreComponente];
			
			
			
			if(campovacio(componente))
			{
			//return true;
			campoRequeridoDTOResult.token = avaluosService.campoRequeridoDTO(campo);
			}	
			
			}catch(e:Error)
			{
			trace(e);
			}
			//return false;
			}	
			
			
			protected function campoRequeridoDTOResult_resultHandler(event:ResultEvent):void
			{
			var dtoResultado:CampoRequeridoDTO;
			var componente:UIComponent;
			
			dtoResultado=campoRequeridoDTOResult.lastResult;
			
			try{					
			componente = getChildByName(dtoResultado.nombreComponente) as UIComponent;
			if(componente==null)
			componente =this[dtoResultado.nombreComponente];
			if(dtoResultado.requerido)
			{
			//Pintar verde
			componente.setStyle("contentBackgroundColor", 0xcbffde);
			componente.toolTip="Requerido";
			}	
			
			}catch(e:Error)
			{
			trace(e);
			}
			}*/
			
			protected function campoRequeridoDTOListResult_resultHandler(event:ResultEvent):void
			{
				
				var dtoResultado:CampoRequeridoDTO;
				var componente:UIComponent;
				var arrayDtoValida : ArrayCollection;
				
				arrayDtoValida=campoRequeridoDTOListResult.lastResult;
				
				for each(var item:CampoRequeridoDTO in arrayDtoValida)
				{
					
					try{					
						componente = getChildByName(item.nombreComponente) as UIComponent;
						if(componente==null)
							componente =this[item.nombreComponente];
						if(item.requerido)
						{
							//Pintar verde
							componente.setStyle("contentBackgroundColor", 0xcbffde);
							componente.toolTip="Requerido";
						}	
						
					}catch(e:Error)
					{
						trace(e);
					}
				}
			}
			
			
			protected function limpiarCampoRequeridoDTO(campo:CampoRequeridoDTO):void
			{
				
				var componente:UIComponent;
				
				try{					
					componente = getChildByName(campo.nombreComponente) as UIComponent;
					if(componente==null)
						componente =this[campo.nombreComponente];
					//componente.setStyle("contentBackgroundColor", 0xFFFFFF);
					componente.clearStyle("contentBackgroundColor");
					componente.toolTip="";
					
				}catch(e:Error)
				{
					trace(e);
				}
			}
			
			protected function limpiarCampoRequeridoDTOlist(campos:ArrayCollection):void
			{
				
				var componente:UIComponent;
				var arrayDtoValida : ArrayCollection = new ArrayCollection();
				
				for each(var campo:CampoRequeridoDTO in campos)
				{
					
					try{					
						componente = getChildByName(campo.nombreComponente) as UIComponent;
						if(componente==null)
							componente =this[campo.nombreComponente];
						//componente.setStyle("contentBackgroundColor", 0xFFFFFF);
						if(componente != null){
							componente.clearStyle("contentBackgroundColor");
							componente.toolTip="";
						}
						
					}catch(e:Error)
					{
						trace(e);
					}
					
				}
			}
			
			
			/**
			 * Crea o Actualiza la informacuón del inmueble.
			 * */
			protected function btnGuardarInmueble_clickHandler(event:MouseEvent):void
			{
				//11 Jul 2013 Mantis 13739 Comentario 0061577 1. Dejar los campos obligatorios resaltados (coloreados) independiente que el contenido haya sido diligenciado o no.
				//limpiarCampoRequeridoDTOlist(ListaCampos(1));
				
				
				informacionInmueble2.avaluo = null;
				var avaluoTmp:Avaluo = new Avaluo();
				avaluoTmp.idAvaluo = avaluo2.idAvaluo;
				avaluoTmp=avaluo2;
				informacionInmueble2.avaluo = avaluoTmp;												
				
				
				if(cbxTipoVivienda.selectedIndex > -1) {
					informacionInmueble2.tipoVivienda = cbxTipoVivienda.selectedItem.rvLowValue;
				}
				if(cbxCategoria.selectedIndex > -1) {
					informacionInmueble2.idCategoria = cbxCategoria.selectedItem.rvLowValue;
				}
				if(cbxUbicacion2.selectedIndex > -1) {
					informacionInmueble2.ubicacion2 = cbxUbicacion2.selectedItem.rvLowValue;
				}
				if(cbxUso.selectedIndex > -1) {
					informacionInmueble2.usoInmueble = cbxUso.selectedItem.rvLowValue;
				}
				
				/*12052016 error*/
				
				if(cbxClase.selectedIndex > -1) {
					informacionInmueble2.claseInmueble = cbxClase.selectedItem.rvLowValue;
				}
				/*12052016 error*/
				
				if(cbxConstUsoActual.selectedIndex > -1) {
					informacionInmueble2.ediContUso = cbxConstUsoActual.selectedItem.rvLowValue;
				}
				if(cbxDepartamentoEscritura.selectedIndex > -1) {
					informacionInmueble2.departamentoEscritura = cbxDepartamentoEscritura.selectedItem.codAsobancaria;
				}
				if(cbxCiudadEscritura.selectedIndex > -1) {
					informacionInmueble2.ciudadEscritura = cbxCiudadEscritura.selectedItem.codAsobancaria;
				}
				if(cbxUbiaccionLocal.selectedIndex > -1) {
					informacionInmueble2.ubicacion3 = cbxUbiaccionLocal.selectedItem.rvLowValue;
				}
				
				/*12052016 error se comenta*/
				/*
				if((cbxusoInmuebleBUA != null) && (cbxusoInmuebleBUA.selectedIndex > -1)) {
				informacionInmueble2.usoInmuebleBUA = cbxusoInmuebleBUA.selectedItem.rvLowValue;
				}
				*/
				/*12052016 error se comenta*/
				
				/*
				if((cbxusoInmuebleSF != null) && (cbxusoInmuebleSF.selectedIndex > -1)) {
				informacionInmueble2.usoInmuebleSF = cbxusoInmuebleSF.selectedItem.rvLowValue;
				}
				*/
				
				informacionInmueble2.chip = chipTextInput.text;
				informacionInmueble2.otroUsoInmueble = otroUsoInmuebleTextInput.text;
				informacionInmueble2.otroClase = otroClaseTextInput.text;
				informacionInmueble2.matriculaInmobiliariaPpal1 = matriculaInmobiliariaPpal1TextInput3.text;
				informacionInmueble2.matriculaInmobiliariaPpal2 = matriculaInmobiliariaPpal2TextInput.text;
				informacionInmueble2.matriculaInmobiliariaGaraje1 = matriculaInmobiliariaGaraje1TextInput.text;
				informacionInmueble2.matriculaInmobiliariaGaraje2 = matriculaInmobiliariaGaraje2TextInput.text;
				informacionInmueble2.matriculaInmobiliariaGaraje3 = matriculaInmobiliariaGaraje3TextInput.text;
				informacionInmueble2.matriculaInmobiliariaGaraje4 = matriculaInmobiliariaGaraje4TextInput.text;
				informacionInmueble2.matriculaInmobiliariaGaraje5 = matriculaInmobiliariaGaraje5TextInput.text;
				informacionInmueble2.matriculaInmobiliariaDeposito1 = matriculaInmobiliariaDeposito1TextInput.text;
				informacionInmueble2.matriculaInmobiliariaDeposito2 = txtMatriculaInmDeposito2.text;
				informacionInmueble2.numeroEscritura = numeroEscrituraTextInput.text;
				informacionInmueble2.notaria = notariaTextInput.text;
				informacionInmueble2.fechaEscritura = fechaEscrituraDateField.selectedDate;
				
				informacionInmueble2.usuarioTransaccion = myUsuario.codigoUsuario;
				
				informacionInmueble2.catastralSF = catastralTextInput.text;
				
				nombreSeccion="InfoInmueble";
				
				//recorrerAcordeones();
				
				createResult4.token = inmuebleService.update(informacionInmueble2);
				
			}
			
			/**
			 * Crea o actualiza la sección oferta demanda
			 * */
			protected function btnGuardarOfertaDemanda_clickHandler(event:MouseEvent):void
			{
				//11 Jul 2013 Mantis 13739 Comentario 0061577 1. Dejar los campos obligatorios resaltados (coloreados) independiente que el contenido haya sido diligenciado o no.
				//limpiarCampoRequeridoDTOlist(ListaCampos(1));
				
				comportamientoOfertaDemanda.avaluo = null;
				var avaluoTmp:Avaluo = new Avaluo();
				avaluoTmp.idAvaluo = avaluo2.idAvaluo;
				avaluoTmp = avaluo2;
				comportamientoOfertaDemanda.avaluo = avaluoTmp;
				
				comportamientoOfertaDemanda.actualidadEdificadora = actualidadEdificadoraTextInput.text;
				comportamientoOfertaDemanda.comportamientoOfertaDemanda = comportamientoOfertaDemandaTextInput.text;
				comportamientoOfertaDemanda.tipoComercializacion = tipoComercializacionTextInput.text;
				
				nombreSeccion="CompOfertaDemanda";
				
				if ((avaluo2.compOfertaDemanda != null) && (avaluo2.compOfertaDemanda.length > 0)){
					comportamientoOfertaDemanda.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult5.token = ofertaDemandaService.update(comportamientoOfertaDemanda);	
				}
				else {
					comportamientoOfertaDemanda.usuarioCreacion = myUsuario.codigoUsuario;
					comportamientoOfertaDemanda.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult5.token = ofertaDemandaService.create(comportamientoOfertaDemanda);
				}
				
			}

			/**
			 * Ejecuta la acción al pulsar el botón guardar sección en el bloque Observaciones.
			 * Consume el WebService ServiciosTercerosWSPort.
			 * */
			protected function btnGuardarObservaciones_clickHandler(event:MouseEvent):void
			{	
				nombreSeccion="Observaciones";
				guardarObservaciones();
				// La validación del formato de direccion es omitido, y se implementa en tiempo de digitacion
				
			}
			
			/**
			 * Crea o actualiza la sección observaciones
			 * */
			protected function guardarObservaciones():void
			{
				observaciones.avaluo = null;
				var avaluoTmp:Avaluo = new Avaluo();
				avaluoTmp.idAvaluo = avaluo2.idAvaluo;
				avaluoTmp = avaluo2;
				observaciones.avaluo = avaluoTmp;
				
				observaciones.direccionAnexos = direccionAnexosTextInput.text;
				observaciones.otrasDirecciones = otrasDireccionesTextInput.text;
				observaciones.observacionAvaluo = observacionAvaluoTextInput.text;
				
				if ((avaluo2.observacion != null) && (avaluo2.observacion.length > 0)){
					observaciones.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult6.token = observacionesService.update(observaciones);	
				}
				else {
					observaciones.usuarioCreacion = myUsuario.codigoUsuario;
					observaciones.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult6.token = observacionesService.create(observaciones);
				}
			}
			
			/**
			 * Manejador del resultado del servicio barrio
			 * */
			protected function createResult2_resultHandler(event:ResultEvent):void
			{
				informacionBarrio = createResult2.lastResult;
				
				if(avaluo2.informacionBarrio.length>0)
				{	
					avaluo2.informacionBarrio.setItemAt(informacionBarrio,0);
				}
				else
				{
					avaluo2.informacionBarrio.addItem(informacionBarrio);
				}
				
				//Alert.show("Proceso realizado satisfactoriamente", null, null, null, null, null, Alert.OK);
				transaccionSatisfactoria();
				nextTabAvaluo();				
				isChangeTab=true;
				if(avaluo2.informacionBarrio==null)
				{
					avaluo2.informacionBarrio = new InformacionBarrio();
				}
			}
			
			public function transaccionSatisfactoria()
			{
				if(vstAvaluo.selectedIndex == 2)
				{
					mensajes.text = "Ultima Operación: "+nombreSeccion+" Proceso realizado satisfactoriamente";
				}
				else
				{	
					Alert.show("Proceso realizado satisfactoriamente", "INFO", null, null, null, null, Alert.OK);
				}
			}
			
			public function nextTabAvaluo():void
			{
				if(isChangeTab){
					if(acdAvaluo.selectedIndex<acdAvaluo.numChildren)
						if(acdAvaluo.selectedIndex<acdAvaluo.numElements)
						{
							acdAvaluo.selectedIndex = acdAvaluo.selectedIndex+1; 
						}
					
					if(acdAvaluo.selectedIndex == 1){
						if(tbnAvaluosBarrio != null)
							tbnAvaluosBarrio.selectedIndex = 0 ; 
					}else if(acdAvaluo.selectedIndex == 1){
						if(tbnAvaluosConstruccion != null)
							tbnAvaluosConstruccion.selectedIndex = 0; 
					}
					isChangeTab = false ; 
				}
				acdAvaluo.setFocus();
				
				
				//isChangeTab=true;
			}
			/**
			 * Transforma el 1 en el valor booleano true, cualquier otro valor en false,
			 * se emplea especialmente en los campos de tipo CheckBox para determinar siesta o no marcado.
			 * @param valor Número que se quiere transformar a un valor boleano. 
			 * */
			protected function isTrue(valor:String):Boolean {
				var res:Boolean = new Boolean(1);
				if (valor == "1") {
					res = true;
				}
				else {
					res = false;
				}
				return res;
			}
			
			/**
			 * Permite llenar el combo de ciudades del encabezado con base en el departamento seleccionado [ok]
			 * */
			protected function comboBox_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxDepartamento.selectedItem != null){
					selectCiudadbasico = cbxDepartamento.selectedItem.ciudadesDepto;				
					//alvCiudad.list = cbxDepartamento.selectedItem.ciudadesDepto;
					cbxCiudadEncabezado.enabled = true;
					cbxCiudadEncabezado.invalidateDisplayList();
					cbxCiudadEncabezado.selectedIndex = -1;
				}else {
					selectCiudadbasico = new ArrayCollection(); 
					cbxCiudadEncabezado.enabled = false;
				}
			}
			
			/**
			 * Permite llenar el combo de ciudades del filtro de consulta con base en el departamento seleccionado [ok]
			 * */
			protected function cbxFiltro_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxDepartamentoFiltro.selectedItem != null)
				{
					//alvCiudadFiltro.list = cbxDepartamentoFiltro.selectedItem.ciudadesDepto;
					selectCiudadfiltro = cbxDepartamentoFiltro.selectedItem.ciudadesDepto;
					cbxCiudadFiltro.invalidateDisplayList();
					cbxCiudadFiltro.enabled = true;
				}else {
					selectCiudadfiltro = new ArrayCollection(); 
					cbxCiudadFiltro.enabled = false;					
				}
			}
			
			
			protected function getMensajeTransaccionResult_resultHandler(event:ResultEvent):void
			{
				mensaje = getMensajeTransaccionResult.lastResult as String;
				if(mensaje!=null)
				{
					Alert.show(mensaje,null, null, null, null, null, Alert.OK);
				}
				mensaje = null;
			}
			
			[Bindable]
			var wndowCargueAnx:WndAnexosPdf;
			var cargaFachada=false;
			
			protected function startUploadFachada_clickHandler(event:MouseEvent):void
			{
				fileUploadFachada.startUploadFachada(avaluo2.idAvaluo, "fachada");
				existsFachada = true;
				
				startImgsAnexo.enabled=true;
				
				//cargaFachada=true;
				
			}
			
			protected function startUploadDocAnexos_clickHandler(event:MouseEvent):void
			{
				fileUploadDocAnexos.startUploadAnexos(avaluo2.idAvaluo,"anexos");
				existsAnexo = true;
			}
			
			protected function button9_clickHandler(event:MouseEvent):void
			{
				valorTotalTextInput_focusOutHandler(null);
				
				//11 Jul 2013 Mantis 13739 Comentario 0061577 1. Dejar los campos obligatorios resaltados (coloreados) independiente que el contenido haya sido diligenciado o no.
				//limpiarCampoRequeridoDTOlist(ListaCampos(1));
				
				
				liquidacionAvaluoTotal.avaluo = null;
				var avaluoTmp:Avaluo = new Avaluo();
				avaluoTmp.idAvaluo = avaluo2.idAvaluo;
				avaluoTmp = avaluo2;
				liquidacionAvaluoTotal.avaluo = avaluoTmp;
				liquidacionAvaluo0.avaluo = null;
				liquidacionAvaluo1.avaluo = null;
				liquidacionAvaluo2.avaluo = null;
				liquidacionAvaluo3.avaluo = null;
				liquidacionAvaluo4.avaluo = null;
				liquidacionAvaluo5.avaluo = null;
				liquidacionAvaluo6.avaluo = null;
				liquidacionAvaluo7.avaluo = null;
				liquidacionAvaluo8.avaluo = null;
				liquidacionAvaluo9.avaluo = null;
				liquidacionAvaluo0.avaluo = avaluoTmp;
				liquidacionAvaluo1.avaluo = avaluoTmp;
				liquidacionAvaluo2.avaluo = avaluoTmp;
				liquidacionAvaluo3.avaluo = avaluoTmp;
				liquidacionAvaluo4.avaluo = avaluoTmp;
				liquidacionAvaluo5.avaluo = avaluoTmp;
				liquidacionAvaluo6.avaluo = avaluoTmp;
				liquidacionAvaluo7.avaluo = avaluoTmp;
				liquidacionAvaluo8.avaluo = avaluoTmp;
				liquidacionAvaluo9.avaluo = avaluoTmp;
				
				
				nombreSeccion="LiquidacionAvaluo";
				
				var liquidacionList:ArrayCollection = new ArrayCollection();
				
				if((cbxDescLiq0 != null) && (cbxDescLiq0.selectedIndex >=0)){
					liquidacionAvaluo0.descripcionLiquidacion = cbxDescLiq0.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq0.textInput.text == ""){
						liquidacionAvaluo0.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo0.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(0).descripcionLiquidacion;
					}
				}
				liquidacionAvaluo0.descripcionDependencia = descripcionDependenciaTextInput0.text;
				liquidacionAvaluo0.areaLiquidacion = areaLiquidacionTextInput0.text;
				liquidacionAvaluo0.valor = valorTextInput0.text;
				liquidacionAvaluo0.valorTotal = valorTotalTextInput0.text;
				liquidacionAvaluo0.consecutivo = "1";
				if(liquidacionAvaluo0.idLiqavaluo == null){
					liquidacionAvaluo0.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo0.usuarioTransaccion = myUsuario.codigoUsuario;				
				liquidacionList.addItem(liquidacionAvaluo0);
				
				if((cbxDescLiq1 != null) && (cbxDescLiq1.selectedIndex >=0)){
					liquidacionAvaluo1.descripcionLiquidacion = cbxDescLiq1.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq1.textInput.text == ""){
						liquidacionAvaluo1.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo1.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(1).descripcionLiquidacion; 
					}
				}
				liquidacionAvaluo1.descripcionDependencia = descripcionDependenciaTextInput1.text;
				liquidacionAvaluo1.areaLiquidacion = areaLiquidacionTextInput1.text;
				liquidacionAvaluo1.valor = valorTextInput1.text;
				liquidacionAvaluo1.valorTotal = valorTotalTextInput1.text;
				liquidacionAvaluo1.consecutivo = "2";
				if(liquidacionAvaluo1.idLiqavaluo == null){
					liquidacionAvaluo1.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo1.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo1);
				
				if((cbxDescLiq2 != null) && (cbxDescLiq2.selectedIndex >=0)){
					liquidacionAvaluo2.descripcionLiquidacion = cbxDescLiq2.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq2.textInput.text == ""){
						liquidacionAvaluo2.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo2.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(2).descripcionLiquidacion; 
					}
				}
				liquidacionAvaluo2.descripcionDependencia = descripcionDependenciaTextInput2.text;
				liquidacionAvaluo2.areaLiquidacion = areaLiquidacionTextInput2.text;
				liquidacionAvaluo2.valor = valorTextInput2.text;
				liquidacionAvaluo2.valorTotal = valorTotalTextInput2.text;
				liquidacionAvaluo2.consecutivo = "3";
				if(liquidacionAvaluo2.idLiqavaluo == null){
					liquidacionAvaluo2.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo2.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo2);
				
				if((cbxDescLiq3 != null) && (cbxDescLiq3.selectedIndex >=0)){
					liquidacionAvaluo3.descripcionLiquidacion = cbxDescLiq3.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq3.textInput.text == ""){
						liquidacionAvaluo3.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo3.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(3).descripcionLiquidacion; 
					} 
				}
				liquidacionAvaluo3.descripcionDependencia = descripcionDependenciaTextInput3.text;
				liquidacionAvaluo3.areaLiquidacion = areaLiquidacionTextInput3.text;
				liquidacionAvaluo3.valor = valorTextInput3.text;
				liquidacionAvaluo3.valorTotal = valorTotalTextInput3.text;
				liquidacionAvaluo3.consecutivo = "4";
				if(liquidacionAvaluo3.idLiqavaluo == null){
					liquidacionAvaluo3.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo3.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo3);
				
				if((cbxDescLiq4 != null) && (cbxDescLiq4.selectedIndex >=0)){
					liquidacionAvaluo4.descripcionLiquidacion = cbxDescLiq4.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq4.textInput.text == ""){
						liquidacionAvaluo4.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo4.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(4).descripcionLiquidacion; 
					}
				}
				liquidacionAvaluo4.descripcionDependencia = descripcionDependenciaTextInput4.text;
				liquidacionAvaluo4.areaLiquidacion = areaLiquidacionTextInput4.text;
				liquidacionAvaluo4.valor = valorTextInput4.text;
				liquidacionAvaluo4.valorTotal = valorTotalTextInput4.text;
				liquidacionAvaluo4.consecutivo = "5";
				if(liquidacionAvaluo4.idLiqavaluo == null){
					liquidacionAvaluo4.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo4.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo4);
				
				if((cbxDescLiq5 != null) && (cbxDescLiq5.selectedIndex >=0)){
					liquidacionAvaluo5.descripcionLiquidacion = cbxDescLiq5.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq5.textInput.text == ""){
						liquidacionAvaluo5.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo5.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(5).descripcionLiquidacion; 
					}
				}
				liquidacionAvaluo5.descripcionDependencia = descripcionDependenciaTextInput5.text;
				liquidacionAvaluo5.areaLiquidacion = areaLiquidacionTextInput5.text;
				liquidacionAvaluo5.valor = valorTextInput5.text;
				liquidacionAvaluo5.valorTotal = valorTotalTextInput5.text;
				liquidacionAvaluo5.consecutivo = "6";
				if(liquidacionAvaluo5.idLiqavaluo == null){
					liquidacionAvaluo5.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo5.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo5);
				
				if((cbxDescLiq6 != null) && (cbxDescLiq6.selectedIndex >=0)){
					liquidacionAvaluo6.descripcionLiquidacion = cbxDescLiq6.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq6.textInput.text == ""){
						liquidacionAvaluo6.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo6.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(6).descripcionLiquidacion; 
					}
				}
				liquidacionAvaluo6.descripcionDependencia = descripcionDependenciaTextInput6.text;
				liquidacionAvaluo6.areaLiquidacion = areaLiquidacionTextInput6.text;
				liquidacionAvaluo6.valor = valorTextInput6.text;
				liquidacionAvaluo6.valorTotal = valorTotalTextInput6.text;
				liquidacionAvaluo6.consecutivo = "7";
				if(liquidacionAvaluo6.idLiqavaluo == null){
					liquidacionAvaluo6.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo6.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo6);
				
				if((cbxDescLiq7 != null) && (cbxDescLiq7.selectedIndex >=0)){
					liquidacionAvaluo7.descripcionLiquidacion = cbxDescLiq7.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq7.textInput.text == ""){
						liquidacionAvaluo7.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo7.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(7).descripcionLiquidacion;
					}
				}
				liquidacionAvaluo7.descripcionDependencia = descripcionDependenciaTextInput7.text;
				liquidacionAvaluo7.areaLiquidacion = areaLiquidacionTextInput7.text;
				liquidacionAvaluo7.valor = valorTextInput7.text;
				liquidacionAvaluo7.valorTotal = valorTotalTextInput7.text;
				liquidacionAvaluo7.consecutivo = "8";
				if(liquidacionAvaluo7.idLiqavaluo == null){
					liquidacionAvaluo7.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo7.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo7);
				
				if((cbxDescLiq8 != null) && (cbxDescLiq8.selectedIndex >=0)){
					liquidacionAvaluo8.descripcionLiquidacion = cbxDescLiq8.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq8.textInput.text == ""){
						liquidacionAvaluo8.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo8.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(8).descripcionLiquidacion; 
					}
				}
				liquidacionAvaluo8.descripcionDependencia = descripcionDependenciaTextInput8.text;
				liquidacionAvaluo8.areaLiquidacion = areaLiquidacionTextInput8.text;
				liquidacionAvaluo8.valor = valorTextInput8.text;
				liquidacionAvaluo8.valorTotal = valorTotalTextInput8.text;
				liquidacionAvaluo8.consecutivo = "9";
				if(liquidacionAvaluo8.idLiqavaluo == null){
					liquidacionAvaluo8.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo8.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo8);
				
				if((cbxDescLiq9 != null) && (cbxDescLiq9.selectedIndex >=0)){
					liquidacionAvaluo9.descripcionLiquidacion = cbxDescLiq9.selectedItem.rvLowValue;
				}
				else
				{
					if(cbxDescLiq9.textInput.text == ""){
						liquidacionAvaluo9.descripcionLiquidacion = null;	
					}else { 
						liquidacionAvaluo9.descripcionLiquidacion = avaluoTmp.liquidacionAvaluos.getItemAt(9).descripcionLiquidacion; 
					}
				}
				liquidacionAvaluo9.descripcionDependencia = descripcionDependenciaTextInput9.text;
				liquidacionAvaluo9.areaLiquidacion = areaLiquidacionTextInput9.text;
				liquidacionAvaluo9.valor = valorTextInput9.text;
				liquidacionAvaluo9.valorTotal = valorTotalTextInput9.text;
				liquidacionAvaluo9.consecutivo = "10";
				if(liquidacionAvaluo9.idLiqavaluo == null){
					liquidacionAvaluo9.usuarioCreacion = myUsuario.codigoUsuario;
				}
				liquidacionAvaluo9.usuarioTransaccion = myUsuario.codigoUsuario;
				liquidacionList.addItem(liquidacionAvaluo9);
				
				createResult11.token = liquidacionService.update(liquidacionList);
				
				if(cbxCalificacion.selectedIndex > -1) {
					liquidacionAvaluoTotal.calificacion = cbxCalificacion.selectedItem.rvLowValue;
				}
				if((totalAvaluoTextInput.text != null) && (totalAvaluoTextInput.text.length > 0)) {
					liquidacionAvaluoTotal.totalAvaluo = totalAvaluoTextInput.text;
				}
				if((valorUvrDiaTextInput.text != null) && (valorUvrDiaTextInput.text.length > 0)) {
					liquidacionAvaluoTotal.valorUvrDia = valorUvrDiaTextInput.text;
				}
				if((avaluoUvrTextInput.text != null) && (avaluoUvrTextInput.text.length > 0)) {
					liquidacionAvaluoTotal.avaluoUvr = avaluoUvrTextInput.text;
				}
				if((valorAsegurableTextInput.text != null) && (valorAsegurableTextInput.text.length > 0)) {
					liquidacionAvaluoTotal.valorAsegurable = valorAsegurableTextInput.text;
				}
				liquidacionAvaluoTotal.usuarioCreacion = myUsuario.codigoUsuario;
				liquidacionAvaluoTotal.usuarioTransaccion = myUsuario.codigoUsuario;
				
			}
			
			protected function getValoresDominioResult2_resultHandler(event:ResultEvent):void
			{
				if(selectEstrato==null || selectEstrato.length<1){
					selectEstrato = getValoresDominioResult2.lastResult;
				}
				if(cbxTipoIdentificacionEncabezado!=null){
					cbxTipoIdentificacionEncabezado.selectedIndex = 0;
				}
			}
			
			protected function cbxEstrato_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult2 == null){
					if(selectEstrato==null || selectEstrato.length<1)
						getValoresDominioResult2.token = dominiosAuxDao.getValoresDominio("ESTRATO");
				}
			}
			
			protected function cbxLegalidad_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult3 == null){
					if(selectLegalidad==null || selectLegalidad.length<1)	
						getValoresDominioResult3.token = dominiosAuxDao.getValoresDominio("LEGALBARRIO");
				}
			}
			
			protected function cbxTopografia_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult4 == null){
					if(selectTopografia==null || selectTopografia.length<1)
						getValoresDominioResult4.token = dominiosAuxDao.getValoresDominio("TOPOGRAFIA");
				}
			}
			
			protected function cbxTransporte_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult32 == null){
					if(selectTransporte==null || selectTransporte.length<1)
						getValoresDominioResult32.token = dominiosAuxDao.getValoresDominio("MBR");
				}
			}
			
			protected function cbxObjetivo_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult30 == null){
					if(selectObjeto==null || selectObjeto.length<1)	
						getValoresDominioResult30.token = dominiosAuxDao.getValoresDominio("OBJETOAVALUO");
				}
			}
			
			protected function cbxSector_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult31 == null){
					if(selectSector==null || selectSector.length<1)
						getValoresDominioResult31.token = dominiosAuxDao.getValoresDominio("SECTOR");
				}
			}
			
			protected function cbxCalificacion_creationCompleteHandler(event:FlexEvent):void
			{
				
				getValoresDominioResult68.token = dominiosAuxDao.getValoresDominio("CALGARANTIA");
			}
			
			protected function cbxTipoVivienda_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult6 == null){  
					if(selecttipovivienda==null || selecttipovivienda.length<1)
						getValoresDominioResult6.token = dominiosAuxDao.getValoresDominio("TIPOVIVIENDA");
				}
			}
			
			protected function cbxUso_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult7 == null){ 
					if(selectusoinmueble==null || selectusoinmueble.length<1)
						getValoresDominioResult7.token = dominiosAuxDao.getValoresDominio("USOINMUEBLE");
				}
			}
			
			protected function cbxClase_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult8 == null){
					if(selectclaseinmueble==null || selectclaseinmueble.length<1)
						getValoresDominioResult8.token = dominiosAuxDao.getValoresDominio("CLASEINMUEBLE");
				}
			}
			
			protected function cbxCategoria_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult9 == null){
					if(selectcategoria==null || selectcategoria.length<1)
						getValoresDominioResult9.token = dominiosAuxDao.getValoresDominio("CATEGORIA");
				}
			}
			
			protected function cbxUbicacion2_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult10 == null){
					if(selectubicacion2==null || selectubicacion2.length<1)
						getValoresDominioResult10.token = dominiosAuxDao.getValoresDominio("UBICACION2");
				}
			}
			
			protected function cbxConstUsoActual_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult33 == null){
					if(selectafirmarusoactual==null || selectafirmarusoactual.length<1)
						getValoresDominioResult33.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
				}
			}
			
			protected function cbxusoInmuebleBUA_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult93.token = dominiosAuxDao.getValoresDominio("USOINMUEBLE_BUA");
			}
			
			protected function cbxusoInmuebleSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult94.token = dominiosAuxDao.getValoresDominio("C_USOINMUEBLE_SF");
			}
			
			protected function cbxUbicacion3_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult11 == null){ 
					if(selectubicacion3==null || selectubicacion3.length<1)
						getValoresDominioResult11.token = dominiosAuxDao.getValoresDominio("UBICACION3");
				}
			}
			
			
			protected function cbxFuentesHidricas_creationCompleteHandler(event:FlexEvent):void
			{
				if (getValoresDominioResult12 == null){ 
					if(selectafirmarcercafuenthidri==null || selectafirmarcercafuenthidri.length<1)
						getValoresDominioResult12.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
				}
			}
			
			protected function cbxEstadoConservacioon_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult13 == null){
					if(selectestadoconservacion==null || selectestadoconservacion.length<1)
						getValoresDominioResult13.token = dominiosAuxDao.getValoresDominio("ESTADOCONSERVACION");
				}
			}
			
			protected function cbxEstructura_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult14 == null){
					if(selectestructura==null || selectestructura.length<1)
						getValoresDominioResult14.token = dominiosAuxDao.getValoresDominio("ESTRUCTURA");
				}
			}
			
			protected function cbxMaterialesEstructura_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult15.token = dominiosAuxDao.getValoresDominio("MATEST");
			}
			
			protected function cbxFachada_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult16 == null){
					if(selectfachada==null || selectfachada.length<1)
						getValoresDominioResult16.token = dominiosAuxDao.getValoresDominio("FACHADA");
				}
			}
			
			protected function cbxTipoFachada_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult17.token = dominiosAuxDao.getValoresDominio("TIPOFACHADA");
			}
			
			protected function cbxCubierta_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult18 == null){ 
					if(selectcubierta==null || selectcubierta.length<1)
						getValoresDominioResult18.token = dominiosAuxDao.getValoresDominio("CUBIERTA");
				}
			}
			
			protected function cbxParapetosCubierta_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult38 == null){ 
					if(selectparapetos==null || selectparapetos.length<1)
						getValoresDominioResult38.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
				}
			}
			/*
			protected function cbxUbiTanques_creationCompleteHandler(event:FlexEvent):void
			{
			getValoresDominioResult19.token = dominiosAuxDao.getValoresDominio("TANQUES");
			}
			*/
			
			protected function cbxLongLues_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult20.token = dominiosAuxDao.getValoresDominio("LUCES");
			}
			
			protected function cbxSimetriaAltura_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult21.token = dominiosAuxDao.getValoresDominio("SIMETRIA");
			}
			/*
			protected function cbxSobrepeso_creationCompleteHandler(event:FlexEvent):void
			{
			getValoresDominioResult39.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
			}
			*/
			protected function cbxGolpeteo_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult22 == null ){
					if(selectgolpeteo==null || selectgolpeteo.length<1)
						getValoresDominioResult22.token = dominiosAuxDao.getValoresDominio("GOLPETEO");
				}
			}
			
			protected function cbxDanoPrevio_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult23.token = dominiosAuxDao.getValoresDominio("DANOS");
			}
			
			protected function cbxEstadoCocina_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult24.token = dominiosAuxDao.getValoresDominio("INFOCONSTR");
			}
			
			protected function cbxCalidadCocina_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult25.token = dominiosAuxDao.getValoresDominio("COCINA");
			}
			
			protected function cbxUbicacionInmueble_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult27 == null){
					if(selectubicacion==null || selectubicacion.length<1)
						getValoresDominioResult27.token = dominiosAuxDao.getValoresDominio("UBICACION");
				}
			}
			
			protected function cbxDescLiq0_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult28.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			
			protected function cbxDescLiq1_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult69.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq2_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult70.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq3_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult71.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq4_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult72.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq5_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult73.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq6_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult74.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq7_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult75.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq8_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult76.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			protected function cbxDescLiq9_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult77.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			
			protected function cbxEstadoVias_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult5 == null){
					if(selectEstadoVias==null || selectEstadoVias.length<1){
						getValoresDominioResult5.token = dominiosAuxDao.getValoresDominio("MBR");
					}
				}
			}
			
			protected function cbxMetodologia_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult29 == null){
					if(selectMetodologia==null || selectMetodologia.length<1){
						getValoresDominioResult29.token = dominiosAuxDao.getValoresDominio("METODOLOGIA");
					}
				}
			}
			
			/**
			 * Permite  llenar el combo de departamentos en información básica
			 * */
			protected function cbxDepartamento_creationCompleteHandler(event:FlexEvent):void
			{
				if(consultaDepartamentosResult == null){
					if(selectDepartamento==null || selectDepartamento.length<1){
						consultaDepartamentosResult.token = departamentoService.consultaDepartamentos();
					}
				}
			}
			
			
			/**
			 * Cancela el ingreso de cualquier seccion del avaluo
			 * */
			protected function cancelSeccion_clickHandler(event:MouseEvent):void
			{
				// dtgAvaluos.dataProvider.removeAll();
				avaluo.nombreSolicitante = "";
				avaluo.idTipoIdentificacion = "";
				avaluo.numeroIdentificacion = "";
				avaluo.codigoDaneDepartamento = "";
				
				if(avaluo.ciudad!=null)
					avaluo.ciudad.codDane = "";
				
				avaluo.barrio = "";
				avaluo.direccionInmueble = "";
				avaluo.matriculaInmobiliariaPpal1 = "";
				
				cbxTipoIdentificacion.selectedIndex = -1;
				cbxDepartamentoFiltro.selectedIndex = -1;
				direccionInmuebleTextInput.text = "";
				numeroIdentificacionTextInput.text = "";
				cbxCiudadFiltro.selectedIndex = -1;
				txtmatriculaInmobiliariaPpal1.text = "";
				txtmatriculaInmobiliariaPpal2.text = "";
				
				acdAvaluo.selectedIndex = 0;
				acdAvaluo.setFocus();
				
				//Limpia el avaluo seleccionado
				avaluo2 = null;
				
				existsAnexo = false;
				existsFachada = false;
				
				if(startImgsAnexo!=null){
					startImgsAnexo.enabled=false;
				}
				
				impresionEnEdicion = new Boolean(false);
				
				limpiarControles();
				vstAvaluo.selectedIndex = 0;
			}
			
			/**
			 * Limpia todos los controles del formulario
			 * */
			private function limpiarControles():void
			{
				
				if(informacionInmueble!=null)
				{	
					if(informacionInmueble.avaluo!=null){
						if(informacionInmueble.avaluo.ciudad!=null){
							informacionInmueble.avaluo.ciudad.departamento=null;
							informacionInmueble.avaluo.ciudad=null;
						}
						informacionInmueble.avaluo=new Avaluo();
						limpiarCamposConsulta(); 
					}
				}
				
				if(avaluo2!=null){
					if(avaluo2.ciudad!=null){
						avaluo2.ciudad.departamento=null;
						avaluo2.ciudad=null;
					}
					
					avaluo2=null;
				}			
				
				System.gc();
				
				
				if(mensajes!=null)
					mensajes.text = " ";
				
				isChangeTab=true;
				
				numeroIdentificacion3changed=false;
				
				limpiarCampoRequeridoDTOlist(ListaCampos(1,true));
				
				// Bloque de Consulta 
				
				if(fechaAvaluoFiltroHasta != null){
					fechaAvaluoFiltroHasta.text = ""; 
					fechaAvaluoFiltroHasta.selectedDate = null; 
					fechaAvaluoFiltroHasta.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				if(fechaCreacionHasta != null){
					fechaCreacionHasta.text = ""; 
					fechaCreacionHasta.selectedDate = null; 
					fechaCreacionHasta.setStyle("backgroundColor", 0xFFFFFF);					
				}
				
				if(fechaCreacionDesde != null){
					fechaCreacionDesde.text = ""; 
					fechaCreacionDesde.selectedDate = null; 
					fechaCreacionDesde.setStyle("backgroundColor", 0xFFFFFF);					
				}
				
				if(cbxCiudadFiltro != null){
					cbxCiudadFiltro.selectedIndex = -1;
					cbxCiudadFiltro.setStyle("backgroundColor", 0xFFFFFF);					
				}
				
				if(direccionInmuebleTextInput != null){
					direccionInmuebleTextInput.text = ""; 
					direccionInmuebleTextInput.setStyle("backgroundColor", 0xFFFFFF);					
				}
				
				if(fechaAvaluoFiltro != null){
					fechaAvaluoFiltro.text = ""; 
					fechaAvaluoFiltro.selectedDate = null;
					fechaAvaluoFiltro.setStyle("backgroundColor", 0xFFFFFF);					
				}
				
				//Bloque Info Básica
				if(nombreSolicitanteTextInput2 != null){
					nombreSolicitanteTextInput2.text = "";
					//nombreSolicitanteTextInput2.
					nombreSolicitanteTextInput2.setStyle("backgroundColor", 0xFFFFFF);
					//nombreSolicitanteTextInput2.setStyle("color", 0xFFFFFF);
				}
				if(cbxIdTipoIdentificacion != null){
					cbxIdTipoIdentificacion.selectedIndex = -1;
					cbxIdTipoIdentificacion.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(numeroIdentificacionTextInput3 != null){
					numeroIdentificacionTextInput3.text = "";
					numeroIdentificacionTextInput3.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(fechaAvaluoDateField2 != null){
					// fechaAvaluoDateField2.text = "";
					fechaAvaluoDateField2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxObjetivo != null){
					cbxObjetivo.selectedIndex = -1;
					cbxObjetivo.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(direccionInmuebleTextInput3 != null){
					direccionInmuebleTextInput3.text = "";
					direccionInmuebleTextInput3.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(barrioTextInput2 != null){
					barrioTextInput2.text = "";
					barrioTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(nombreConjuntoEdificioTextInput != null){
					nombreConjuntoEdificioTextInput.text = "";
					nombreConjuntoEdificioTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDepartamentoBasico != null){
					cbxDepartamentoBasico.selectedIndex = -1;
					cbxDepartamentoBasico.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(txiCodDaneDepto != null){
					txiCodDaneDepto.text = "";
					txiCodDaneDepto.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCiudadBasico != null){
					cbxCiudadBasico.selectedIndex = -1;
					txiCodDaneCiudad.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(txiCodDaneCiudad != null){
					txiCodDaneCiudad.text = "";
					txiCodDaneCiudad.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxSector != null){
					cbxSector.selectedIndex = -1;
					cbxSector.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(ubicacionGpsTextInput != null){
					ubicacionGpsTextInput.text = "";
					ubicacionGpsTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//19-Nov UbicacionGps
				if(ubicacionGpsTextInput != null){
					ubicacionGpsTextInput.text = "";
					ubicacionGpsTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(coordenadasLatitudTextInput != null){
					coordenadasLatitudTextInput.text = "";
					coordenadasLongitudTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(coordenadasLongitudTextInput != null){
					coordenadasLongitudTextInput.text = "";
					coordenadasLongitudTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				
				TmpmatriculaInmobiliariaPpal1="";
				TmpmatriculaInmobiliariaPpal2="";
				
				//19-Nov UbicacionGps
				
				if(telefonoSolicitanteTextInput != null){
					telefonoSolicitanteTextInput.text = "";
					telefonoSolicitanteTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(celularSolicitanteTextInput != null){
					celularSolicitanteTextInput.text = "";
					celularSolicitanteTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(correoSolicitanteTextInput != null){
					correoSolicitanteTextInput.text = "";
					correoSolicitanteTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxMetodologia != null){
					cbxMetodologia.selectedIndex = -1;
					cbxMetodologia.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(justificacionTextInput != null){
					justificacionTextInput.text = "";
					justificacionTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//Bloque Información del Barrio
				if(chkAcueductoSector != null){
					chkAcueductoSector.selected = false;
					chkAcueductoSector.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkAlcantarilladoSector != null){
					chkAlcantarilladoSector.selected = false;
					chkAlcantarilladoSector.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkElectricidadSector != null){
					chkElectricidadSector.selected = false;
					chkElectricidadSector.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkGasSector != null){
					chkGasSector.selected = false;
					chkGasSector.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkTelefonoSector != null){
					chkTelefonoSector.selected = false;
					chkTelefonoSector.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkAcueducto != null){
					chkAcueducto.selected = false;
					chkAcueducto.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkAlcantarillado != null){
					chkAlcantarillado.selected = false;
					chkAlcantarillado.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkElectricidad != null){
					chkElectricidad.selected = false;
					chkElectricidad.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkGas != null){
					chkGas.selected = false;
					chkGas.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkTelefono != null){
					chkTelefono.selected = false;
					chkTelefono.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(viviendaTextInput != null){
					viviendaTextInput.selected = false;
					viviendaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkIndustria != null){
					chkIndustria.selected = false;
					chkIndustria.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(comercioTextInput != null){
					comercioTextInput.selected = false;
					comercioTextInput.setStyle("backgroundColor", 0xFFFFFF);					
				}
				if(otrosUsosTextInput != null){
					otrosUsosTextInput.selected = false;
					otrosUsosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(textoOtrosUsosTextInput != null){
					textoOtrosUsosTextInput.text = "";
					textoOtrosUsosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(edificacionesIgualesTextInput != null){
					edificacionesIgualesTextInput.text = "";
					edificacionesIgualesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadoVias != null){
					cbxEstadoVias.selectedIndex = -1;
					cbxEstadoVias.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(pavimentadaTextInput != null){
					pavimentadaTextInput.selected = false;
					pavimentadaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(andenesTextInput != null){
					andenesTextInput.selected = false;
					andenesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(sardenelesTextInput != null){
					sardenelesTextInput.selected = false;
					sardenelesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(parquesTextInput != null){
					parquesTextInput.selected = false;
					parquesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(paraderoTextInput != null){
					paraderoTextInput.selected = false;
					paraderoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(alumbradoTextInput != null){
					alumbradoTextInput.selected = false;
					alumbradoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(zonasVerdesTextInput != null){
					zonasVerdesTextInput.selected = false;
					zonasVerdesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(arborizacionTextInput != null){
					arborizacionTextInput.selected = false;
					arborizacionTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(alamedasTextInput != null){
					alamedasTextInput.selected = false;
					alamedasTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cicloRutasTextInput != null){
					cicloRutasTextInput.selected = false;
					cicloRutasTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstrato != null){
					cbxEstrato.selectedIndex = -1;
					cbxEstrato.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxLegalidad != null){
					cbxLegalidad.selectedIndex = -1;
					cbxLegalidad.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxTopografia != null){
					cbxTopografia.selectedIndex = -1;
					cbxTopografia.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxTransporte != null){
					cbxTransporte.selectedIndex = -1;
					cbxTransporte.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(perspectivasTextInput != null){
					perspectivasTextInput.text = "";
					perspectivasTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//Bloque información del inmueble
				if(cbxTipoVivienda != null){
					cbxTipoVivienda.selectedIndex = -1;
					cbxTipoVivienda.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxUbicacion2 != null){
					cbxUbicacion2.selectedIndex = -1;
					cbxUbicacion2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxUbiaccionLocal != null){
					cbxUbiaccionLocal.selectedIndex = -1;
					cbxUbiaccionLocal.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxUso != null){
					cbxUso.selectedIndex = -1;
					cbxUso.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(otroUsoInmuebleTextInput != null){
					otroUsoInmuebleTextInput.text = "";
					otroUsoInmuebleTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				/*12052016 error*/				
				if(cbxClase != null){
					cbxClase.selectedIndex = -1;
					cbxClase.setStyle("backgroundColor", 0xFFFFFF);
				}				
				/*12052016 error*/
				
				if(otroClaseTextInput != null){
					otroClaseTextInput.text = "";
					otroClaseTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCategoria != null){
					cbxCategoria.selectedIndex = -1;
					cbxConstUsoActual.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxConstUsoActual != null){
					cbxConstUsoActual.selectedIndex = -1;
					cbxConstUsoActual.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(notariaTextInput != null){
					notariaTextInput.text = "";
					notariaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(numeroEscrituraTextInput != null){
					numeroEscrituraTextInput.text ="";
					numeroEscrituraTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDepartamentoEscritura != null){
					cbxDepartamentoEscritura.selectedIndex = -1;
					cbxDepartamentoEscritura.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCiudadEscritura != null){
					cbxCiudadEscritura.selectedIndex = -1;
					cbxCiudadEscritura.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(fechaEscrituraDateField != null){
					// fechaEscrituraDateField.text = "";
					fechaEscrituraDateField.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaPpal1TextInput3 != null){
					matriculaInmobiliariaPpal1TextInput3.text = "";
					matriculaInmobiliariaPpal1TextInput3.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaPpal2TextInput != null){
					matriculaInmobiliariaPpal2TextInput.text = "";
					matriculaInmobiliariaPpal2TextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaGaraje1TextInput != null){
					matriculaInmobiliariaGaraje1TextInput.text = "";
					matriculaInmobiliariaGaraje1TextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaGaraje2TextInput != null){
					matriculaInmobiliariaGaraje2TextInput.text = "";
					matriculaInmobiliariaGaraje2TextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaGaraje3TextInput != null){
					matriculaInmobiliariaGaraje3TextInput.text = "";
					matriculaInmobiliariaGaraje3TextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaGaraje4TextInput != null){
					matriculaInmobiliariaGaraje4TextInput.text = "";
					matriculaInmobiliariaGaraje4TextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaGaraje5TextInput != null){
					matriculaInmobiliariaGaraje5TextInput.text = "";
					matriculaInmobiliariaGaraje5TextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(matriculaInmobiliariaDeposito1TextInput != null){
					matriculaInmobiliariaDeposito1TextInput.text = "";
					matriculaInmobiliariaDeposito1TextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(txtMatriculaInmDeposito2 != null){
					txtMatriculaInmDeposito2.text = "";
					txtMatriculaInmDeposito2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chipTextInput != null){
					chipTextInput.text = "";
					chipTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//Bloque Información de la construcción
				if(pisosTextInput != null){
					pisosTextInput.text = "";
					pisosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(sotanosTextInput != null){
					sotanosTextInput.text = "";
					sotanosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(vetustezTextInput != null){
					vetustezTextInput.text = "";
					vetustezTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(pisoInmuebleTextInput != null){
					pisoInmuebleTextInput.text = "";
					pisoInmuebleTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxFuentesHidricas != null){
					cbxFuentesHidricas.selectedIndex = -1;
					cbxFuentesHidricas.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDistancia != null){
					cbxDistancia.selectedIndex = -1;
					cbxDistancia.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxAltura != null){
					cbxAltura.selectedIndex = -1;
					cbxAltura.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxPisosBodega != null){
					cbxPisosBodega.selectedIndex = -1;
					cbxPisosBodega.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadoConstruccion != null){
					cbxEstadoConstruccion.selectedIndex = -1;
					cbxEstadoConstruccion.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(avanceObraTextInput != null){
					avanceObraTextInput.text = "";
					avanceObraTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkTerminadoNueva != null){
					chkTerminadoNueva.selected = false;
					chkTerminadoNueva.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkSinTerminarNueva != null){					
					chkSinTerminarNueva.selected = false;
					chkSinTerminarNueva.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chbTerminado != null){
					chbTerminado.selected = false;
					chbTerminado.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chbSinTerminar != null){
					chbSinTerminar.selected = false;
					chbSinTerminar.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				if(cbxEstadoConservacion != null){
					cbxEstadoConservacion.selectedIndex = -1;
					cbxEstadoConservacion.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxParapetosCubierta != null){
					cbxParapetosCubierta.selectedIndex = -1;
					cbxParapetosCubierta.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstructura != null){
					cbxEstructura.selectedIndex = -1;
					cbxEstructura.setStyle("backgroundColor", 0xFFFFFF);
				}
				/*
				if(cbxUbiTanques != null){
				cbxUbiTanques.selectedIndex = -1;
				cbxUbiTanques.setStyle("backgroundColor", 0xFFFFFF);
				}
				*/
				/*
				if(textoEstructuraTextInput != null){
				textoEstructuraTextInput.text = "";
				textoEstructuraTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				*/
				/*
				if(otraUbicacionTanqueTextInput != null){
				otraUbicacionTanqueTextInput.text = "";
				otraUbicacionTanqueTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				*/
				/*
				if(cbxMaterialesEstructura != null){
				cbxMaterialesEstructura.selectedIndex = -1;
				cbxMaterialesEstructura.setStyle("backgroundColor", 0xFFFFFF);
				}*/
				/*
				if(cbxLongLuces != null){
				cbxLongLuces.selectedIndex = -1;
				cbxLongLuces.setStyle("backgroundColor", 0xFFFFFF);
				}
				*/
				/*
				if(otroMaterialTextInput != null){
				otroMaterialTextInput.text = "";
				otroMaterialTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}*/
				/*
				if(cbxSimetriaAltura != null){
				cbxSimetriaAltura.selectedIndex = -1;
				cbxSimetriaAltura.setStyle("backgroundColor", 0xFFFFFF);
				}*/
				
				if(cbxFachada != null){
					cbxFachada.selectedIndex = -1;
					cbxFachada.setStyle("backgroundColor", 0xFFFFFF);
				}
				/*
				if(cbxSimetriaPlanta != null){
				cbxSimetriaPlanta.selectedIndex = -1;
				cbxSimetriaPlanta.setStyle("backgroundColor", 0xFFFFFF);
				}*/
				
				/*
				if(textoFachadaTextInput != null){
				textoFachadaTextInput.text = "";
				textoFachadaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				*/
				/*
				if(cbxSobrepeso != null){
				cbxSobrepeso.selectedIndex = -1;
				cbxSobrepeso.setStyle("backgroundColor", 0xFFFFFF);
				}
				*/
				if(cbxTipoFachada != null){
					cbxTipoFachada.selectedIndex = -1;
					cbxTipoFachada.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxGolpeteo != null){
					cbxGolpeteo.selectedIndex = -1;
					cbxGolpeteo.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCubierta != null){
					cbxCubierta.selectedIndex = -1;
					cbxCubierta.setStyle("backgroundColor", 0xFFFFFF);
				}
				/*
				if(cbxAsentamientos != null){
				cbxAsentamientos.selectedIndex = -1;
				cbxAsentamientos.setStyle("backgroundColor", 0xFFFFFF);
				}*/
				/*
				if(textoCubiertaTextInput != null){
				textoCubiertaTextInput.text = "";
				textoCubiertaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				*/
				/*
				if(cbxDanoPrevio != null){
				cbxDanoPrevio.selectedIndex = -1;
				cbxDanoPrevio.setStyle("backgroundColor", 0xFFFFFF);
				}	
				*/
				if(salaTextInput != null){
					salaTextInput.text = "0";
					salaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(banioSocialTextInput != null){
					banioSocialTextInput.text = "0";
					nombreSolicitanteTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(banioPrivadoTextInput != null){
					nombreSolicitanteTextInput2.text = "0";
					nombreSolicitanteTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(banioServicioTextInput != null){
					nombreSolicitanteTextInput2.text = "0";
					nombreSolicitanteTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(jardinTextInput != null){
					jardinTextInput.text = "0";
					jardinTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(comedorTextInput != null){
					comedorTextInput.text = "0";
					comedorTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(estarHabitacionTextInput != null){
					estarHabitacionTextInput.text = "0";
					estarHabitacionTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cocinaTextInput != null){
					cocinaTextInput.text = "0";
					cocinaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(patioInteriorTextInput != null){
					patioInteriorTextInput.text = "0";
					patioInteriorTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(balconTextInput != null){
					balconTextInput.text = "0";
					balconTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(estudioTextInput != null){
					estudioTextInput.text = "0";
					estudioTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(numeroHabitacionesTextInput != null){
					numeroHabitacionesTextInput.text = "0";
					numeroHabitacionesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cuartoServicioTextInput != null){
					cuartoServicioTextInput.text = "0";
					cuartoServicioTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(terrazaTextInput != null){
					terrazaTextInput.text = "0";
					terrazaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(zonaVerdePrivadaTextInput != null){
					zonaVerdePrivadaTextInput.text = "0";
					zonaVerdePrivadaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(totalGarajesTextInput != null){
					totalGarajesTextInput.text = "0";
					totalGarajesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(usoExclusivoTextInput != null){
					usoExclusivoTextInput.text = "0";
					usoExclusivoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(sencilloTextInput != null){
					sencilloTextInput.text = "0";
					sencilloTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(depositoTextInput != null){
					depositoTextInput.text = "0";
					depositoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(localTextInput != null){
					localTextInput.text = "0";
					localTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cubiertoTextInput != null){
					cubiertoTextInput.text = "0";
					cubiertoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(privadoTextInput != null){
					privadoTextInput.text = "0";
					privadoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(dobleTextInput != null){
					dobleTextInput.text = "0";
					dobleTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(bodegaTextInput != null){
					bodegaTextInput.text = "0";
					bodegaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descubiertoTextInput != null){
					descubiertoTextInput.text = "0";
					descubiertoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(bahiaComunalTextInput != null){
					bahiaComunalTextInput.text = "0";
					bahiaComunalTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(servidumbreTextInput != null){
					servidumbreTextInput.text = "0";
					servidumbreTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(oficinaTextInput != null){
					oficinaTextInput.text = "0";
					oficinaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				if(cbxVentilacion != null){	
					cbxVentilacion.selectedIndex = -1;
					cbxVentilacion.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxIluminacion != null){
					cbxIluminacion.selectedIndex = -1;
					cbxIluminacion.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxReqCondSalubirda != null){
					cbxReqCondSalubirda.selectedIndex = -1;
					cbxReqCondSalubirda.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCondSalubridad != null){
					cbxCondSalubridad.selectedIndex = -1;
					cbxCondSalubridad.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxArborizacion != null){
					cbxArborizacion.selectedIndex = -1;
					cbxArborizacion.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxParques != null){
					cbxParques.selectedIndex = -1;
					cbxParques.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxZonaVerde != null){
					cbxZonaVerde.selectedIndex = -1;
					cbxZonaVerde.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxPorAire != null){
					cbxPorAire.selectedIndex = -1;
					cbxPorAire.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxBasura != null){
					cbxBasura.selectedIndex = -1;
					cbxBasura.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxInseguridad != null){
					cbxInseguridad.selectedIndex = -1;
					cbxInseguridad.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxRuido != null){
					cbxRuido.selectedIndex = -1;
					cbxRuido.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxAguasServidas != null){
					cbxAguasServidas.selectedIndex = -1;
					cbxAguasServidas.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(impactoNegativoOtrosTextInput != null){
					impactoNegativoOtrosTextInput.text = "";
					impactoNegativoOtrosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(ambientalOtrosTextInput != null){
					ambientalOtrosTextInput.text = "";
					ambientalOtrosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				if(cbxEstadoPisos != null){
					cbxEstadoPisos.selectedIndex = -1;
					cbxEstadoPisos.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadoMuros != null){
					cbxEstadoMuros.selectedIndex = -1;
					cbxEstadoMuros.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadoTecho != null){
					cbxEstadoTecho.selectedIndex = -1;
					cbxEstadoTecho.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadoMadera != null){
					cbxEstadoMadera.selectedIndex = -1;
					cbxEstadoMadera.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadoMetal != null){
					cbxEstadoMetal.selectedIndex = -1;
					cbxEstadoMetal.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadobanos != null){
					cbxEstadobanos.selectedIndex = -1;
					cbxEstadobanos.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxEstadoCocina != null){
					cbxEstadoCocina.selectedIndex = -1;
					cbxEstadoCocina.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				if(cbxCalidadPisos != null){
					cbxCalidadPisos.selectedIndex = -1;
					cbxCalidadPisos.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCalidadMuros != null){
					cbxCalidadMuros.selectedIndex = -1;
					cbxCalidadMuros.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCalidadTechos != null){
					cbxCalidadTechos.selectedIndex = -1;
					cbxCalidadTechos.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCalidadMadera != null){
					cbxCalidadMadera.selectedIndex = -1;
					cbxCalidadMadera.setStyle("backgroundColor", 0xFFFFFF);
				}
				if( cbxCalidadMetal!= null){
					cbxCalidadMetal.selectedIndex = -1;
					cbxCalidadMetal.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCalidadBanos != null){
					cbxCalidadBanos.selectedIndex = -1;
					cbxCalidadBanos.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCalidadCocina != null){
					cbxCalidadCocina.selectedIndex = -1;
					cbxCalidadCocina.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				if(cbxPorpiedadHorizontal != null){
					cbxPorpiedadHorizontal.selectedIndex = -1;
					cbxPorpiedadHorizontal.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(numeroEdificiosTextInput != null){
					numeroEdificiosTextInput.text = "";
					numeroEdificiosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxAguCerrada != null){
					cbxAguCerrada.selectedIndex = -1;
					cbxAguCerrada.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(unidadPorPisoTextInput != null){
					unidadPorPisoTextInput.text = "";
					unidadPorPisoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxUbicacionInmueble != null){
					cbxUbicacionInmueble.selectedIndex = -1;
					cbxUbicacionInmueble.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(totalUnidadesTextInput != null){
					totalUnidadesTextInput.text = "";
					totalUnidadesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				if(chkPorteria != null){
					chkPorteria.selected = false;
					chkPorteria.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(chkCitofono != null){
					chkCitofono.selected = false;
					chkCitofono.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(bicicleteroTextInput != null){
					bicicleteroTextInput.selected = false;
					bicicleteroTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(salonComunalTextInput != null){
					salonComunalTextInput.selected = false;
					salonComunalTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(piscinaTextInput != null){
					piscinaTextInput.selected = false;
					piscinaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(tanqueAguaTextInput != null){
					tanqueAguaTextInput.selected = false;
					tanqueAguaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(clubHouseTextInput != null){
					clubHouseTextInput.selected = false;
					clubHouseTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(plantaTextInput != null){
					plantaTextInput.selected = false;
					plantaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(garajeVisitanteTextInput != null){
					garajeVisitanteTextInput.selected = false;
					garajeVisitanteTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(juegoNinosTextInput != null){
					juegoNinosTextInput.selected = false;
					juegoNinosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(canchaMultipleTextInput != null){
					canchaMultipleTextInput.selected = false;
					canchaMultipleTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(shutBasurasTextInput != null){
					shutBasurasTextInput.selected = false;
					shutBasurasTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(bombaEyectoraTextInput != null){
					bombaEyectoraTextInput.selected = false;
					bombaEyectoraTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(aireAcondicionadoTextInput != null){
					aireAcondicionadoTextInput.selected = false;
					aireAcondicionadoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(squashTextInput != null){
					squashTextInput.selected = false;
					squashTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(presionTextInput != null){
					presionTextInput.selected = false;
					presionTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(zonasVerdesTextInput2 != null){
					zonasVerdesTextInput2.selected = false;
					zonasVerdesTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(gimnasioTextInput != null){
					gimnasioTextInput.selected = false;
					gimnasioTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(golfitoTextInput != null){
					golfitoTextInput.selected = false;
					golfitoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(ascensorTextInput != null){
					ascensorTextInput.selected = false;
					nombreSolicitanteTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(otrosDotacionTextInput != null){
					otrosDotacionTextInput.text = "";
					nombreSolicitanteTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(otrosDotacion2TextInput != null){
					nombreSolicitanteTextInput2.text = "";
					nombreSolicitanteTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//Bloque oferta demanda
				if(actualidadEdificadoraTextInput != null){
					actualidadEdificadoraTextInput.text = "";
					actualidadEdificadoraTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(comportamientoOfertaDemandaTextInput != null){
					comportamientoOfertaDemandaTextInput.text = "";
					comportamientoOfertaDemandaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(tipoComercializacionTextInput != null){
					tipoComercializacionTextInput.text = "";
					tipoComercializacionTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//Bloque Liquidacion
				if(cbxDescLiq0 != null){
					cbxDescLiq0.selectedIndex = -1;
					cbxDescLiq0.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq1 != null){
					cbxDescLiq1.selectedIndex = -1;
					cbxDescLiq1.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq2 != null){
					cbxDescLiq2.selectedIndex = -1;
					cbxDescLiq4.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq3 != null){
					cbxDescLiq3.selectedIndex = -1;
					cbxDescLiq4.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq4 != null){
					cbxDescLiq4.selectedIndex = -1;
					cbxDescLiq4.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq5 != null){
					cbxDescLiq5.selectedIndex = -1;
					cbxDescLiq5.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq6 != null){
					cbxDescLiq6.selectedIndex = -1;
					cbxDescLiq6.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq7 != null){
					cbxDescLiq7.selectedIndex = -1;
					cbxDescLiq7.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq8 != null){
					cbxDescLiq8.selectedIndex = -1;
					cbxDescLiq8.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxDescLiq9 != null){
					cbxDescLiq9.selectedIndex = -1;
					cbxDescLiq9.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput0 != null){
					descripcionDependenciaTextInput0.text = "";
					descripcionDependenciaTextInput0.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput1 != null){
					descripcionDependenciaTextInput1.text = "";
					descripcionDependenciaTextInput1.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput2 != null){
					descripcionDependenciaTextInput2.text = "";
					descripcionDependenciaTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput3 != null){
					descripcionDependenciaTextInput3.text = "";
					descripcionDependenciaTextInput3.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput4 != null){
					descripcionDependenciaTextInput4.text = "";
					descripcionDependenciaTextInput4.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput5 != null){
					descripcionDependenciaTextInput5.text = "";
					descripcionDependenciaTextInput5.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput6 != null){
					descripcionDependenciaTextInput6.text = "";
					descripcionDependenciaTextInput6.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput7 != null){
					descripcionDependenciaTextInput7.text = "";
					descripcionDependenciaTextInput7.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput8 != null){
					descripcionDependenciaTextInput8.text = "";
					descripcionDependenciaTextInput8.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(descripcionDependenciaTextInput9 != null){
					descripcionDependenciaTextInput9.text = "";
					descripcionDependenciaTextInput9.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput0 != null){
					areaLiquidacionTextInput0.text = "";
					areaLiquidacionTextInput0.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput1 != null){
					areaLiquidacionTextInput1.text = "";
					areaLiquidacionTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput2 != null){
					areaLiquidacionTextInput2.text = "";
					areaLiquidacionTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput3 != null){
					areaLiquidacionTextInput3.text = "";
					areaLiquidacionTextInput3.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput4 != null){
					areaLiquidacionTextInput4.text = "";
					areaLiquidacionTextInput4.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput5 != null){
					areaLiquidacionTextInput5.text = "";
					areaLiquidacionTextInput5.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput6 != null){
					areaLiquidacionTextInput6.text = "";
					areaLiquidacionTextInput6.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput7 != null){
					areaLiquidacionTextInput7.text = "";
					areaLiquidacionTextInput7.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput8 != null){
					areaLiquidacionTextInput8.text = "";
					areaLiquidacionTextInput8.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(areaLiquidacionTextInput9 != null){
					areaLiquidacionTextInput9.text = "";
					areaLiquidacionTextInput9.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput0 != null){
					valorTextInput0.text = "";
					valorTextInput0.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput1 != null){
					valorTextInput1.text = "";
					valorTextInput1.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput2 != null){
					valorTextInput2.text = "";
					valorTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput3 != null){
					valorTextInput3.text = "";
					valorTextInput3.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput4 != null){
					valorTextInput4.text = "";
					valorTextInput4.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput5 != null){
					valorTextInput5.text = "";
					valorTextInput5.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput6 != null){
					valorTextInput6.text = "";
					valorTextInput6.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput7 != null){
					valorTextInput7.text = "";
					valorTextInput7.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput8 != null){
					valorTextInput8.text = "";
					valorTextInput8.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTextInput9 != null){
					valorTextInput9.text = "";
					valorTextInput9.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput0 != null){
					valorTotalTextInput0.text = "";
					valorTotalTextInput0F.text = "";
					valorTotalTextInput0.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput1 != null){
					valorTotalTextInput1.text = "";
					valorTotalTextInput1.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput2 != null){
					valorTotalTextInput2.text = "";
					valorTotalTextInput2.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput3 != null){
					valorTotalTextInput3.text = "";
					valorTotalTextInput3.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput4 != null){
					valorTotalTextInput4.text = "";
					valorTotalTextInput4.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput5 != null){
					valorTotalTextInput5.text = "";
					valorTotalTextInput5.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput6 != null){
					valorTotalTextInput6.text = "";
					valorTotalTextInput6.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput7 != null){
					valorTotalTextInput7.text = "";
					valorTotalTextInput7.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput8 != null){
					valorTotalTextInput8.text = "";
					valorTotalTextInput8.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorTotalTextInput9 != null){
					valorTotalTextInput9.text = "";
					valorTotalTextInput9.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorAsegurableTextInput != null){
					valorAsegurableTextInput.text = "";
					valorAsegurableTextInputF.text = "";
					valorAsegurableTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(cbxCalificacion != null){
					cbxCalificacion.selectedIndex = -1;
					cbxCalificacion.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(totalAvaluoTextInput != null){
					totalAvaluoTextInput.text = "";
					totalAvaluoTextInputF.text = "";
					totalAvaluoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(valorUvrDiaTextInput != null){
					valorUvrDiaTextInput.text = "";
					valorUvrDiaTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(avaluoUvrTextInput != null){
					avaluoUvrTextInput.text = "";
					//avaluoUvrTextInputF.text = "";
					avaluoUvrTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//Bloque de Observaciones
				if(direccionAnexosTextInput != null)
				{
					direccionAnexosTextInput.text = "";
					direccionAnexosTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(otrasDireccionesTextInput != null )
				{
					otrasDireccionesTextInput.text = "";
					otrasDireccionesTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				if(observacionAvaluoTextInput != null )
				{
					observacionAvaluoTextInput.text = "";
					observacionAvaluoTextInput.setStyle("backgroundColor", 0xFFFFFF);
				}
				
				//Barras de progreso anexos
				if(uploadProgress != null){
					uploadProgress.setProgress(0,0);
					uploadProgress.label = "";
				}
				if(downloadProgress != null){
					downloadProgress.setProgress(0,0);
					downloadProgress.label = "";
				}
				if(uploadProgressDocAnexos != null){	
					uploadProgressDocAnexos.setProgress(0,0);
					uploadProgressDocAnexos.label = "";
				}
				if(downloadProgressDocAnexos != null){
					downloadProgressDocAnexos.setProgress(0,0);
					downloadProgressDocAnexos.label = "";
				}
				if(pb != null){
					pb.setProgress(0,0);
					pb.label = "";
					pb.visible=false;
				}
				
				if(chkTipoInforme != null){
					chkTipoInforme.selected = false; 
				}
				
				if(selectCiudadbasico != null){ 
					selectCiudadbasico = new ArrayCollection() ;
				}
				
				if(selectciudadescritura != null){
					selectciudadescritura = new ArrayCollection() ;
				}
				
				if(selectCiudadfiltro != null){
					selectCiudadfiltro = new ArrayCollection() ;
				}
				
				if(cbxDepartamento != null){
					cbxDepartamento.selectedIndex = -1;
				}
				
				if(matriculaInmobiliariaPpal1TextInput2 != null){
					matriculaInmobiliariaPpal1TextInput2.text= "";
				}
				
				if(txtMatriculaInmobiliariaPpal2Encab != null){
					txtMatriculaInmobiliariaPpal2Encab.text= "";
				}
				
			}
			
			/**
			 * Cancela el ingreso de un nuevo avaluo
			 * */
			protected function cancelNuevoAvaluo_clickHandler(event:MouseEvent):void
			{
				registrosEncontrados.text = ""; 
				dtgAvaluos.dataProvider.removeAll();
				avaluo.nombreSolicitante = "";
				avaluo.idTipoIdentificacion = "";
				avaluo.numeroIdentificacion = "";
				avaluo.codigoDaneDepartamento = "";
				if(avaluo.ciudad!=null){
					avaluo.ciudad.codDane = "";
				}	
				avaluo.barrio = "";
				avaluo.direccionInmueble = "";
				avaluo.matriculaInmobiliariaPpal1 = "";
				
				cbxTipoIdentificacion.selectedIndex = -1;
				cbxDepartamentoFiltro.selectedIndex = -1;
				direccionInmuebleTextInput.text = "";
				numeroIdentificacionTextInput.text = "";
				cbxCiudadFiltro.selectedIndex = -1;
				txtmatriculaInmobiliariaPpal1.text = "";
				txtmatriculaInmobiliariaPpal2.text = "";
				
				nombreSolicitanteTextInput.text = "";
				cbxTipoIdentificacionEncabezado.selectedIndex = 0;
				numeroIdentificacionTextInput2.text = "";
				fechaAvaluoDateField.text = "";
				cbxDepartamento.selectedIndex = -1;
				cbxCiudadEncabezado.selectedIndex = -1;
				barrioTextInput.text = "";
				direccionInmuebleTextInput2.text = "";
				matriculaInmobiliariaPpal1TextInput2.text = "";
				txtMatriculaInmobiliariaPpal2Encab.text = "";
				
				vstAvaluo.selectedIndex = 0;
				
				limpiarControles();
				
				avaluo=new Avaluo();
				
			}
			
			/**
			 * Permite llenar el comobo de ciudades del bloque basico, actualiza el codigo del dpto[ok]
			 * */
			protected function cbxDepartamentoBasico_changeHandler(event:IndexChangeEvent):void
			{
				if(event == null || event.oldIndex != -1 )
				{	
					if(cbxDepartamentoBasico.selectedIndex == spark.components.ComboBox.CUSTOM_SELECTED_ITEM)
					{	
						//cbxDepartamentoBasico.selectedIndex = -1;
						cbxDepartamentoBasico.selectedIndex = event.oldIndex;
					}else if(cbxDepartamentoBasico.selectedItem == null){
						selectCiudadbasico = new ArrayCollection(); 
					}else{
						selectCiudadbasico = new ArrayCollection();
						selectCiudadbasico = cbxDepartamentoBasico.selectedItem.ciudadesDepto;
						cbxCiudadBasico.invalidateDisplayList();
						cbxCiudadBasico.selectedIndex = -1;
						txiCodDaneDepto.text = (cbxDepartamentoBasico.selectedItem as Departamento).codDane;
					}										
				}
			}
			
			/**
			 * Permite actualizar el codigo de la ciudad
			 * */
			protected function cbxCiudadBasico_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxCiudadBasico.selectedIndex == spark.components.ComboBox.CUSTOM_SELECTED_ITEM)
				{	
					cbxCiudadBasico.selectedIndex = event.oldIndex;
				}	
				else{
					txiCodDaneCiudad.text = (cbxCiudadBasico.selectedItem as Ciudad).codDane
				}
			}
			
			
			protected function getValoresDominioResult_resultHandler(event:ResultEvent):void
			{
				if (selectTipoId == null || selectTipoId.length < 1){ 
					selectTipoId = getValoresDominioResult.lastResult;
					selectTipoId.removeItemAt(0);
				}
				if(cbxTipoIdentificacionEncabezado != null){
					cbxTipoIdentificacionEncabezado.selectedIndex = 0;
				}
			}
			
			
			protected function consultaDepartamentosResult_resultHandler(event:ResultEvent):void
			{
				selectDepartamento = consultaDepartamentosResult.lastResult;
				if((informacionInmueble2 != null) && (informacionInmueble2.departamentoEscritura != null)) {
					var indexDepartamento:int = getItemIndex(informacionInmueble2.departamentoEscritura,selectDepartamento,'codAsobancaria');
					selectciudadescritura =  (selectDepartamento[indexDepartamento] as Departamento).ciudadesDepto;
				}
			}
			
			protected function getValoresDominioResult29_resultHandler(event:ResultEvent):void
			{
				if(selectMetodologia==null || selectMetodologia.length<1){
					selectMetodologia = getValoresDominioResult29.lastResult;
				}
			}
			
			protected function getValoresDominioResult5_resultHandler(event:ResultEvent):void
			{
				if(selectEstadoVias==null || selectEstadoVias.length<1)
					selectEstadoVias = getValoresDominioResult5.lastResult;
			}
			
			/**
			 * Valida si activar el check de predio para acueducto [ok]
			 * */
			protected function acueductoSectorTextInput_clickHandler(event:MouseEvent):void
			{
				if (chkAcueductoSector.selected) {
					chkAcueducto.enabled = true;
				}
				else {
					chkAcueducto.selected = false;
					chkAcueducto.enabled = false;
				}
			}
			
			/**
			 * Valida si activar el check de predio para alcantarillado [ok]
			 * */
			protected function alcantarilladoSectorTextInput_clickHandler(event:MouseEvent):void
			{
				if(chkAlcantarilladoSector.selected) {
					chkAlcantarillado.enabled = true;
				}
				else {
					chkAlcantarillado.selected = false;
					chkAlcantarillado.enabled = false;
				} 
			}
			
			/**
			 * Valida si activar el check de predio para electricidad [ok]
			 * */
			protected function electricidadSectorTextInput_clickHandler(event:MouseEvent):void
			{
				if(chkElectricidadSector.selected) {
					chkElectricidad.enabled = true;
				}
				else {
					chkElectricidad.selected = false;
					chkElectricidad.enabled = false;
				}
			}
			
			/**
			 * Valida si activar el check de predio para gas [ok]
			 * */
			protected function gasSectorTextInput_clickHandler(event:MouseEvent):void
			{
				if(chkGasSector.selected) {
					chkGas.enabled = true;
				}
				else {
					chkGas.selected = false;
					chkGas.enabled = false;
				}
			}
			
			/**
			 * Valida si activar el check de predio para telefono [ok]
			 * */
			protected function telefonoSectorTextInput_clickHandler(event:MouseEvent):void
			{
				if(chkTelefonoSector.selected) {
					chkTelefono.enabled = true;
				}
				else {
					chkTelefono.selected = false;
					chkTelefono.enabled = false;
				}
			}
			
			protected function getValoresDominioResult30_resultHandler(event:ResultEvent):void
			{
				if(selectObjeto == null || selectObjeto.length < 1)
					selectObjeto = getValoresDominioResult30.lastResult;
			}
			
			
			protected function getValoresDominioResult31_resultHandler(event:ResultEvent):void
			{
				if(selectSector==null || selectSector.length<1)
					selectSector = getValoresDominioResult31.lastResult;
			}
			
			protected function getValoresDominioResult32_resultHandler(event:ResultEvent):void
			{
				if(selectTransporte==null || selectTransporte.length<1)
					selectTransporte = getValoresDominioResult32.lastResult;
			}
			
			
			protected function getValoresDominioResult3_resultHandler(event:ResultEvent):void
			{
				if(selectLegalidad==null || selectLegalidad.length<1)	
					selectLegalidad = getValoresDominioResult3.lastResult;
			}
			
			
			protected function getValoresDominioResult4_resultHandler(event:ResultEvent):void
			{
				if(selectTopografia==null || selectTopografia.length<1)
					selectTopografia = getValoresDominioResult4.lastResult;
			}
			
			const CONST_LIMITE_CONSULTA:Number = 1000;
			
			protected function getAvaluosPorCriterioResult_resultHandler(event:ResultEvent):void
			{
				if((getAvaluosPorCriterioResult.lastResult == null) || (getAvaluosPorCriterioResult.lastResult.length == 0)) {
					registrosEncontrados.text = ""; 
					dtgAvaluos.dataProvider.removeAll();
					Alert.show("La consulta no arroja resultados, intente otros criterios de búsqueda",null, null, null, null, null, Alert.OK);
					registrosEncontrados.visible = false;
				}
				else
				{
					if(getAvaluosPorCriterioResult.lastResult.length >= CONST_LIMITE_CONSULTA )
					{
						registrosEncontrados.text = "TOTAL: "+getAvaluosPorCriterioResult.lastResult.length + " Registros encontrados";
						registrosEncontrados.text = "MOSTRANDO: Primeros "+getAvaluosPorCriterioResult.lastResult.length + " Registros encontrados. Para ver el TOTAL filtre mas su consulta";
						registrosEncontrados.visible = true;
					}	
					else
					{
						registrosEncontrados.text = "TOTAL: "+getAvaluosPorCriterioResult.lastResult.length + " Registros encontrados";
						registrosEncontrados.visible = true;
					}	
					
				}
				
				//Limpia componentes
				cbxTipoIdentificacion.selectedIndex = -1;
				cbxDepartamentoFiltro.selectedIndex = -1;
				direccionInmuebleTextInput.text = "";
				numeroIdentificacionTextInput.text = "";
				cbxCiudadFiltro.selectedIndex = -1;
				txtmatriculaInmobiliariaPpal1.text = "";
				txtmatriculaInmobiliariaPpal2.text = "";
				
				//Limpia valores del filtro
				informacionInmueble.matriculaInmobiliariaPpal1 = "";
				if(informacionInmueble.avaluo!=null)
				{
					informacionInmueble.avaluo.idTipoIdentificacion = "";					
					informacionInmueble.avaluo.numeroIdentificacion = "";
					informacionInmueble.avaluo.idDepartamento = "";
					informacionInmueble.avaluo.objCiudad = null;
					informacionInmueble.avaluo.direccionInmueble = "";
				}
			}
			
			protected function getValoresDominioResult6_resultHandler(event:ResultEvent):void
			{
				if(selecttipovivienda==null || selecttipovivienda.length<1)
					selecttipovivienda = getValoresDominioResult6.lastResult;
			}
			
			
			protected function getValoresDominioResult7_resultHandler(event:ResultEvent):void
			{
				if(selectusoinmueble==null || selectusoinmueble.length<1)
					selectusoinmueble = getValoresDominioResult7.lastResult;
			}
			
			
			protected function getValoresDominioResult8_resultHandler(event:ResultEvent):void
			{
				if(selectclaseinmueble==null || selectclaseinmueble.length<1)
					selectclaseinmueble = getValoresDominioResult8.lastResult; 
			}
			
			
			protected function getValoresDominioResult9_resultHandler(event:ResultEvent):void
			{
				if(selectcategoria==null || selectcategoria.length<1)
					selectcategoria = getValoresDominioResult9.lastResult;
			}
			
			
			protected function getValoresDominioResult10_resultHandler(event:ResultEvent):void
			{
				if(selectubicacion2==null || selectubicacion2.length<1)
					selectubicacion2 = getValoresDominioResult10.lastResult;
			}
			
			
			protected function getValoresDominioResult11_resultHandler(event:ResultEvent):void
			{
				if(selectubicacion3==null || selectubicacion3.length<1)
					selectubicacion3 = getValoresDominioResult11.lastResult;
			}
			
			protected function getValoresDominioResult33_resultHandler(event:ResultEvent):void
			{
				if(selectafirmarusoactual==null || selectafirmarusoactual.length<1)
					selectafirmarusoactual = getValoresDominioResult33.lastResult;
			}
			
			
			protected function cbxCiudadExcritura_creationCompleteHandler(event:FlexEvent):void
			{
				
			}
			
			
			protected function cbxDepartamentoEscritura_creationCompleteHandler(event:FlexEvent):void
			{
				if(consultaDepartamentosResult == null){
					if(selectDepartamento==null || selectDepartamento.length<1){ 
						consultaDepartamentosResult.token = departamentoService.consultaDepartamentos();
					}
				}
				if(cbxDepartamentoEscritura.selectedIndex>-1)
					selectciudadescritura = cbxDepartamentoEscritura.selectedItem.ciudadesDepto;
			}			
			
			protected function cbxDepartamentoEscritura_changeHandler(event:IndexChangeEvent):void
			{
				/*if(cbxCiudadEscritura.selectedIndex == spark.components.ComboBox.CUSTOM_SELECTED_ITEM /*|| cbxCiudadEscritura.selectedIndex == -1*/ // )
				/* {	
					cbxCiudadEscritura.selectedIndex = event.oldIndex;
				}else */
					
				if(cbxDepartamentoEscritura.selectedItem == null){
					selectciudadescritura = new ArrayCollection();					
				}
				else{
					selectciudadescritura = new ArrayCollection();
					selectciudadescritura = cbxDepartamentoEscritura.selectedItem.ciudadesDepto;
					cbxCiudadEscritura.invalidateDisplayList();
					cbxCiudadEscritura.selectedIndex = -1;
				}
			}			
			
			protected function getValoresDominioResult12_resultHandler(event:ResultEvent):void
			{
				if(selectafirmarcercafuenthidri==null || selectafirmarcercafuenthidri.length<1)
					selectafirmarcercafuenthidri = getValoresDominioResult12.lastResult;
			}
			
			
			protected function cbxDistancia_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectdistanciametros==null || selectdistanciametros.length<1)
					getValoresDominioResult34.token = dominiosAuxDao.getValoresDominio("NIVEL");
			}
			
			
			protected function cbxAltura_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult35.token = dominiosAuxDao.getValoresDominio("ALTURA");
			}
			
			
			protected function cbxPisosBodega_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectpisosbodega==null || selectpisosbodega.length<1)
					getValoresDominioResult36.token = dominiosAuxDao.getValoresDominio("PISOSBODEGA");
			}
			
			protected function cbxEstadoConstruccion_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectestadoconstruccion==null || selectestadoconstruccion.length<1)
					getValoresDominioResult37.token = dominiosAuxDao.getValoresDominio("ESTADOCONSTRUCCION");
				
			}
			
			
			protected function cbxSimetriaPlanta_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult67.token = dominiosAuxDao.getValoresDominio("SIMETRIA");
			}
			/*
			protected function cbxAsentamientos_creationCompleteHandler(event:FlexEvent):void
			{
			getValoresDominioResult40.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
			}
			*/
			protected function cbxVentilacion_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectventilacion==null || selectventilacion.length<1)
					getValoresDominioResult41.token = dominiosAuxDao.getValoresDominio("MBR");
			}
			protected function cbxIluminacion_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectiluminacion==null || selectiluminacion.length<1)
					getValoresDominioResult42.token = dominiosAuxDao.getValoresDominio("MBR");
			}
			protected function cbxReqCondSalubirda_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectreccondsalubri==null || selectreccondsalubri.length<1)
					getValoresDominioResult43.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
			}
			protected function cbxCondSalubridad_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectcondsalubridad==null || selectcondsalubridad.length<1)
					getValoresDominioResult44.token = dominiosAuxDao.getValoresDominio("MBR");
			}
			protected function cbxArborizacion_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectaroborizacion==null || selectaroborizacion.length<1)
					getValoresDominioResult45.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			protected function cbxParques_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectparques==null || selectparques.length<1)
					getValoresDominioResult46.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			protected function cbxZonaVerde_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectzonasverdes==null || selectzonasverdes.length<1)
					getValoresDominioResult47.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			protected function cbxPorAire_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectporaire==null || selectporaire.length<1)
					getValoresDominioResult48.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			protected function cbxBasura_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectbasura==null || selectbasura.length<1)
					getValoresDominioResult49.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			protected function cbxInseguridad_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectinseguridad==null || selectinseguridad.length<1)
					getValoresDominioResult50.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			protected function cbxRuido_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectruido==null || selectruido.length<1)
					getValoresDominioResult51.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			protected function cbxAguasServidas_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectaguasservidas==null || selectaguasservidas.length<1)
					getValoresDominioResult52.token = dominiosAuxDao.getValoresDominio("AFIRMAR2");
			}
			
			protected function cbxEstadoPisos_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectestpisos==null || selectestpisos.length<1)
					getValoresDominioResult53.token = dominiosAuxDao.getValoresDominio("INFOCONSTR");
			}
			protected function cbxEstadoMuros_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectestmuros==null || selectestmuros.length<1)
					getValoresDominioResult54.token = dominiosAuxDao.getValoresDominio("INFOCONSTR");
			}
			protected function cbxEstadoTecho_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectesttechos==null || selectesttechos.length<1)	
					getValoresDominioResult55.token = dominiosAuxDao.getValoresDominio("INFOCONSTR");
			}
			protected function cbxEstadoMadera_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectestmadera==null || selectestmadera.length<1)
					getValoresDominioResult56.token = dominiosAuxDao.getValoresDominio("INFOCONSTR");
			}
			protected function cbxEstadoMetal_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectestmetal==null || selectestmetal.length<1)
					getValoresDominioResult57.token = dominiosAuxDao.getValoresDominio("INFOCONSTR");
			}
			protected function cbxEstadobanos_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectestbanos==null || selectestbanos.length<1)
					getValoresDominioResult58.token = dominiosAuxDao.getValoresDominio("INFOCONSTR");
			}
			
			protected function cbxCalidadPisos_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectcalpisos==null || selectcalpisos.length<1)
					getValoresDominioResult59.token = dominiosAuxDao.getValoresDominio("CALIDAD");
			}
			protected function cbxCalidadMuros_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectcalmuros==null || selectcalmuros.length<1)
					getValoresDominioResult60.token = dominiosAuxDao.getValoresDominio("CALIDAD");
			}
			protected function cbxCalidadTechos_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectcaltechos==null || selectcaltechos.length<1)
					getValoresDominioResult61.token = dominiosAuxDao.getValoresDominio("CALIDAD");
			}
			protected function cbxCalidadMadera_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectcalmadera==null || selectcalmadera.length<1)
					getValoresDominioResult62.token = dominiosAuxDao.getValoresDominio("CALIDAD");
			}
			protected function cbxCalidadMetal_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectcalmetal==null || selectcalmetal.length<1)
					getValoresDominioResult63.token = dominiosAuxDao.getValoresDominio("CALIDAD");
			}
			protected function cbxCalidadBanos_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectcalbanos==null || selectcalbanos.length<1)
					getValoresDominioResult64.token = dominiosAuxDao.getValoresDominio("CALIDAD");
			}
			
			protected function cbxAguCerrada_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectconjcerrado==null || selectconjcerrado.length<1)
					getValoresDominioResult65.token = dominiosAuxDao.getValoresDominio("AFIRMAR");
			}
			
			protected function cbxPorpiedadHorizontal_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectprophorizontal==null || selectprophorizontal.length<1)
					getValoresDominioResult66.token = dominiosAuxDao.getValoresDominio("SOMETIDOPROPIEDAD");
			}
			
			
			protected function create(arg0:InformacionConstruccion):void
			{
				createResult10.token = construccionService.create(arg0);
			}
			
			
			protected function getValoresDominioResult13_resultHandler(event:ResultEvent):void
			{
				if(selectestadoconservacion==null || selectestadoconservacion.length<1)
					selectestadoconservacion = getValoresDominioResult13.lastResult;
			}
			
			
			protected function getValoresDominioResult14_resultHandler(event:ResultEvent):void
			{
				if(selectestructura==null || selectestructura.length<1)
					selectestructura = getValoresDominioResult14.lastResult;
			}
			
			
			protected function getValoresDominioResult15_resultHandler(event:ResultEvent):void
			{
				if(selectmaterialestructura==null || selectmaterialestructura.length<1)
					selectmaterialestructura = getValoresDominioResult15.lastResult;
			}
			
			
			protected function getValoresDominioResult16_resultHandler(event:ResultEvent):void
			{
				if(selectfachada==null || selectfachada.length<1)
					selectfachada = getValoresDominioResult16.lastResult;
			}
			
			
			protected function getValoresDominioResult17_resultHandler(event:ResultEvent):void
			{
				if(selecttipofachada==null || selecttipofachada.length<1)
					selecttipofachada = getValoresDominioResult17.lastResult;
			}
			
			
			protected function getValoresDominioResult18_resultHandler(event:ResultEvent):void
			{
				if(selectcubierta==null || selectcubierta.length<1)
					selectcubierta = getValoresDominioResult18.lastResult;
			}
			
			
			protected function getValoresDominioResult19_resultHandler(event:ResultEvent):void
			{
				if(selecttanquesagua==null || selecttanquesagua.length<1)
					selecttanquesagua = getValoresDominioResult19.lastResult;
			}
			
			
			protected function getValoresDominioResult20_resultHandler(event:ResultEvent):void
			{
				if(selectlongluces==null || selectlongluces.length<1)
					selectlongluces = getValoresDominioResult20.lastResult;
			}
			
			
			protected function getValoresDominioResult21_resultHandler(event:ResultEvent):void
			{
				if(selectsimetriaaltura==null || selectsimetriaaltura.length<1)
					selectsimetriaaltura = getValoresDominioResult21.lastResult;
			}
			
			
			protected function getValoresDominioResult22_resultHandler(event:ResultEvent):void
			{
				if(selectgolpeteo==null || selectgolpeteo.length<1)
					selectgolpeteo = getValoresDominioResult22.lastResult;
			}
			
			
			protected function getValoresDominioResult23_resultHandler(event:ResultEvent):void
			{
				if(selectdanosprevios==null || selectdanosprevios.length<1)
					selectdanosprevios = getValoresDominioResult23.lastResult;
			}
			
			
			protected function getValoresDominioResult24_resultHandler(event:ResultEvent):void
			{
				if(selectestcocina==null || selectestcocina.length<1)
					selectestcocina  = getValoresDominioResult24.lastResult;
			}
			
			
			protected function getValoresDominioResult25_resultHandler(event:ResultEvent):void
			{
				if(selectcalcocina==null || selectcalcocina.length<1)
					selectcalcocina  = getValoresDominioResult25.lastResult;
			}
			
			
			protected function getValoresDominioResult27_resultHandler(event:ResultEvent):void
			{
				if(selectubicacion==null || selectubicacion.length<1)
					selectubicacion = getValoresDominioResult27.lastResult;
			}
			
			
			protected function getValoresDominioResult34_resultHandler(event:ResultEvent):void
			{
				if(selectdistanciametros==null || selectdistanciametros.length<1)
					selectdistanciametros = getValoresDominioResult34.lastResult;
				
			}
			
			
			protected function getValoresDominioResult35_resultHandler(event:ResultEvent):void
			{
				if(selectalura==null || selectalura.length<1)
					selectalura = getValoresDominioResult35.lastResult;
			}
			
			
			protected function getValoresDominioResult36_resultHandler(event:ResultEvent):void
			{
				if(selectpisosbodega==null || selectpisosbodega.length<1)
					selectpisosbodega = getValoresDominioResult36.lastResult;
			}
			
			
			protected function getValoresDominioResult37_resultHandler(event:ResultEvent):void
			{
				if(selectestadoconstruccion==null || selectestadoconstruccion.length<1)
					selectestadoconstruccion = getValoresDominioResult37.lastResult;
				cbxEstadoConstruccion_changeHandler(null);
			}
			
			
			protected function getValoresDominioResult38_resultHandler(event:ResultEvent):void
			{
				if(selectparapetos==null || selectparapetos.length<1)
					selectparapetos = getValoresDominioResult38.lastResult;
			}
			
			
			protected function getValoresDominioResult39_resultHandler(event:ResultEvent):void
			{
				if(selectsobrepeso==null || selectsobrepeso.length<1)
					selectsobrepeso = getValoresDominioResult39.lastResult;
			}
			
			
			protected function getValoresDominioResult40_resultHandler(event:ResultEvent):void
			{
				if(selectasentamientos==null || selectasentamientos.length<1)
					selectasentamientos  = getValoresDominioResult40.lastResult;
			}
			
			
			protected function getValoresDominioResult41_resultHandler(event:ResultEvent):void
			{
				if(selectventilacion==null || selectventilacion.length<1)
					selectventilacion = getValoresDominioResult41.lastResult;
			}
			
			
			protected function getValoresDominioResult42_resultHandler(event:ResultEvent):void
			{
				if(selectiluminacion==null || selectiluminacion.length<1)
					selectiluminacion = getValoresDominioResult42.lastResult;
			}
			
			
			protected function getValoresDominioResult43_resultHandler(event:ResultEvent):void
			{
				if(selectreccondsalubri==null || selectreccondsalubri.length<1)
					selectreccondsalubri = getValoresDominioResult43.lastResult;
			}
			
			
			protected function getValoresDominioResult44_resultHandler(event:ResultEvent):void
			{
				if(selectcondsalubridad==null || selectcondsalubridad.length<1)
					selectcondsalubridad = getValoresDominioResult44.lastResult;
			}
			
			
			protected function getValoresDominioResult45_resultHandler(event:ResultEvent):void
			{
				if(selectaroborizacion==null || selectaroborizacion.length<1)
					selectaroborizacion = getValoresDominioResult45.lastResult;
			}
			
			
			protected function getValoresDominioResult46_resultHandler(event:ResultEvent):void
			{
				if(selectparques==null || selectparques.length<1)
					selectparques = getValoresDominioResult46.lastResult;
			}
			
			
			protected function getValoresDominioResult47_resultHandler(event:ResultEvent):void
			{
				if(selectzonasverdes==null || selectzonasverdes.length<1)				
					selectzonasverdes = getValoresDominioResult47.lastResult;
			}
			
			
			protected function getValoresDominioResult48_resultHandler(event:ResultEvent):void
			{
				if(selectporaire==null || selectporaire.length<1)
					selectporaire = getValoresDominioResult48.lastResult;
			}
			
			
			protected function getValoresDominioResult49_resultHandler(event:ResultEvent):void
			{
				if(selectbasura==null || selectbasura.length<1)
					selectbasura = getValoresDominioResult49.lastResult;
			}
			
			
			protected function getValoresDominioResult50_resultHandler(event:ResultEvent):void
			{
				if(selectinseguridad==null || selectinseguridad.length<1)
					selectinseguridad  = getValoresDominioResult50.lastResult;
			}
			
			
			protected function getValoresDominioResult51_resultHandler(event:ResultEvent):void
			{
				if(selectruido==null || selectruido.length<1)
					selectruido = getValoresDominioResult51.lastResult;
			}
			
			
			protected function getValoresDominioResult52_resultHandler(event:ResultEvent):void
			{
				if(selectaguasservidas==null || selectaguasservidas.length<1)
					selectaguasservidas = getValoresDominioResult52.lastResult;
			}
			
			
			protected function getValoresDominioResult53_resultHandler(event:ResultEvent):void
			{
				if(selectestpisos==null || selectestpisos.length<1)
					selectestpisos = getValoresDominioResult53.lastResult;
			}
			
			
			protected function getValoresDominioResult54_resultHandler(event:ResultEvent):void
			{
				if(selectestmuros==null || selectestmuros.length<1)
					selectestmuros = getValoresDominioResult54.lastResult;
			}
			
			
			protected function getValoresDominioResult55_resultHandler(event:ResultEvent):void
			{
				if(selectesttechos==null || selectesttechos.length<1)
					selectesttechos = getValoresDominioResult55.lastResult;
			}
			
			
			protected function getValoresDominioResult56_resultHandler(event:ResultEvent):void
			{
				if(selectestmadera==null || selectestmadera.length<1)
					selectestmadera = getValoresDominioResult56.lastResult;
			}
			
			
			protected function getValoresDominioResult57_resultHandler(event:ResultEvent):void
			{
				if(selectestmetal==null || selectestmetal.length<1)
					selectestmetal = getValoresDominioResult57.lastResult;
			}
			
			
			protected function getValoresDominioResult58_resultHandler(event:ResultEvent):void
			{
				if(selectestbanos==null || selectestbanos.length<1)
					selectestbanos = getValoresDominioResult58.lastResult;
			}
			
			
			protected function getValoresDominioResult59_resultHandler(event:ResultEvent):void
			{
				if(selectcalpisos==null || selectcalpisos.length<1)
					selectcalpisos = getValoresDominioResult59.lastResult;
			}
			
			
			protected function getValoresDominioResult60_resultHandler(event:ResultEvent):void
			{
				if(selectcalmuros==null || selectcalmuros.length<1)
					selectcalmuros = getValoresDominioResult60.lastResult;
			}
			
			
			protected function getValoresDominioResult61_resultHandler(event:ResultEvent):void
			{
				if(selectcaltechos==null || selectcaltechos.length<1)
					selectcaltechos = getValoresDominioResult61.lastResult;
			}
			
			
			protected function getValoresDominioResult62_resultHandler(event:ResultEvent):void
			{
				if(selectcalmadera==null || selectcalmadera.length<1)
					selectcalmadera = getValoresDominioResult62.lastResult;
			}
			
			
			protected function getValoresDominioResult63_resultHandler(event:ResultEvent):void
			{
				if(selectcalmetal==null || selectcalmetal.length<1)
					selectcalmetal = getValoresDominioResult63.lastResult;
			}
			
			
			protected function getValoresDominioResult64_resultHandler(event:ResultEvent):void
			{
				if(selectcalbanos==null || selectcalbanos.length<1)
					selectcalbanos = getValoresDominioResult64.lastResult;
			}
			
			
			protected function getValoresDominioResult65_resultHandler(event:ResultEvent):void
			{
				if(selectconjcerrado==null || selectconjcerrado.length<1)
					selectconjcerrado = getValoresDominioResult65.lastResult;
			}
			
			
			protected function getValoresDominioResult66_resultHandler(event:ResultEvent):void
			{
				if(selectprophorizontal==null || selectprophorizontal.length<1)
					selectprophorizontal = getValoresDominioResult66.lastResult;
			}
			
			
			protected function getValoresDominioResult67_resultHandler(event:ResultEvent):void
			{
				if(selectsimetriaplanta==null || selectsimetriaplanta.length<1)
					selectsimetriaplanta = getValoresDominioResult67.lastResult;
			}
			
			protected function getValoresDominioResult68_resultHandler(event:ResultEvent):void
			{
				if(selectcalificacion==null || selectcalificacion.length<1)
					selectcalificacion = getValoresDominioResult68.lastResult;
			}
			
			protected function btnGuardarConstruccion_clearHandler(event:Event):void{
				
				//11 Jul 2013 Mantis 13739 Comentario 0061577 1. Dejar los campos obligatorios resaltados (coloreados) independiente que el contenido haya sido diligenciado o no.
				//limpiarCampoRequeridoDTOlist(ListaCampos(1));
				
				var estadoSeleccionado:String = "";
				if(cbxEstadoConstruccion != null && cbxEstadoConstruccion.selectedIndex > -1 ){
					estadoSeleccionado = cbxEstadoConstruccion.selectedItem.rvMeaning;
				}   
				
				if((chkSinTerminarNueva == null && chkTerminadoNueva == null) || 
					(!chkSinTerminarNueva.selected && !chkTerminadoNueva.selected)
					&& (estadoSeleccionado.toUpperCase() == "Nueva".toUpperCase()) 
				)
				{ 
					Alert.show("Por favor seleccionar si se encuentra Terminado o En Obra",null, null, null, null, null, Alert.OK);
				}else if(chkSinTerminarNueva.selected && avanceObraTextInput.text.length==0)
				{ Alert.show("Por favor ingresar el porcentaje de avance de obra",null, null, null, null, null, Alert.OK);
				}
				else
				{	
					nombreSeccion="InfoConstruccion";
					//isChangeTab=true;
					
					 
					guardarInfoConstruccion();
					
					//isChangeTab=true;
					//tbnAvaluosConstruccion
					/* if(tbnAvaluosConstruccion.selectedIndex != 5)
					{
						isChangeTab=false;
					}
					else if(tbnAvaluosConstruccion.selectedIndex == 5)
					{
						isChangeTab=true;
					}*/ 
					
					if(!guardarConstruccionSinClick || event !=null){
						if(!guardarConstruccionSinClick){
							guardarConstruccionSinClick = new Boolean(true);							
						}
						if(event != null){
							event = null ; 
						}						 
						// administrarPanelesInformacionConstruccion();						
					}
					 
				}
			}
			
			
			public static const PORCENTAJE_ASOBANCARIA:int = 70;
			
			protected function guardarInfoConstruccion():void
			{
				informacionConstruccion.avaluo = null;
				var avaluoTmp:Avaluo = new Avaluo();
				avaluoTmp.idAvaluo = avaluo2.idAvaluo;
				avaluoTmp = avaluo2;
				informacionConstruccion.avaluo = avaluoTmp;
				condicionesSalubridad.avaluo = avaluoTmp;
				//Construccion
				if((cbxFuentesHidricas != null) && (cbxFuentesHidricas.selectedIndex > -1)) {
					informacionConstruccion.ubicacionFuentesHidricas = cbxFuentesHidricas.selectedItem.rvLowValue;
				}
				if((cbxDistancia != null) && (cbxDistancia.selectedIndex > -1)) {
					informacionConstruccion.ubicacionNivelVia = cbxDistancia.selectedItem.rvLowValue;
				}
				
				
				if((categoria.rvLowValue != null) && (categoria.rvLowValue.length > 0) &&(categoria.rvLowValue == '5')){
					isBodega = true;
					
					if((cbxAltura != null) && (cbxAltura.selectedIndex > -1)) {
						informacionConstruccion.altura = cbxAltura.selectedItem.rvLowValue;
					}
					if((cbxPisosBodega != null) && (cbxPisosBodega.selectedIndex > -1)) {
						informacionConstruccion.pisosBodega = cbxPisosBodega.selectedItem.rvLowValue;
					}
				}
				else {
					isBodega = false;
					if(cbxAltura != null){
						cbxAltura.selectedIndex = -1;
						txtAltura.setVisible(isBodega);
						cbxAltura.setVisible(isBodega);
					}
					if(cbxPisosBodega!= null){
						cbxPisosBodega.selectedIndex = -1;
						txtPisosBodega.setVisible(isBodega);
						cbxPisosBodega.setVisible(isBodega);
					}
				}
				
				
				if((cbxEstadoConstruccion != null) && (cbxEstadoConstruccion.selectedIndex > -1)) {
					informacionConstruccion.estadoConstruccion = cbxEstadoConstruccion.selectedItem.rvLowValue;
				}
				if((cbxEstadoConservacion != null) && (cbxEstadoConservacion.selectedIndex > -1)) {
					informacionConstruccion.estadoConservacion = cbxEstadoConservacion.selectedItem.rvLowValue;
				}
				if((cbxEstructura != null) && (cbxEstructura.selectedIndex > -1)) {
					informacionConstruccion.estructura = cbxEstructura.selectedItem.rvLowValue;
				}
				/*
				if((cbxMaterialesEstructura != null) && (cbxMaterialesEstructura.selectedIndex > -1)) {
				informacionConstruccion.materialEstructura = cbxMaterialesEstructura.selectedItem.rvLowValue;
				}
				*/
				if((cbxFachada != null) && (cbxFachada.selectedIndex > -1)) {
					informacionConstruccion.fachada = cbxFachada.selectedItem.rvLowValue;
				}
				if((cbxTipoFachada != null) && (cbxTipoFachada.selectedIndex > -1)) {
					informacionConstruccion.tipoFachada = cbxTipoFachada.selectedItem.rvLowValue;
				}
				if((cbxCubierta != null) && (cbxCubierta.selectedIndex > -1)) {
					informacionConstruccion.cubierta = cbxCubierta.selectedItem.rvLowValue;
				}
				if((cbxParapetosCubierta != null) && (cbxParapetosCubierta.selectedIndex > -1)) {
					informacionConstruccion.parapetosCubierta = cbxParapetosCubierta.selectedItem.rvLowValue;
				}
				/*
				if((cbxUbiTanques != null) && (cbxUbiTanques.selectedIndex > -1)) {
				informacionConstruccion.ubicacionTanque = cbxUbiTanques.selectedItem.rvLowValue;
				}
				*/
				/*
				if((cbxLongLuces != null) && (cbxLongLuces.selectedIndex > -1)) {
				informacionConstruccion.luces = cbxLongLuces.selectedItem.rvLowValue;
				}*/
				/*
				if((cbxSimetriaAltura != null) && (cbxSimetriaAltura.selectedIndex > -1)) {
				informacionConstruccion.simetriaAltura = cbxSimetriaAltura.selectedItem.rvLowValue;
				}
				if(( cbxSimetriaPlanta!= null) && (cbxSimetriaPlanta.selectedIndex > -1)) {
				informacionConstruccion.simetriaPlanta = cbxSimetriaPlanta.selectedItem.rvLowValue;
				}
				*/
				/*
				if((cbxSobrepeso != null) && (cbxSobrepeso.selectedIndex > -1)) {
				informacionConstruccion.sobrePeso = cbxSobrepeso.selectedItem.rvLowValue;
				}
				*/
				if((cbxGolpeteo != null) && (cbxGolpeteo.selectedIndex > -1)) {
					informacionConstruccion.golpeteo = cbxGolpeteo.selectedItem.rvLowValue;
				}
				/*
				if((cbxAsentamientos != null) && (cbxAsentamientos.selectedIndex > -1)) {
				informacionConstruccion.asentamientos = cbxAsentamientos.selectedItem.rvLowValue;
				}
				*/
				/*
				if((cbxDanoPrevio != null) && (cbxDanoPrevio.selectedIndex > -1)) {
				informacionConstruccion.danoPrevio = cbxDanoPrevio.selectedItem.rvLowValue;
				}
				*/
				if((cbxCalidadPisos != null) && (cbxCalidadPisos.selectedIndex > -1)) {
					informacionConstruccion.calidadPiso = cbxCalidadPisos.selectedItem.rvLowValue;
				}
				if((cbxEstadoPisos != null) && (cbxEstadoPisos.selectedIndex > -1)) {
					informacionConstruccion.estadoPisos = cbxEstadoPisos.selectedItem.rvLowValue;
				}
				if((cbxCalidadMuros != null) && (cbxCalidadMuros.selectedIndex > -1)) {
					informacionConstruccion.calidadMuro = cbxCalidadMuros.selectedItem.rvLowValue;
				}
				if((cbxEstadoMuros != null) && (cbxEstadoMuros.selectedIndex > -1)) {
					informacionConstruccion.estadoMuros = cbxEstadoMuros.selectedItem.rvLowValue;
				}
				if((cbxCalidadTechos != null) && (cbxCalidadTechos.selectedIndex > -1)) {
					informacionConstruccion.calidadTecho = cbxCalidadTechos.selectedItem.rvLowValue;
				}
				if((cbxEstadoTecho != null) && (cbxEstadoTecho.selectedIndex > -1)) {
					informacionConstruccion.estructuraTechos = cbxEstadoTecho.selectedItem.rvLowValue;
				}
				if((cbxCalidadMadera != null) && (cbxCalidadMadera.selectedIndex > -1)) {
					informacionConstruccion.calidadMadera = cbxCalidadMadera.selectedItem.rvLowValue;
				}
				if((cbxEstadoMadera != null) && (cbxEstadoMadera.selectedIndex > -1)) {
					informacionConstruccion.estadoMadera = cbxEstadoMadera.selectedItem.rvLowValue;
				}
				if((cbxCalidadMetal != null) && (cbxCalidadMetal.selectedIndex > -1)) {
					informacionConstruccion.calidMetal = cbxCalidadMetal.selectedItem.rvLowValue;
				}
				if((cbxEstadoMetal != null) && (cbxEstadoMetal.selectedIndex > -1)) {
					informacionConstruccion.estadoMetal = cbxEstadoMetal.selectedItem.rvLowValue;
				}
				if((cbxEstadobanos != null) && (cbxEstadobanos.selectedIndex > -1)) {
					informacionConstruccion.estadoBanios = cbxEstadobanos.selectedItem.rvLowValue;
				}
				if((cbxCalidadBanos != null) && (cbxCalidadBanos.selectedIndex > -1)) {
					informacionConstruccion.calidadBanio = cbxCalidadBanos.selectedItem.rvLowValue;
				}
				if((cbxCalidadCocina != null) && (cbxCalidadCocina.selectedIndex > -1)) {
					informacionConstruccion.calidadCocina = cbxCalidadCocina.selectedItem.rvLowValue;
				}
				if((cbxEstadoCocina != null) && (cbxEstadoCocina.selectedIndex > -1)) {
					informacionConstruccion.estadoCocina = cbxEstadoCocina.selectedItem.rvLowValue;
				}
				if((cbxPorpiedadHorizontal != null) && (cbxPorpiedadHorizontal.selectedIndex > -1)) {
					informacionConstruccion.propiedadHorizontal = cbxPorpiedadHorizontal.selectedItem.rvLowValue;
					
					var selectedItem:Dominios = cbxPorpiedadHorizontal.selectedItem as Dominios;
					if((selectedItem != null) && (selectedItem.rvLowValue == '1')){
						propiedadHorizontal = true;
					}
					else
					{
						propiedadHorizontal = false;
					}
					isCargaInicial = "true";
					
					/*
					getValoresDominioResult28.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult69.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult70.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult71.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult71.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult72.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult73.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult74.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult75.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult76.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					getValoresDominioResult77.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					*/
					if(selectdescliq0==null || selectdescliq0.length<1)
						getValoresDominioResult28.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq1==null || selectdescliq1.length<1)
						getValoresDominioResult69.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq2==null || selectdescliq2.length<1)
						getValoresDominioResult70.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq3==null || selectdescliq3.length<1)
						getValoresDominioResult71.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq4==null || selectdescliq4.length<1)
						getValoresDominioResult72.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq5==null || selectdescliq5.length<1)
						getValoresDominioResult73.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq6==null || selectdescliq6.length<1)
						getValoresDominioResult74.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq7==null || selectdescliq7.length<1)
						getValoresDominioResult75.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq8==null || selectdescliq8.length<1)
						getValoresDominioResult76.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					if(selectdescliq9==null || selectdescliq9.length<1)
						getValoresDominioResult77.token = dominiosAuxDao.getValoresDominio("DESCLIQUIDACION");
					
				}
				if((cbxAguCerrada != null) && (cbxAguCerrada.selectedIndex > -1)) {
					informacionConstruccion.conjuntoAgrupacionCerrada = cbxAguCerrada.selectedItem.rvLowValue;
				}
				if((cbxUbicacionInmueble != null) && (cbxUbicacionInmueble.selectedIndex > -1)) {
					informacionConstruccion.ubicacionInmueble = cbxUbicacionInmueble.selectedItem.rvLowValue;
				}
				if((cbxDistancia != null) && (cbxDistancia.selectedIndex > -1)) {
					informacionConstruccion.ubicacionNivelVia = cbxDistancia.selectedItem.rvLowValue;
				}
				if((cbxVentilacion != null) && (cbxVentilacion.selectedIndex > -1)) {
					informacionConstruccion.ventilacion = cbxVentilacion.selectedItem.rvLowValue;
				}
				if((cbxIluminacion != null) && (cbxIluminacion.selectedIndex > -1)) {
					informacionConstruccion.iluminacion = cbxIluminacion.selectedItem.rvLowValue;
				}
				if(chbTerminado != null) {
					informacionConstruccion.estadoTerminadoUsado = chbTerminado.selected ?"1":"0";
				}
				if(chbSinTerminar != null) {
					informacionConstruccion.sinTerminar = chbSinTerminar.selected ?"1":"0";
				}
				if(chbRemodelado != null) {
					informacionConstruccion.estadoRemodelacion = chbRemodelado.selected ?"1":"0";
				}
				if(chkTerminadoNueva != null) {
					informacionConstruccion.estadoTerminadaNueva = chkTerminadoNueva.selected ?"1":"0";
				}
				if(chkSinTerminarNueva != null) {
					informacionConstruccion.enObra = chkSinTerminarNueva.selected ?"1":"0";
				}
				if(chkPorteria != null) {
					informacionConstruccion.porteria = chkPorteria.selected ?"1":"0";
				}
				if(chkCitofono != null) {
					informacionConstruccion.citofono = chkCitofono.selected ?"1":"0";
				}
				if(bicicleteroTextInput != null) {
					informacionConstruccion.bicicletero = bicicleteroTextInput.selected ?"1":"0";
				}
				if(piscinaTextInput != null) {
					informacionConstruccion.piscina = piscinaTextInput.selected ?"1":"0";
				}
				if(tanqueAguaTextInput != null) {
					informacionConstruccion.tanqueAgua = tanqueAguaTextInput.selected ?"1":"0";
				}
				if(clubHouseTextInput != null) {
					informacionConstruccion.clubHouse = clubHouseTextInput.selected ?"1":"0";
				}
				if(garajeVisitanteTextInput != null) {
					informacionConstruccion.garajeVisitante = garajeVisitanteTextInput.selected ?"1":"0";
				}
				if(juegoNinosTextInput != null) {
					informacionConstruccion.juegoNinos = juegoNinosTextInput.selected ?"1":"0";
				}
				if(canchaMultipleTextInput != null) {
					informacionConstruccion.canchaMultiple = canchaMultipleTextInput.selected ?"1":"0";
				}
				if(bombaEyectoraTextInput != null) {
					informacionConstruccion.bombaEyectora = bombaEyectoraTextInput.selected ?"1":"0";
				}
				if(aireAcondicionadoTextInput != null) {
					informacionConstruccion.aireAcondicionado = aireAcondicionadoTextInput.selected ?"1":"0";
				}
				if(squashTextInput != null) {
					informacionConstruccion.squash = squashTextInput.selected ?"1":"0";
				}
				if(zonasVerdesTextInput2 != null) {
					informacionConstruccion.zonasVerdes = zonasVerdesTextInput2.selected ?"1":"0";
				}
				if(gimnasioTextInput != null) {
					informacionConstruccion.gimnasio = gimnasioTextInput.selected ?"1":"0";
				}
				if(golfitoTextInput != null) {
					informacionConstruccion.golfito = golfitoTextInput.selected ?"1":"0";
				}
				if(salonComunalTextInput != null) {
					informacionConstruccion.salonComunal = salonComunalTextInput.selected ?"1":"0";
				}
				if(shutBasurasTextInput != null) {
					informacionConstruccion.shutBasuras = shutBasurasTextInput.selected ?"1":"0";
				}
				if(presionTextInput != null) {
					informacionConstruccion.presion = presionTextInput.selected ?"1":"0";
				}
				if(plantaTextInput != null) {
					informacionConstruccion.planta = plantaTextInput.selected ?"1":"0";
				}
				if(ascensorTextInput != null) {
					informacionConstruccion.ascensor = ascensorTextInput.selected ?"1":"0";
				}
				if(pisosTextInput != null) {
					informacionConstruccion.pisos = pisosTextInput.text;
				}
				if(sotanosTextInput != null) {
					informacionConstruccion.sotanos = sotanosTextInput.text;
				}
				if(vetustezTextInput != null) {
					informacionConstruccion.vetustez = vetustezTextInput.text.replace(",",".");
				}
				if(pisoInmuebleTextInput != null) {
					informacionConstruccion.pisoInmueble = pisoInmuebleTextInput.text;
				}
				if(avanceObraTextInput != null) {
					informacionConstruccion.avanceObra = avanceObraTextInput.text;
				}
				/*
				if(textoEstructuraTextInput != null) {
				informacionConstruccion.textoEstructura = textoEstructuraTextInput.text;
				}
				*/
				/*
				if(otroMaterialTextInput != null) {
				informacionConstruccion.otroMaterial = otroMaterialTextInput.text;
				}
				*/
				/*
				if(textoFachadaTextInput != null) {
				informacionConstruccion.textoFachada = textoFachadaTextInput.text;
				}
				*/
				/*
				if(textoCubiertaTextInput != null) {
				informacionConstruccion.textoCubierta = textoCubiertaTextInput.text;
				}
				*/
				/*
				if(otraUbicacionTanqueTextInput != null) {
				informacionConstruccion.otraUbicacionTanque = otraUbicacionTanqueTextInput.text;
				}
				*/
				if(salaTextInput != null) {
					informacionConstruccion.sala = salaTextInput.text;
				}
				if(comedorTextInput != null) {
					informacionConstruccion.comedor = comedorTextInput.text;
				}
				if(estudioTextInput != null) {
					informacionConstruccion.estudio = estudioTextInput.text;
				}
				if(banioSocialTextInput != null) {
					informacionConstruccion.banioSocial = banioSocialTextInput.text;
				}
				if(estarHabitacionTextInput != null) {
					informacionConstruccion.estarHabitacion = estarHabitacionTextInput.text;
				}
				if(numeroHabitacionesTextInput != null) {
					informacionConstruccion.numeroHabitaciones = numeroHabitacionesTextInput.text;
				}
				if(banioPrivadoTextInput != null) {
					informacionConstruccion.banioPrivado = banioPrivadoTextInput.text;
				}
				if( cocinaTextInput!= null) {
					informacionConstruccion.cocina = cocinaTextInput.text;
				}
				if(cuartoServicioTextInput != null) {
					informacionConstruccion.cuartoServicio = cuartoServicioTextInput.text;
				}
				if(banioServicioTextInput != null) {
					informacionConstruccion.banioServicio = banioServicioTextInput.text;
				}
				if(patioInteriorTextInput != null) {
					informacionConstruccion.patioInterior = patioInteriorTextInput.text;
				}
				if(terrazaTextInput != null) {
					informacionConstruccion.terraza = terrazaTextInput.text;
				}
				if(jardinTextInput != null) {
					informacionConstruccion.jardin = jardinTextInput.text;
				}
				if(balconTextInput != null) {
					informacionConstruccion.balcon = balconTextInput.text;
				}
				if(zonaVerdePrivadaTextInput != null) {
					informacionConstruccion.zonaVerdePrivada = zonaVerdePrivadaTextInput.text;
				}
				if(totalGarajesTextInput != null) {
					informacionConstruccion.totalGarajes = totalGarajesTextInput.text;
				}
				if(cubiertoTextInput != null) {
					informacionConstruccion.cubierto = cubiertoTextInput.text;
				}
				if( descubiertoTextInput != null) {
					informacionConstruccion.descubierto = descubiertoTextInput.text;
				}
				if(usoExclusivoTextInput != null) {
					informacionConstruccion.usoExclusivo = usoExclusivoTextInput.text;
				}
				if(privadoTextInput != null) {
					informacionConstruccion.privado = privadoTextInput.text;
				}
				if(bahiaComunalTextInput != null) {
					informacionConstruccion.bahiaComunal = bahiaComunalTextInput.text;
				}
				if(sencilloTextInput != null) {
					informacionConstruccion.sencillo = sencilloTextInput.text;
				}
				if(dobleTextInput != null) {
					informacionConstruccion.doble = dobleTextInput.text;
				}
				if(servidumbreTextInput != null) {
					informacionConstruccion.servidumbre = servidumbreTextInput.text;
				}
				if(depositoTextInput != null) {
					informacionConstruccion.deposito = depositoTextInput.text;
				}
				if(localTextInput != null) {
					informacionConstruccion.local = localTextInput.text;
				}
				if(bodegaTextInput != null) {
					informacionConstruccion.bodega = bodegaTextInput.text;
				}
				if(oficinaTextInput != null) {
					informacionConstruccion.oficina = oficinaTextInput.text;
				}
				if(impactoNegativoOtrosTextInput != null) {
					condicionesSalubridad.impactoNegativoOtros = impactoNegativoOtrosTextInput.text;
				}
				if( ambientalOtrosTextInput != null) {
					condicionesSalubridad.ambientalOtros = ambientalOtrosTextInput.text;
				}
				if(numeroEdificiosTextInput != null) {
					informacionConstruccion.numeroEdificios = numeroEdificiosTextInput.text;
				}
				if(unidadPorPisoTextInput != null) {
					informacionConstruccion.unidadPorPiso = unidadPorPisoTextInput.text;
				}
				if(totalUnidadesTextInput != null) {
					informacionConstruccion.totalUnidades = totalUnidadesTextInput.text;
				}
				if(numeroAscensoresTextInput != null) {
					informacionConstruccion.numeroAscensores = numeroAscensoresTextInput.text;
				}
				if(otrosDotacionTextInput != null) {
					informacionConstruccion.otrosDotacion = otrosDotacionTextInput.text;
				}
				if(otrosDotacion2TextInput != null) {
					informacionConstruccion.otrosDotacion2 = otrosDotacion2TextInput.text;
				}
				
				if(chkSinTerminarNueva==null || !chkSinTerminarNueva.selected )
				{
					if(avanceObraTextInput!= null && avanceObraTextInput.text.length>0)
					{
						avanceObraTextInput.text = "";	
					}
				}	
				
				
				/*
				informacionConstruccion.danoPrevioSF 		 	= this.danoPrevioSFTextInput.text;
				informacionConstruccion.danoReparadoSF		 	= this.danoReparadoSFTextInput.text;
				informacionConstruccion.rangoConstruccionSF	 	= this.rangoConstruccionSFTextInput.text;
				informacionConstruccion.danoPrevioBUA		 	= this.danoPrevioBUATextInput.text;
				*/
				
				
				/*
				//DetalleMaterialSFBUA
				informacionConstruccion.detalleMaterialSFBUA 	= this.detalleMaterialSFBUATextInput.text;
				//EstructuraReforzadaBUA
				informacionConstruccion.estructuraReforzadaBUA	= this.estructuraReforzadaBUATextInput.text;
				//IrregularidadAlturaBUA
				informacionConstruccion.irregularidadAlturaBUA	= this.irregularidadAlturaBUATextInput.text;
				//IrregularidadPlantaBUA
				informacionConstruccion.irregularidadPlantaBUA	= this.irregularidadPlantaBUATextInput.text;
				//MaterialConstruccionBUA
				informacionConstruccion.materialConstruccionBUA = this.materialConstruccionBUATextInput.text;
				//ReparadosBUA
				informacionConstruccion.reparadosBUA		 	= this.reparadosBUATextInput.text;
				//SimetriaAlturaSF
				informacionConstruccion.simetriaAlturaSF		= this.simetriaAlturaSFTextInput.text;
				//SimetriaPlantaSF
				informacionConstruccion.simetriaPlantaSF		= this.simetriaPlantaSFTextInput.text;
				*/
				
				//AnoConstruccionBUA
				//informacionConstruccion.anoConstruccionBUA	 	= this.anoConstruccionBUATextInput.text;
				
				/*
				if((cbxdanoPrevioSF != null) && (cbxdanoPrevioSF.selectedIndex > -1)) {
				informacionConstruccion.danoPrevioSF = cbxdanoPrevioSF.selectedItem.rvLowValue;
				}
				
				if((cbxdanoReparadoSF != null) && (cbxdanoReparadoSF.selectedIndex > -1)) {
				informacionConstruccion.danoReparadoSF = cbxdanoReparadoSF.selectedItem.rvLowValue;
				}
				*/
				
				if((cbxdanoPrevioBUA != null) && (cbxdanoPrevioBUA.selectedIndex > -1)) {
					informacionConstruccion.danoPrevioBUA = cbxdanoPrevioBUA.selectedItem.rvLowValue;
				}
				
				if((cbxreparadosBUA != null) && (cbxreparadosBUA.selectedIndex > -1)) {
					informacionConstruccion.reparadosBUA = cbxreparadosBUA.selectedItem.rvLowValue;
				}
				/*				
				if((cbxsimetriaAlturaSF != null) && (cbxsimetriaAlturaSF.selectedIndex > -1)) {
				informacionConstruccion.simetriaAlturaSF = cbxsimetriaAlturaSF.selectedItem.rvLowValue;
				}
				
				if((cbxsimetriaPlantaSF != null) && (cbxsimetriaPlantaSF.selectedIndex > -1)) {
				informacionConstruccion.simetriaPlantaSF = cbxsimetriaPlantaSF.selectedItem.rvLowValue;
				}
				*/
				/*
				if((cbxrangoConstruccionSF != null) && (cbxrangoConstruccionSF.selectedIndex > -1)) {
				informacionConstruccion.rangoConstruccionSF = cbxrangoConstruccionSF.selectedItem.rvLowValue;
				}
				*/
				if((cbxdetalleMaterialSFBUA != null) && (cbxdetalleMaterialSFBUA.selectedIndex > -1)) {
					informacionConstruccion.detalleMaterialSFBUA = cbxdetalleMaterialSFBUA.selectedItem.rvLowValue;
				}
				
				if((cbxestructuraReforzadaBUA != null) && (cbxestructuraReforzadaBUA.selectedIndex > -1)) {
					informacionConstruccion.estructuraReforzadaBUA = cbxestructuraReforzadaBUA.selectedItem.rvLowValue;
				}
				
				if((cbxirregularidadAlturaBUA != null) && (cbxirregularidadAlturaBUA.selectedIndex > -1)) {
					informacionConstruccion.irregularidadAlturaBUA = cbxirregularidadAlturaBUA.selectedItem.rvLowValue;
				}
				
				if((cbxirregularidadPlantaBUA != null) && (cbxirregularidadPlantaBUA.selectedIndex > -1)) {
					informacionConstruccion.irregularidadPlantaBUA = cbxirregularidadPlantaBUA.selectedItem.rvLowValue;
				}
				
				if((cbxmaterialConstruccionBUA != null) && (cbxmaterialConstruccionBUA.selectedIndex > -1)) {
					informacionConstruccion.materialConstruccionBUA = cbxmaterialConstruccionBUA.selectedItem.rvLowValue;
				}
				
				//02 Ago 2013 Mantis 0018498: Borrado de Campos
				if (avaluo2.liquidacionTotal != null){
					if((avaluo2.liquidacionTotal.length > 1)){
						
						var liqu:LiquidacionAvaluoTotal = avaluo2.liquidacionTotal[0];
						var liqu1:LiquidacionAvaluoTotal = avaluo2.liquidacionTotal[1];
						
						if(liqu1.calificacion!=null) 
						{ 
							if(liqu1.calificacion.length>0)	
								if(liqu.calificacion!=null)
								{	
									if(liqu.calificacion.length<1)
										avaluo2.liquidacionTotal[0]=avaluo2.liquidacionTotal[1];		
								}else if(liqu.calificacion==null)
								{
									avaluo2.liquidacionTotal[0]=avaluo2.liquidacionTotal[1];
								}
						}
						
						
					}
				}
				
				//avaluo2.liquidacionTotal
				//liquidacionAvaluoTotal
				
				
				//Avance de obra constructor
				if(avanceObraTextInput!= null && chkSinTerminarNueva!=null && chkTerminadoNueva!=null)
				{
					if(avanceObraTextInput.text.length>0)
					{	
						var avanceInt:int=0;
						avanceInt=parseInt(avanceObraTextInput.text);
						//if(chkSinTerminarNueva.selected && avanceInt>69)
						if(chkSinTerminarNueva.selected && avanceInt>=PORCENTAJE_ASOBANCARIA)
						{
							avaluo2.tipoInforme="1";
							updateResult.token = avaluosService.update(avaluo2);
						}
							//else if(chkSinTerminarNueva.selected && avanceInt<=69)
						else if(chkSinTerminarNueva.selected && avanceInt<PORCENTAJE_ASOBANCARIA)	
						{
							//mantis 39594 cambia criterio para definir avaluos constructor
							//avaluo2.tipoInforme="2";
							avaluo2.tipoInforme="1";
							updateResult.token = avaluosService.update(avaluo2);
						}
							//mantis 39594 cambia criterio para definir avaluos constructor
						else if(chkTerminadoNueva.selected && avanceInt==100)	
						{							
							avaluo2.tipoInforme="2";
							updateResult.token = avaluosService.update(avaluo2);
						}
						else
						{
							avaluo2.tipoInforme="1";
							updateResult.token = avaluosService.update(avaluo2);
						}	
					}
						//mantis 39594 cambia criterio para definir avaluos constructor
					else if(chkTerminadoNueva.selected /*&& avanceInt==100*/)	
					{							
						avaluo2.tipoInforme="2";
						updateResult.token = avaluosService.update(avaluo2);
					}
					else
					{
						avaluo2.tipoInforme="1";
						updateResult.token = avaluosService.update(avaluo2);
					}	
				}
				
				if(tbnAvaluosConstruccion.selectedIndex != 5)
				{
					isChangeTab=false;					
				}
				else if(tbnAvaluosConstruccion.selectedIndex == 5)
				{
					isChangeTab=true;
				}
				
				//Persiste el bloque de información de la construccion
				if ((avaluo2.informacionConstruccion != null) && (avaluo2.informacionConstruccion.length > 0)){
					informacionConstruccion.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult10.token = construccionService.update(informacionConstruccion);	
				}
				else {
					informacionConstruccion.usuarioCreacion = myUsuario.codigoUsuario;
					informacionConstruccion.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult10.token = construccionService.create(informacionConstruccion);
				}
				
				//Condiciones de salubridad
				if((cbxReqCondSalubirda != null) && (cbxReqCondSalubirda.selectedIndex > -1)) {
					condicionesSalubridad.requiereCondicionesSalubridad = cbxReqCondSalubirda.selectedItem.rvLowValue;
				}
				if((cbxCondSalubridad != null) && (cbxCondSalubridad.selectedIndex > -1)) {
					condicionesSalubridad.condicionesSalubridad = cbxCondSalubridad.selectedItem.rvLowValue;
				}
				if((cbxArborizacion != null) && (cbxArborizacion.selectedIndex > -1)) {
					condicionesSalubridad.ambientalArborizacion = cbxArborizacion.selectedItem.rvLowValue;
				}
				if((cbxAguasServidas != null) && (cbxAguasServidas.selectedIndex > -1)) {
					condicionesSalubridad.aguasServidas = cbxAguasServidas.selectedItem.rvLowValue;
				}
				if((cbxBasura != null) && (cbxBasura.selectedIndex > -1)) {
					condicionesSalubridad.impactoNegativoBasura = cbxBasura.selectedItem.rvLowValue;
				}
				if((cbxRuido != null) && (cbxRuido.selectedIndex > -1)) {
					condicionesSalubridad.impactoNegativoRuido = cbxRuido.selectedItem.rvLowValue;
				}
				if((cbxParques != null) && (cbxParques.selectedIndex > -1)) {
					condicionesSalubridad.ambientalParques = cbxParques.selectedItem.rvLowValue;
				}
				if((cbxZonaVerde != null) && (cbxZonaVerde.selectedIndex > -1)) {
					condicionesSalubridad.ambientalZonaVerde = cbxZonaVerde.selectedItem.rvLowValue;
				}
				if((cbxInseguridad != null) && (cbxInseguridad.selectedIndex > -1)) {
					condicionesSalubridad.impactoNegativoInseguridad = cbxInseguridad.selectedItem.rvLowValue;
				}
				if((cbxPorAire != null) && (cbxPorAire.selectedIndex > -1)) {
					condicionesSalubridad.impactoNegativoPorAire = cbxPorAire.selectedItem.rvLowValue;
				}
				if ((avaluo2.condicionSalubridad != null) && (avaluo2.condicionSalubridad.length > 0)){
					condicionesSalubridad.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult3.token = salubridadService.update(condicionesSalubridad);	
				}
				else {
					condicionesSalubridad.usuarioCreacion = myUsuario.codigoUsuario;
					condicionesSalubridad.usuarioTransaccion = myUsuario.codigoUsuario;
					createResult3.token = salubridadService.create(condicionesSalubridad);
				}
				
				/*avaluo2.tipoInforme=2 
				informacionConstruccion.estadoConstruccion = 
				nueva informacionConstruccion.avanceObra   =*/
				//limpiarControles();
				//avaluo2.informacionConstruccion.
				//avaluo2.liquidacionAvaluoTotal[0]							
			}
			
			
			protected function createResult10_resultHandler(event:ResultEvent):void
			{
				informacionConstruccion = createResult10.lastResult;
				//avaluo2.informacionConstruccion.addItem(informacionConstruccion);
				if(avaluo2.informacionConstruccion.length>0)
				{	
					avaluo2.informacionConstruccion.setItemAt(informacionConstruccion,0);
				}
				else
				{
					avaluo2.informacionConstruccion.addItem(informacionConstruccion);
				}
				//Alert.show("Proceso realizado satisfactoriamente");
				transaccionSatisfactoria();
				nextTabAvaluo();
				
				if(guardarPropiedadHorizontal){
					isChangeTab = false ; 
					guardarPropiedadHorizontal = false; 
					cbxAguCerrada.setFocus();
				}else{ 
					if(!isChangeTab && acdAvaluo.selectedIndex == 3 && tbnAvaluosConstruccion.selectedIndex != 5){
						administrarPanelesInformacionConstruccion();  
					}
				}
				
				if(avaluo2.informacionConstruccion==null)
				{
					avaluo2.informacionConstruccion = new InformacionConstruccion();
				}
				
				
			}
			
			protected function createResult_resultHandler(event:ResultEvent):void
			{
				nombreSolicitanteTextInput.text = "";
				cbxTipoIdentificacionEncabezado.selectedIndex = 0;
				numeroIdentificacionTextInput2.text = "";
				fechaAvaluoDateField.text = "";
				cbxDepartamento.selectedItem = null; 
				// cbxDepartamento.selectedIndex = -1;
				cbxCiudadEncabezado.selectedIndex = -1;
				barrioTextInput.text = "";
				direccionInmuebleTextInput2.text = "";
				matriculaInmobiliariaPpal1TextInput2.text = "";
				txtMatriculaInmobiliariaPpal2Encab.text = "";
				
				cbxTipoIdentificacion.selectedIndex = -1;
				cbxDepartamentoFiltro.selectedIndex = -1;
				direccionInmuebleTextInput.text = "";
				numeroIdentificacionTextInput.text = "";
				cbxCiudadFiltro.selectedIndex = -1;
				txtmatriculaInmobiliariaPpal1.text = "";
				txtmatriculaInmobiliariaPpal2.text = "";
				
				
				var res:String = createResult.lastResult as String; 
				if ((res != null) && (res.length > 0)){
					if(res.indexOf("OK")>-1)
					{	
						transaccionSatisfactoria();
						//res=res.substr(2,res.length);
						try
						{	
							getAvaluosPorIdResult.token = avaluosService.getAvaluosPorId(res.substr(2,res.length));
							getAvaluosAfterPersist.token = avaluosService.getAvaluosPorId(res.substr(2,res.length));
						}
						catch(er:Error)
						{
							trace(er);
						}
					}
					else
					{
						Alert.show(res,"INFO", null, null, null, null, Alert.OK);
					}
					limpiarControles();
				}
				else{
					limpiarControles();
					///Alert.show("Proceso realizado satisfactoriamente");
					transaccionSatisfactoria();
					//getAvaluosPorIdResult.token = avaluosService.getAvaluosPorId(avaluo2.idAvaluo);
				}
				vstAvaluo.selectedIndex = 0;
			}
			
			
			protected function getValoresDominioResult28_resultHandler(event:ResultEvent):void
			{
				selectdescliq0 = getValoresDominioResult28.lastResult;
			}
			protected function getValoresDominioResult69_resultHandler(event:ResultEvent):void
			{
				selectdescliq1 = getValoresDominioResult69.lastResult;
			}
			protected function getValoresDominioResult70_resultHandler(event:ResultEvent):void
			{
				selectdescliq2 = getValoresDominioResult70.lastResult;
			}
			protected function getValoresDominioResult71_resultHandler(event:ResultEvent):void
			{
				selectdescliq3 = getValoresDominioResult71.lastResult;
			}
			protected function getValoresDominioResult72_resultHandler(event:ResultEvent):void
			{
				selectdescliq4 = getValoresDominioResult72.lastResult;
			}
			protected function getValoresDominioResult73_resultHandler(event:ResultEvent):void
			{
				selectdescliq5 = getValoresDominioResult73.lastResult;
			}
			protected function getValoresDominioResult74_resultHandler(event:ResultEvent):void
			{
				selectdescliq6 = getValoresDominioResult74.lastResult;
			}
			protected function getValoresDominioResult75_resultHandler(event:ResultEvent):void
			{
				selectdescliq7 = getValoresDominioResult75.lastResult;
			}
			protected function getValoresDominioResult76_resultHandler(event:ResultEvent):void
			{
				selectdescliq8 = getValoresDominioResult76.lastResult;
			}
			protected function getValoresDominioResult77_resultHandler(event:ResultEvent):void
			{
				selectdescliq9 = getValoresDominioResult77.lastResult;
			}
			
			
			
			protected function getValoresDominioResult79_resultHandler(event:ResultEvent):void
			{
				selectdanoPrevioSF = getValoresDominioResult79.lastResult;
			}
			
			protected function cbxdanoPrevioSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult79.token = dominiosAuxDao.getValoresDominio("A_DANOPREVIO_SF");
			}
			
			
			protected function getValoresDominioResult80_resultHandler(event:ResultEvent):void
			{
				selectdanoReparadoSF = getValoresDominioResult80.lastResult;
			}
			
			protected function cbxdanoReparadoSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult80.token = dominiosAuxDao.getValoresDominio("A_DANOREPARADO_SF");
			}			
			
			protected function getValoresDominioResult81_resultHandler(event:ResultEvent):void
			{
				selectdanoPrevioBUA = getValoresDominioResult81.lastResult;
			}
			
			protected function cbxdanoPrevioBUA_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectdanoPrevioBUA==null || selectdanoPrevioBUA.length<1)
					getValoresDominioResult81.token = dominiosAuxDao.getValoresDominio("DANOSPREVIOS_BUA");
			}			
			
			protected function getValoresDominioResult82_resultHandler(event:ResultEvent):void
			{
				selectreparadosBUA = getValoresDominioResult82.lastResult;
			}
			
			protected function cbxreparadosBUA_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectreparadosBUA==null || selectreparadosBUA.length<1)
					getValoresDominioResult82.token = dominiosAuxDao.getValoresDominio("REPARADOS_BUA");
			}
			
			protected function getValoresDominioResult83_resultHandler(event:ResultEvent):void
			{
				selectsimetriaAlturaSF = getValoresDominioResult83.lastResult;
			}
			
			protected function cbxsimetriaAlturaSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult83.token = dominiosAuxDao.getValoresDominio("SIMETRIA_SF");
			}
			
			protected function getValoresDominioResult84_resultHandler(event:ResultEvent):void
			{
				selectsimetriaPlantaSF = getValoresDominioResult84.lastResult;
			}
			
			protected function cbxsimetriaPlantaSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult84.token = dominiosAuxDao.getValoresDominio("SIMETRIA_SF");
			}
			
			protected function getValoresDominioResult85_resultHandler(event:ResultEvent):void
			{
				selectrangoConstruccionSF = getValoresDominioResult85.lastResult;
			}
			
			protected function cbxrangoConstruccionSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult85.token = dominiosAuxDao.getValoresDominio("RANGO_CONSTRUCCION_SF");
			}
			
			protected function getValoresDominioResult86_resultHandler(event:ResultEvent):void
			{
				selectdetalleMaterialSFBUA = getValoresDominioResult86.lastResult;
			}
			
			protected function cbxdetalleMaterialSFBUA_creationCompleteHandler(event:FlexEvent):void
			{
				//getValoresDominioResult86.token = dominiosAuxDao.getValoresDominio("C_ESTRUCTURA_SF_BUA");
				//getValoresDominioByAbbreviationResult.token = dominiosAuxDao.getValoresDominioByAbbreviation(/*Enter value(s) for */ arg0, arg1);
			}
			
			protected function getValoresDominioResult87_resultHandler(event:ResultEvent):void
			{
				selectestructuraReforzadaBUA = getValoresDominioResult87.lastResult;
			}
			
			protected function cbxestructuraReforzadaBUA_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectestructuraReforzadaBUA==null || selectestructuraReforzadaBUA.length<1)
					getValoresDominioResult87.token = dominiosAuxDao.getValoresDominio("ESTRUCTURAREFORZADA_BUA");
			}
			
			protected function getValoresDominioResult88_resultHandler(event:ResultEvent):void
			{
				selectirregularidadAlturaBUA = getValoresDominioResult88.lastResult;
			}
			
			protected function cbxirregularidadAlturaBUA_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectirregularidadAlturaBUA==null || selectirregularidadAlturaBUA.length<1)
					getValoresDominioResult88.token = dominiosAuxDao.getValoresDominio("IRREGULARIDAD_BUA");
			}
			
			protected function getValoresDominioResult89_resultHandler(event:ResultEvent):void
			{
				selectirregularidadPlantaBUA = getValoresDominioResult89.lastResult;
			}
			
			protected function cbxirregularidadPlantaBUA_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectirregularidadPlantaBUA==null || selectirregularidadPlantaBUA.length<1)
					getValoresDominioResult89.token = dominiosAuxDao.getValoresDominio("IRREGULARIDAD_BUA");
			}
			
			protected function getValoresDominioResult90_resultHandler(event:ResultEvent):void
			{
				selectmaterialConstruccionBUA = getValoresDominioResult90.lastResult;
				
				if((informacionConstruccion != null) && (informacionConstruccion.materialConstruccionBUA != null)) {
					cbxdetalleMaterialSFBUA.enabled = true;
					var indexMaterial:int = getItemIndex(informacionConstruccion.materialConstruccionBUA,selectmaterialConstruccionBUA,'rvLowValue');
					//selectdetalleMaterialSFBUA =  (selectmaterialConstruccionBUA[indexMaterial] as Dominio).ciudadesDepto;
					//(cbxCategoria.selectedItem as Dominios).rvLowValue
					var rvLowvalue:String=null;
					rvLowvalue = (selectmaterialConstruccionBUA[indexMaterial] as Dominios).rvHighValue;
					getValoresDominioResult86.token = dominiosAuxDao.getValoresDominioByAbbreviation("C_ESTRUCTURA_SF_BUA",rvLowvalue);					
				}
			}
			
			protected function getValoresDominioResult91_resultHandler(event:ResultEvent):void
			{
				selectMaterialConstruccionSF = getValoresDominioResult91.lastResult;
			}
			
			protected function getValoresDominioResult92_resultHandler(event:ResultEvent):void
			{
				selectEstructuraReforzadaSF = getValoresDominioResult92.lastResult;
			}
			
			protected function getValoresDominioResult93_resultHandler(event:ResultEvent):void
			{
				selectusoInmuebleBUA = getValoresDominioResult93.lastResult;
			}
			
			protected function getValoresDominioResult94_resultHandler(event:ResultEvent):void
			{
				selectusoInmuebleSF = getValoresDominioResult94.lastResult;
			}
			
			protected function cbxmaterialConstruccionBUA_creationCompleteHandler(event:FlexEvent):void
			{
				cbxdetalleMaterialSFBUA.enabled = false;
				if(selectmaterialConstruccionBUA==null || selectmaterialConstruccionBUA.length<1)
					getValoresDominioResult90.token = dominiosAuxDao.getValoresDominio("ESTRUCTURA2_BUA");
			}			
			
			
			protected function cbxMaterialConstruccionSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult91.token = dominiosAuxDao.getValoresDominio("C_MATERIAL_SF");
			}
			
			protected function cbxEstructuraReforzadaSF_creationCompleteHandler(event:FlexEvent):void
			{
				getValoresDominioResult92.token = dominiosAuxDao.getValoresDominio("C_ESTREFORZADA_SF");
			}
			
			
			
			
			protected function btnAprobarAvaluo_clickHandler(event:MouseEvent):void
			{
				if(dtgAvaluos.selectedItem != null && !aprobarPostValidar)
				{
					var avaluoTmp:Avaluo = dtgAvaluos.selectedItem as Avaluo;
					getAvaluosPorIdResult.token = avaluosService.getAvaluosPorId(avaluoTmp.idAvaluo);
					aprobar = true;
				}
				else
				{
					if(avaluo2 != null && avaluo2.idAvaluo != null){
						var avaluoTmp:Avaluo = dtgAvaluos.selectedItem as Avaluo;
						getAvaluosPorIdResult.token = avaluosService.getAvaluosPorId(avaluo2.idAvaluo);
						aprobar = true;	
						imprAprobar=true;
						eliminar();
					}else{
						Alert.show("Debe seleccionar un avalúo",null, null, null, null, null, Alert.OK);
					}
				}
			}
			
			
			protected function aprobarResult_resultHandler(event:ResultEvent):void
			{
				var msj:String = aprobarResult.lastResult;
				if (msj == "true"){
					
					if(imprAprobar)
					{						
						imprimir();						
					}	
					registrosEncontrados.text = ""; 
					dtgAvaluos.dataProvider.removeAll();
					acdAvaluo.selectedIndex = 0 ; 
					acdAvaluo.setFocus(); 
					//Alert.show("Proceso realizado satisfactoriamente");
					transaccionSatisfactoria();
					
					imprAprobar=false;
					aprobar=false;
					
				}
				else {
					Alert.show(msj,"ERROR", null, null, null, null, Alert.OK);					
					imprAprobar=false;
					aprobar=false;
				}
			}
			
			
			protected function updateResult_resultHandler(event:ResultEvent):void
			{
				var avaluoTmp:Avaluo = updateResult.lastResult;
				liquidacionAvaluoTotal = avaluoTmp.liquidacionTotal[0];
				consecutivoBancoTextInput.text = avaluoTmp.consecutivoBanco; 
				//if(nombreSeccion!="InfoConstruccion")
				if(nombreSeccion!="InfoConstruccion")
				{	
					//Alert.show("Proceso realizado satisfactoriamente");
					transaccionSatisfactoria();
					nextTabAvaluo();
				}
			}
			
			
			protected function createResult4_resultHandler(event:ResultEvent):void
			{
				informacionInmueble2 = createResult4.lastResult;
				categoria.rvLowValue = informacionInmueble2.idCategoria;
				//avaluo2.informacionInmueble.addItem(informacionInmueble2);
				if(avaluo2.informacionInmueble.length>0)
				{	
					avaluo2.informacionInmueble.setItemAt(informacionInmueble2,0);
				}
				else
				{
					avaluo2.informacionInmueble.addItem(informacionInmueble2);
				}				
				//Alert.show("Proceso realizado satisfactoriamente");
				isChangeTab = true ; 
				transaccionSatisfactoria();
				nextTabAvaluo();
			}
			
			
			protected function createResult3_resultHandler(event:ResultEvent):void
			{
				condicionesSalubridad = createResult3.lastResult;
				//avaluo2.condicionSalubridad.addItem(condicionesSalubridad);
				
				if(avaluo2.condicionSalubridad==null)
				{
					avaluo2.condicionSalubridad = new CondicionesSalubridad();
				}
				//avaluo2.condicionSalubridad.addItem(condicionesSalubridad);
				if(avaluo2.condicionSalubridad.length>0)
				{	
					avaluo2.condicionSalubridad.setItemAt(condicionesSalubridad,0);
				}
				else
				{
					avaluo2.condicionSalubridad.addItem(condicionesSalubridad);
				}
			}
			
			
			protected function createResult5_resultHandler(event:ResultEvent):void
			{
				comportamientoOfertaDemanda = createResult5.lastResult;
				//avaluo2.compOfertaDemanda.addItem(comportamientoOfertaDemanda);
				if(avaluo2.compOfertaDemanda.length>0)
				{	
					avaluo2.compOfertaDemanda.setItemAt(comportamientoOfertaDemanda,0);
				}
				else
				{
					avaluo2.compOfertaDemanda.addItem(comportamientoOfertaDemanda);
				}				
				//Alert.show("Proceso realizado satisfactoriamente");
				isChangeTab = true; 
				transaccionSatisfactoria();
				nextTabAvaluo();
				
			}
			
			
			protected function createResult8_resultHandler(event:ResultEvent):void
			{
				liquidacionAvaluoTotal = createResult8.lastResult;
				//avaluo2.liquidacionTotal.addItem(liquidacionAvaluoTotal);
				if(avaluo2.liquidacionTotal.length>0)
				{	
					avaluo2.liquidacionTotal.setItemAt(liquidacionAvaluoTotal,0);
				}
				else
				{
					avaluo2.liquidacionTotal.addItem(liquidacionAvaluoTotal);
				}
				//Alert.show("Proceso realizado satisfactoriamente");
				transaccionSatisfactoria();
				if(acdAvaluo.selectedIndex == 3 && tbnAvaluosConstruccion.selectedIndex == 4){ 
					isChangeTab = false;
					cbxAguCerrada.setFocus();
				}else {
					isChangeTab = true;
					nextTabAvaluo();
				}
			}
			
			
			protected function createResult6_resultHandler(event:ResultEvent):void
			{
				observaciones = createResult6.lastResult;
				//avaluo2.observacion.addItem(observaciones);
				
				if(avaluo2.observacion.length>0)
				{	
					avaluo2.observacion.setItemAt(observaciones,0);
				}
				else
				{
					avaluo2.observacion.addItem(observaciones);
				}
				
				//Alert.show("Proceso realizado satisfactoriamente");
				isChangeTab = true ; 
				transaccionSatisfactoria();
				nextTabAvaluo();
			}
			
			
			protected function cbxEstadoConstruccion_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxEstadoConstruccion.selectedItem == null){
					return ; 
				}
				var estadoSelccionado:String = cbxEstadoConstruccion.selectedItem.rvMeaning;
				if(estadoSelccionado.toUpperCase() == "Usada".toUpperCase()){
					chbTerminado.enabled = true;
					chbSinTerminar.enabled = true;
					
					chkTerminadoNueva.enabled = false;
					chkSinTerminarNueva.enabled = false;
					avanceObraTextInput.enabled = false;
					
					chkTerminadoNueva.selected = false;
					chkSinTerminarNueva.selected = false;
					avanceObraTextInput.text = "";
					
					//Valida el combo de estado de conservación
					cbxEstadoConservacion.selectedIndex = -1;
					cbxEstadoConservacion.enabled = true;
					
					
					
				}
				else {
					chkTerminadoNueva.enabled = true;
					chkSinTerminarNueva.enabled = true;
					
					chbTerminado.enabled = false;
					chbSinTerminar.enabled = false;
					chbRemodelado.enabled = false;
					
					chbTerminado.selected = false;
					chbSinTerminar.selected = false;
					chbRemodelado.selected = false;
				}
			}
			
			
			protected function chkSinTerminarNueva_clickHandler(event:MouseEvent):void
			{
				avanceObraTextInput.enabled = chkSinTerminarNueva.selected;
				chkTerminadoNueva.selected = false;
			}
			
			
			protected function chkTerminadoNueva_clickHandler(event:MouseEvent):void
			{
				if(chkTerminadoNueva.selected){
					avanceObraTextInput.enabled = false;
					avanceObraTextInput.text = "";
					chkSinTerminarNueva.selected = false;
					
					if (selectestadoconservacion != null)
					{
						for(var x:int = 0; x<selectestadoconservacion.length; x++){
							var estadoConservacion:Dominios = selectestadoconservacion[x] as Dominios;
							if(estadoConservacion.rvLowValue == '1'){
								cbxEstadoConservacion.selectedIndex = x;
								break;
							}
						}
					}
					cbxEstadoConservacion.enabled = false;
				}
				else 
				{
					cbxEstadoConservacion.selectedIndex = -1;
					cbxEstadoConservacion.enabled = true;
				}
			}
			
			
			protected function chbTerminado_clickHandler(event:MouseEvent):void
			{
				chbRemodelado.enabled = chbTerminado.selected;
				chbSinTerminar.selected = false;
				
				if(!chbTerminado.selected){
					chbRemodelado.selected = false;
				}else{
					if(informacionConstruccion.estadoRemodelacion=="1"){ 
						chbRemodelado.selected = true;
					}else{
						chbRemodelado.selected = false;
					}					
				}
			}
			
			
			protected function chbSinTerminar_clickHandler(event:MouseEvent):void
			{
				if(chbSinTerminar.selected){
					chbRemodelado.enabled = false;
					chbRemodelado.selected = false;
					chbTerminado.selected = false;
				}
			}
			
			
			protected function valorUvrDiaTextInput_focusOutHandler(event:FocusEvent):void
			{
				valorUvrDiaTextInput.text = valorUvrDiaTextInput.text.replace(",",".");
				if((totalAvaluoTextInput != null) && (valorUvrDiaTextInput != null)) {
					avaluoUvrTextInput.enabled = true;
					var totalAvaluoNumber:Number = new Number(totalAvaluoTextInput.text);
					var uvrDiaNumber:Number = new Number(valorUvrDiaTextInput.text);
					var avluoUvr:Number = Math.round((totalAvaluoNumber / uvrDiaNumber)*10000)/10000;
					avaluoUvrTextInput.text = new String(avluoUvr);
					
					//avaluoUvrTextInputF.text = formatearMoneda(new String(avluoUvr));
					
					avaluoUvrTextInput.enabled = false;
				}
			}
			
			protected function valorTotalTextInput_focusOutHandler(event:FocusEvent):void
			{
				totalAvaluoTextInput.enabled = true;
				var acumuladoValorTotal:Number = new Number(0);
				if(valorTotalTextInput0 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput0.text);
				}
				if(valorTotalTextInput1 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput1.text);
				}
				if(valorTotalTextInput2 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput2.text);
				}
				if(valorTotalTextInput3 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput3.text);
				}
				if(valorTotalTextInput4 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput4.text);
				}
				if(valorTotalTextInput5 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput5.text);
				}
				if(valorTotalTextInput6 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput6.text);
				}
				if(valorTotalTextInput7 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput7.text);
				}
				if(valorTotalTextInput8 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput8.text);
				}
				if(valorTotalTextInput9 != null){
					acumuladoValorTotal += new Number(valorTotalTextInput9.text);
				}
				var valor:Number = Math.round(acumuladoValorTotal*10000)/10000;
				totalAvaluoTextInput.text = new String(valor);
				
				totalAvaluoTextInputF.text = formatearMoneda(new String(valor));
				
				totalAvaluoTextInput.enabled = false;
				
				//19-Nov-2012 Valor asegurable es igual al valor total del avaluo
				valorAsegurableTextInput.text = new String(valor);
				
				valorAsegurableTextInputF.text = formatearMoneda(new String(valor));
				
				valorAsegurableTextInput.enabled = false;
				
				this.valorUvrDiaTextInput_focusOutHandler(event);
				
			}
			
			protected function ascensorTextInput_clickHandler(event:MouseEvent):void
			{
				if(ascensorTextInput.selected){
					numeroAscensoresTextInput.enabled = true;
				}
				else {
					numeroAscensoresTextInput.text = "";
					numeroAscensoresTextInput.enabled = false;
				}
			}
			
			protected function createResult11_resultHandler(event:ResultEvent):void
			{
				var liquidacionList:ArrayCollection = createResult11.lastResult;
				avaluo2.liquidacionAvaluos.addAll(liquidacionList);
				if((liquidacionList != null) && (liquidacionList.length > 0))
				{
					liquidacionAvaluo0 = liquidacionList.getItemAt(0) as LiquidacionAvaluo;
					liquidacionAvaluo1 = liquidacionList.getItemAt(1) as LiquidacionAvaluo;
					liquidacionAvaluo2 = liquidacionList.getItemAt(2) as LiquidacionAvaluo;
					liquidacionAvaluo3 = liquidacionList.getItemAt(3) as LiquidacionAvaluo;
					liquidacionAvaluo4 = liquidacionList.getItemAt(4) as LiquidacionAvaluo;
					liquidacionAvaluo5 = liquidacionList.getItemAt(5) as LiquidacionAvaluo;
					liquidacionAvaluo6 = liquidacionList.getItemAt(6) as LiquidacionAvaluo;
					liquidacionAvaluo7 = liquidacionList.getItemAt(7) as LiquidacionAvaluo;
					liquidacionAvaluo8 = liquidacionList.getItemAt(8) as LiquidacionAvaluo;
					liquidacionAvaluo9 = liquidacionList.getItemAt(9) as LiquidacionAvaluo;
					
					
					if ((avaluo2.liquidacionTotal != null) && (avaluo2.liquidacionTotal.length > 0)){
						liquidacionAvaluoTotal.usuarioTransaccion = myUsuario.codigoUsuario;
						createResult8.token = liquidacionTotalService.update(liquidacionAvaluoTotal);	
					}
					else {
						liquidacionAvaluoTotal.usuarioCreacion = myUsuario.codigoUsuario;
						liquidacionAvaluoTotal.usuarioTransaccion = myUsuario.codigoUsuario;
						createResult8.token = liquidacionTotalService.create(liquidacionAvaluoTotal);
					}
				}
			}
			
			
			protected function startDownload_clickHandler(event:MouseEvent):void
			{
				if(existsFachada){
					var fileDownload:FileDownload = new FileDownload();
					fileDownload.init(downloadProgress,null);
					var nombreDescarga:String = avaluo2.consecutivoBanco+"_fachada.jpg";
					fileDownload.startFachadaDownload(avaluo2.idAvaluo,"fachada",nombreDescarga);
					
					startImgsAnexo.enabled=true;
					
				}
					
				else if((avaluo2.anexosFotograficos != null) && (avaluo2.anexosFotograficos.length >0))
				{
					var anexoTmp:AnexoFotografico = avaluo2.anexosFotograficos.getItemAt(0) as AnexoFotografico;
					if((anexoTmp.archivoFoto != null) && (anexoTmp.archivoFoto.contenidoArchivo.length > 0))
					{
						var fileDownload:FileDownload = new FileDownload();
						fileDownload.init(downloadProgress,null);
						var nombreDescarga:String = avaluo2.consecutivoBanco+"_fachada.jpg";
						fileDownload.startFachadaDownload(avaluo2.idAvaluo,"fachada",nombreDescarga);
						existsFachada = true;
						startImgsAnexo.enabled=true;
					}					
					else {
						existsFachada = false;
						startImgsAnexo.enabled=false;
					}
				}
				else{
					existsFachada = false;
					startImgsAnexo.enabled=false;
				}
				
				if(!existsFachada){
					Alert.show("No hay archivos cargados.\n\nRecuerde cargar la imagen de la fachada en formato jpg","INFO", null, null, null, null, Alert.OK);
					startImgsAnexo.enabled=false;
				}
			}
			
			
			protected function startDownloadDocAnexos_clickHandler(event:MouseEvent):void
			{
				if(existsAnexo){
					var fileDownload:FileDownload = new FileDownload();
					fileDownload.init(downloadProgressDocAnexos,null);
					var nombreDescarga:String = avaluo2.consecutivoBanco+"_fotos.pdf";
					fileDownload.startFachadaDownload(avaluo2.idAvaluo,"anexos", nombreDescarga);
				}
				else if((avaluo2.anexosFotograficos != null) && (avaluo2.anexosFotograficos.length >0))
				{	
					var anexoTmp:AnexoFotografico = avaluo2.anexosFotograficos.getItemAt(0) as AnexoFotografico;
					if((anexoTmp.archivoPdf != null) && (anexoTmp.archivoPdf.contenidoArchivo.length > 0)){
						var fileDownload:FileDownload = new FileDownload();
						fileDownload.init(downloadProgressDocAnexos,null);
						var nombreDescarga:String = avaluo2.consecutivoBanco+"_fotos.pdf";
						fileDownload.startFachadaDownload(avaluo2.idAvaluo,"anexos", nombreDescarga);
						existsAnexo = true;
					}
					else {
						existsAnexo = false;
					}
				}
				else {
					existsAnexo = false;
				}
				
				if(!existsAnexo){
					Alert.show("No hay archivos cargados.\n\nRecuerde cargar el anexo forgráfico en formato Pdf","INFO", null, null, null, null, Alert.OK);
				}
			}
			
			
			protected function cbxEstadoAvaluo_creationCompleteHandler(event:FlexEvent):void
			{
				if(getValoresDominioResult78==null){
					if(selectEstadoAvaluo == null || selectEstadoAvaluo.length<1){
						getValoresDominioResult78.token = dominiosAuxDao.getValoresDominio("ESTADOAVALUO");
						
					}
				}
			}
			
			
			protected function cbxEstructura_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxEstructura.selectedItem != null ){
					if ((cbxEstructura.selectedItem as Dominios).rvLowValue == '6'){
						//textoEstructuraTextInput.enabled = true;
					}
					else {
						/*
						textoEstructuraTextInput.text = "";
						textoEstructuraTextInput.enabled = false;
						*/
					}
				}
			}
			
			
			protected function cbxMaterialEstructura_changeHandler(event:IndexChangeEvent):void
			{
				/*
				if(cbxMaterialesEstructura.selectedItem != null ){
				if ((cbxMaterialesEstructura.selectedItem as Dominios).rvLowValue == '9'){
				//otroMaterialTextInput.enabled = true;
				}
				else {
				
				//otroMaterialTextInput.text = "";
				//otroMaterialTextInput.enabled = false;
				
				}
				}*/
			}
			
			protected function cbxFachada_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxFachada.selectedItem != null ){
					if ((cbxFachada.selectedItem as Dominios).rvLowValue == '46'){
						//textoFachadaTextInput.enabled = true;
					}
					else {
						/*
						textoFachadaTextInput.text = "";
						textoFachadaTextInput.enabled = false;
						*/
					}
				}
			}
			
			protected function cbxCubierta_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxCubierta.selectedItem != null ){
					if ((cbxCubierta.selectedItem as Dominios).rvLowValue == '6'){
						//textoCubiertaTextInput.enabled = true;
					}
					else {
						/*
						textoCubiertaTextInput.text = "";
						textoCubiertaTextInput.enabled = false;
						*/
					}
				}
			}
			
			protected function cbxTanque_changeHandler(event:IndexChangeEvent):void
			{
				/*
				if(cbxUbiTanques.selectedItem != null ){
				if ((cbxUbiTanques.selectedItem as Dominios).rvLowValue == '3'){
				//otraUbicacionTanqueTextInput.enabled = true;
				}
				else {						
				//otraUbicacionTanqueTextInput.text = "";
				//otraUbicacionTanqueTextInput.enabled = false;						
				}
				}
				*/
			}
			
			
			protected function prevalidarResult_resultHandler(event:ResultEvent):void
			{
				var res:String = prevalidarResult.lastResult;
				if((res != null) && (res.length > 0) && (res == "true"))
				{
					//Alert.show("Proceso realizado satisfactoriamente","INFO");
					if(isValidAprobador){ 
						var confirmAlert:Alert = Alert.show("Desea aprobar e imprimir el avalúo?", "Confirmación de aprobación?",Alert.OK | Alert.CANCEL, this, alertListener, null, Alert.OK);
					}else{
						imprimirMensaje("La validaciòn del avaluo se encuentra correcta","RESULTADO VALIDACION");  
					}
					transaccionSatisfactoria();
				}
				else {
					
					Alert.show(res,"RESULTADO VALIDACION", null, null, null, null, Alert.OK);
					
					var categoria:int=0;
					
					if((cbxCategoria != null) && (cbxCategoria.selectedIndex > -1)) {
						categoria = cbxCategoria.selectedItem.rvLowValue;
						validarCampos(ListaCampos(categoria,false));
					}
					
				}
			}
			
			
			protected function cbxCategoria_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxCategoria.selectedIndex > -1){
					var rvLowvalue:String = (cbxCategoria.selectedItem as Dominios).rvLowValue;
					categoria.rvLowValue = rvLowvalue;
					//Valida si es bodega o local
					if(rvLowvalue == '5'){
						isBodega = true;
						isLocal = false;
					}
					else if (rvLowvalue == '6'){
						isLocal = true;
						isBodega = false;
					}
					else
					{
						isBodega = false;
						isLocal = false;
						
						if(cbxAltura != null){
							cbxAltura.selectedIndex = -1;
						}
						if(cbxPisosBodega!= null){
							cbxPisosBodega.selectedIndex = -1;
						}
						if(cbxUbiaccionLocal != null){
							cbxUbiaccionLocal.selectedIndex -1;
						}
					}
				}
				else 
				{
					isBodega = false;
					isLocal = false;
				}
				
				if(cbxAltura != null){
					cbxAltura.selectedIndex = -1;
					txtAltura.setVisible(isBodega);
					cbxAltura.setVisible(isBodega);
				}
				if(cbxPisosBodega!= null){
					cbxPisosBodega.selectedIndex = -1;
					txtPisosBodega.setVisible(isBodega);
					cbxPisosBodega.setVisible(isBodega);
				}
				if(cbxUbiaccionLocal != null){
					cbxUbiaccionLocal.selectedIndex = -1;
					cbxUbiaccionLocal.setVisible(isLocal);
					txtUbicacionLocal.setVisible(isLocal);
				}
			}
			
			
			protected function areaLiquidacionTextInput0_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput0.text == null || areaLiquidacionTextInput0.text.length < 1)
				{
					areaLiquidacionTextInput0.text = "0";
				}
				if (valorTextInput0.text == null || valorTextInput0.text.length < 1)
				{
					valorTextInput0.text = "0";
					valorTextInput0.selectAll();
				}
				
				if((areaLiquidacionTextInput0.text != null && areaLiquidacionTextInput0.text.length > 0) 
					&& (valorTextInput0.text != null && valorTextInput0.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput0.text);
					var valor:Number = new Number(valorTextInput0.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput0.text = new String(totalRedondeado);
					
					valorTotalTextInput0F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput1_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput1.text == null || areaLiquidacionTextInput1.text.length < 1)
				{
					areaLiquidacionTextInput1.text = "0";
				}
				if (valorTextInput1.text == null || valorTextInput1.text.length < 1)
				{
					valorTextInput1.text = "0";
					valorTextInput1.selectAll();
				}
				
				if((areaLiquidacionTextInput1.text != null && areaLiquidacionTextInput1.text.length > 0) 
					&& (valorTextInput1.text != null && valorTextInput1.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput1.text);
					var valor:Number = new Number(valorTextInput1.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput1.text = new String(totalRedondeado);
					
					valorTotalTextInput1F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput2_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput2.text == null || areaLiquidacionTextInput2.text.length < 1)
				{
					areaLiquidacionTextInput2.text = "0";
				}
				if (valorTextInput2.text == null || valorTextInput2.text.length < 1)
				{
					valorTextInput2.text = "0";
					valorTextInput2.selectAll();
				}
				
				if((areaLiquidacionTextInput2.text != null && areaLiquidacionTextInput2.text.length > 0) 
					&& (valorTextInput2.text != null && valorTextInput2.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput2.text);
					var valor:Number = new Number(valorTextInput2.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput2.text = new String(totalRedondeado);
					
					valorTotalTextInput2F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput3_focusOutHandler(event:FocusEvent):void
			{
				
				if (areaLiquidacionTextInput3.text == null || areaLiquidacionTextInput3.text.length < 1)
				{
					areaLiquidacionTextInput3.text = "0";
				}
				if (valorTextInput3.text == null || valorTextInput3.text.length < 1)
				{
					valorTextInput3.text = "0";
					valorTextInput3.selectAll();
				}
				
				if((areaLiquidacionTextInput3.text != null && areaLiquidacionTextInput3.text.length > 0) 
					&& (valorTextInput3.text != null && valorTextInput3.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput3.text);
					var valor:Number = new Number(valorTextInput3.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput3.text = new String(totalRedondeado);
					
					valorTotalTextInput3F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput4_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput4.text == null || areaLiquidacionTextInput4.text.length < 1)
				{
					areaLiquidacionTextInput4.text = "0";
				}
				if (valorTextInput4.text == null || valorTextInput4.text.length < 1)
				{
					valorTextInput4.text = "0";
					valorTextInput4.selectAll();
				}
				
				if((areaLiquidacionTextInput4.text != null && areaLiquidacionTextInput4.text.length > 0) 
					&& (valorTextInput4.text != null && valorTextInput4.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput4.text);
					var valor:Number = new Number(valorTextInput4.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput4.text = new String(totalRedondeado);
					
					valorTotalTextInput4F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput5_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput5.text == null || areaLiquidacionTextInput5.text.length < 1)
				{
					areaLiquidacionTextInput5.text = "0";
				}
				if (valorTextInput5.text == null || valorTextInput5.text.length < 1)
				{
					valorTextInput5.text = "0";
					valorTextInput5.selectAll();
				}
				
				if((areaLiquidacionTextInput5.text != null && areaLiquidacionTextInput5.text.length > 0) 
					&& (valorTextInput5.text != null && valorTextInput5.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput5.text);
					var valor:Number = new Number(valorTextInput5.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput5.text = new String(totalRedondeado);
					
					valorTotalTextInput5F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput6_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput6.text == null || areaLiquidacionTextInput6.text.length < 1)
				{
					areaLiquidacionTextInput6.text = "0";
				}
				if (valorTextInput6.text == null || valorTextInput6.text.length < 1)
				{
					valorTextInput6.text = "0";
					valorTextInput6.selectAll();
				}
				
				if((areaLiquidacionTextInput6.text != null && areaLiquidacionTextInput6.text.length > 0) 
					&& (valorTextInput6.text != null && valorTextInput6.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput6.text);
					var valor:Number = new Number(valorTextInput6.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput6.text = new String(totalRedondeado);
					
					valorTotalTextInput6F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput7_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput7.text == null || areaLiquidacionTextInput7.text.length < 1)
				{
					areaLiquidacionTextInput7.text = "0";
				}
				if (valorTextInput7.text == null || valorTextInput7.text.length < 1)
				{
					valorTextInput7.text = "0";
					valorTextInput7.selectAll();
				}
				
				if((areaLiquidacionTextInput7.text != null && areaLiquidacionTextInput7.text.length > 0) 
					&& (valorTextInput7.text != null && valorTextInput7.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput7.text);
					var valor:Number = new Number(valorTextInput7.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput7.text = new String(totalRedondeado);
					
					valorTotalTextInput7F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput8_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput8.text == null || areaLiquidacionTextInput8.text.length < 1)
				{
					areaLiquidacionTextInput8.text = "0";
				}
				if (valorTextInput8.text == null || valorTextInput8.text.length < 1)
				{
					valorTextInput8.text = "0";
					valorTextInput8.selectAll();
				}
				
				if((areaLiquidacionTextInput8.text != null && areaLiquidacionTextInput8.text.length > 0) 
					&& (valorTextInput8.text != null && valorTextInput8.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput8.text);
					var valor:Number = new Number(valorTextInput8.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput8.text = new String(totalRedondeado);
					
					valorTotalTextInput8F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function areaLiquidacionTextInput9_focusOutHandler(event:FocusEvent):void
			{
				if (areaLiquidacionTextInput9.text == null || areaLiquidacionTextInput9.text.length < 1)
				{
					areaLiquidacionTextInput9.text = "0";
				}
				if (valorTextInput9.text == null || valorTextInput9.text.length < 1)
				{
					valorTextInput9.text = "0";
					valorTextInput9.selectAll();
				}
				
				if((areaLiquidacionTextInput9.text != null && areaLiquidacionTextInput9.text.length > 0) 
					&& (valorTextInput9.text != null && valorTextInput9.text.length > 0)){
					
					var area:Number = new Number(areaLiquidacionTextInput9.text);
					var valor:Number = new Number(valorTextInput9.text);
					var total:Number = area * valor;
					var totalRedondeado:Number = Math.round(total*10000)/10000;
					valorTotalTextInput9.text = new String(totalRedondeado);
					
					valorTotalTextInput9F.text = formatearMoneda(new String(totalRedondeado));
					
					valorTotalTextInput_focusOutHandler(null);
				}
			}
			
			protected function labelTransmitido(item:Object, column:DataGridColumn):String{
				var res:String;
				if((item.logsGeneraArchivo != null) && (item.logsGeneraArchivo.estado != null) && (item.logsGeneraArchivo.estado == "E")){
					res = "S";
				}
				else { 
					res = "N";
				}
				return res;
			}
			
			protected function labelEstado(item:Object, column:DataGridColumn):String{
				var res:String;
				if((item.estadoAvaluo != null) && (item.estadoAvaluo == "2")){
					res = "NUEVO";
				}
				else { 
					res = "APROBADO";
				}
				return res;
			}
			
			
			protected function getUvrDia(arg0:String):void
			{
				getUvrDiaResult.token = liquidacionTotalService.getUvrDia(arg0);
			}
			
			
			protected function fechaAvaluoDateField2_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				var fecha:String = fechaAvaluoDateField2.text;
				getUvrDia(fecha);
				consecutivoBancoTextInput.text = fechaAvaluoDateField2.text.replace("/","").replace("/","") + numeroIdentificacionTextInput3.text;
			}
			
			
			protected function getUvrDiaResult_resultHandler(event:ResultEvent):void
			{
				liquidacionAvaluoTotal.valorUvrDia = getUvrDiaResult.lastResult;
				var uvrDiaNumer:Number = new Number(liquidacionAvaluoTotal.valorUvrDia);
				if(liquidacionAvaluoTotal.totalAvaluo != null && (uvrDiaNumer > 0 )){
					var totalAvaluoNumber:Number = new Number(liquidacionAvaluoTotal.totalAvaluo);
					var uvrDiaNumber:Number = new Number(liquidacionAvaluoTotal.valorUvrDia);
					var avaluoUvr:Number = Math.round((totalAvaluoNumber / uvrDiaNumber)*10000)/10000;
					liquidacionAvaluoTotal.avaluoUvr = new String(avaluoUvr);
				}
			}
			
			
			protected function cbxUso_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxUso.selectedItem != null ){
					if ((cbxUso.selectedItem as Dominios).rvLowValue == '6'){
						otroUsoInmuebleTextInput.enabled = true;
					}
					else {
						otroUsoInmuebleTextInput.text = "";
						otroUsoInmuebleTextInput.enabled = false;
					}
				}
				
			}
			
			/*12052016 error*/
			
			protected function cbxClase_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxClase.selectedItem != null ){
					if ((cbxClase.selectedItem as Dominios).rvLowValue == '8'){
						otroClaseTextInput.enabled = true;
					}
					else {
						otroClaseTextInput.text = "";
						otroClaseTextInput.enabled = false;
					}
				}
				
			}
			
			/*12052016 error*/
			
			
			private var isChangeTab:Boolean = new Boolean(false);
			
			protected function cbxPorpiedadHorizontal_changeHandler(event:IndexChangeEvent):void
			{
				//Se recalcula el total del avalúo del tab de liquidación Mantis 37845
				if(totalAvaluoTextInput!=null)
				{ 
					button9_clickHandler(null);
				}
				isChangeTab=false;
				guardarInfoConstruccion();
				
				
				getValoresDominioResult28.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult69.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				
				getValoresDominioResult70.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult71.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult72.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult73.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult74.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult75.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult76.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
				getValoresDominioResult77.token = dominiosAuxDao.getValoresDescLiquidacion("DESCLIQUIDACION",informacionConstruccion.propiedadHorizontal);
			}
			
			
			protected function txtNombreTxt_changeHandler(event:TextOperationEvent):void
			{
				if((txtNombreTxt.text != null) && (txtNombreTxt.text.length > 0)){
					txtNumeroLinea.enabled = true;
				}
				else
				{
					txtNumeroLinea.text = "";
					txtNumeroLinea.enabled = false;
				}
			}
			
			
			protected function button10_clickHandler(event:MouseEvent):void
			{
				if(dtgAvaluos.selectedItem != null)
				{
					var avaluoCambioEstado:Avaluo = dtgAvaluos.selectedItem as Avaluo;
					if((avaluoCambioEstado.logsGeneraArchivo != null) 
						//&& (avaluoCambioEstado.logsGeneraArchivo.idLogArchivos != null && (avaluoCambioEstado.logsGeneraArchivo.idLogArchivos.length > 0))
						&& (avaluoCambioEstado.logsGeneraArchivo.nombreArchivo != null && (avaluoCambioEstado.logsGeneraArchivo.nombreArchivo.length > 0))
					) 
					{
						var nombreArchivo:String = avaluoCambioEstado.logsGeneraArchivo.nombreArchivo;
						Alert.show("El avaluo esta incluido en el archivo: "+nombreArchivo
							+"\n\nPara ejecutar el cambio de estado primero debe reversar el archivo relacionado.","INFO", null, null, null, null, Alert.OK);
					}
					else if(avaluoCambioEstado.estadoAvaluo == '2') 
					{
						Alert.show("El avaluo ya se encuentra en estado nuevo.","INFO", null, null, null, null, Alert.OK);
					}
					else
					{
						avaluoCambioEstado.usuarioTransaccion = myUsuario.codigoPerfil;
						pasarANuevoResult.token = avaluosService.pasarANuevo(avaluoCambioEstado);
					}
				}
				else
				{
					Alert.show("Debe seleccionar un avalúo",null, null, null, null, null, Alert.OK);
				}
			}
			
			protected function button11_clickHandler(event:MouseEvent):void
			{
				if(dtgAvaluos.selectedItem != null)
				{
					var avaluoDuplicar:Avaluo = dtgAvaluos.selectedItem as Avaluo;
					//avaluoDuplicar.usuarioTransaccion = myUsuario.codigoUsuario;
					
					/*if((avaluoDuplicar.logsGeneraArchivo != null) 
					&& (avaluoDuplicar.logsGeneraArchivo.nombreArchivo != null && (avaluoDuplicar.logsGeneraArchivo.nombreArchivo.length > 0))
					) 
					{
					var nombreArchivo:String = avaluoDuplicar.logsGeneraArchivo.nombreArchivo;
					Alert.show("El avaluo esta incluido en el archivo: "+nombreArchivo
					+"\n\nPara ejecutar la copia primero debe reversar el archivo relacionado.","INFO")
					}
					else */if(avaluoDuplicar.estadoAvaluo == '2') 
					{
						Alert.show("Debe aprobar primero el Avaluo para poder copiarlo.","INFO", null, null, null, null, Alert.OK);
					}					
					else
					{	
						if(myUsuario.codigoPerfil != "PGBADMINIST01"/*avaluoDuplicar.usuarioCreacion == myUsuario.codigoUsuario*/)
						{	
							avaluoDuplicar.usuarioTransaccion = myUsuario.codigoUsuario;
							copiarAvaluoResult.token = avaluosService.copiarAvaluo(avaluoDuplicar);
						}else
						{
							Alert.show("Solo el usuario de creacion puede duplicar un Avaluo",null, null, null, null, null, Alert.OK);
						}	
					}	
					
				}
				else
				{
					Alert.show("Debe seleccionar un avalúo",null, null, null, null, null, Alert.OK);
				}
			}
			
			protected function pasarANuevoResult_resultHandler(event:ResultEvent):void
			{
				//Alert.show("Proceso realizado satisfactoriamente","INFO");
				transaccionSatisfactoria();
				registrosEncontrados.text = ""; 
				dtgAvaluos.dataProvider.removeAll();
				dtgAvaluos.invalidateDisplayList();
				dtgAvaluos.invalidateList();
			}
			
			
			protected function otrosUsosTextInput_clickHandler(event:MouseEvent):void
			{
				if(otrosUsosTextInput.selected ){
					textoOtrosUsosTextInput.enabled = true;
				}
				else 
				{
					textoOtrosUsosTextInput.text = "";
					textoOtrosUsosTextInput.enabled = false;
				}
			}
			
			var  numeroIdentificacion3changed=false;
			protected function numeroIdentificacionTextInput3_changegHandler(event:TextOperationEvent):void
			{
				
				numeroIdentificacion3changed=true;
				/*
				Alert.show("Esta Seguro de cambiar la identificacion. esto cambiara el consecutivo?","cambiar", Alert.YES | Alert.CANCEL, null, 
				function(e:CloseEvent):void
				{
				if (e.detail == Alert.YES) {
				//doSomething(event.detail, param1, param2);
				var fechaTmp:String = fechaAvaluoDateField2.text.replace("/","").replace("/","");
				
				fechaTmp + numeroIdentificacionTextInput3.text;
				
				consecutivoBancoTextInput.text = fechaTmp + numeroIdentificacionTextInput3.text;
				}else{							
				e.preventDefault();
				event.preventDefault();
				numeroIdentificacionTextInput3.text = numeroIdentificacion3;
				}
				}
				, null, Alert.CANCEL);
				*/
			}
			
			/*
			protected function numeroIdentificacionTextInput3_activateHandler(event:Event):void
			{
			// TODO Auto-generated method stub
			}
			*/
			
			var numeroIdentificacion3:String;
			var consecutivOld:String;
			protected function numeroIdentificacionTextInput3_focusInHandler(event:FocusEvent):void
			{
				if(numeroIdentificacion3changed!=true)
				{
					numeroIdentificacion3=numeroIdentificacionTextInput3.text;
					consecutivOld=consecutivoBancoTextInput.text;
				}
			}
			
			
			protected function numeroIdentificacionTextInput3_focusOutHandler(event:FocusEvent):void
			{
				if(numeroIdentificacion3changed==true)
					
				{
					Alert.yesLabel = "Si"; 
					Alert.show("Esta Seguro de cambiar la identificacion? Esto cambiara el consecutivo?","cambiar", Alert.YES | Alert.NO, null, 
						function(e:CloseEvent):void
						{
							if (e.detail == Alert.YES) {
								//doSomething(event.detail, param1, param2);
								var fechaTmp:String = fechaAvaluoDateField2.text.replace("/","").replace("/","");
								
								fechaTmp + numeroIdentificacionTextInput3.text;
								
								//consecutivoBancoTextInput.text = fechaTmp + numeroIdentificacionTextInput3.text;
								
								existeConsecutivoResult.token = avaluosService.existeConsecutivo(fechaTmp + numeroIdentificacionTextInput3.text);
								
								e.preventDefault();
								event.preventDefault();
								
								numeroIdentificacion3changed=false;
								
							}else{							
								e.preventDefault();
								event.preventDefault();
								numeroIdentificacionTextInput3.text = numeroIdentificacion3;
								avaluo2.numeroIdentificacion = numeroIdentificacion3;
								avaluo2.consecutivoBanco = consecutivOld;
								consecutivoBancoTextInput.text = consecutivOld;
								numeroIdentificacion3changed=false;
							}
						}
						, null, Alert.CANCEL);
				}	
			}
			
			
			protected function existeConsecutivoResult_resultHandler(event:ResultEvent):void
			{
				var existeConsecutivo:Boolean=false;
				existeConsecutivo=existeConsecutivoResult.lastResult;
				if(existeConsecutivo)
				{
					Alert.show("Un avaluo con este nuevo consecutivo ya existe. el consecutivo no puede ser cambiado","Error", null, null, null, null, Alert.OK);
					numeroIdentificacionTextInput3.text = numeroIdentificacion3;					
					avaluo2.numeroIdentificacion = numeroIdentificacion3;
					avaluo2.consecutivoBanco = consecutivOld;
					consecutivoBancoTextInput.text = consecutivOld;
				}
				else
				{
					var fechaTmp:String = fechaAvaluoDateField2.text.replace("/","").replace("/","");
					
					fechaTmp + numeroIdentificacionTextInput3.text;
					
					consecutivoBancoTextInput.text = fechaTmp + numeroIdentificacionTextInput3.text;
				}	
			}
			
			protected function labelFechaAvaluo(item:Object, column:DataGridColumn):String{
				if(item.fechaAvaluo != null){
					return formatDateTime.format(item.fechaAvaluo);
				}
				else { 
					return "";
				}
			}
			
			protected function labelFechaCreacion(item:Object, column:DataGridColumn):String{
				if(item.fechaCreacion != null){
					return formatDateTime.format(item.fechaCreacion);
				}
				else { 
					return "";
				}
			}
			
			
			/**
			 * Muestra una ventana modal donde se puede buscar un perito, para luego
			 * adicionarlos como criterio de búsqueda en la consulta de avaluos
			 * */
			private var ventanaExaminar:TitleWindow;
			protected function btnExaminar_clickHandler(event:MouseEvent):void
			{
				ventanaExaminar = PopUpManager.createPopUp(this,WndBuscarPerito,true) as TitleWindow;
				ventanaExaminar.showCloseButton = true;
				PopUpManager.centerPopUp(ventanaExaminar);
				ventanaExaminar['btnSeleccionarPerito'].addEventListener(MouseEvent.CLICK,handleSeleccionarButton);
			}
			
			private function handleSeleccionarButton(event:MouseEvent):void {
				if(ventanaExaminar['dtgPeritos'].selectedItem != null)
				{
					var empresa:EmpresasAvaluos = ventanaExaminar['dtgPeritos'].selectedItem as EmpresasAvaluos;
					txtIdentificacionPerito.text = empresa.numeroDocumento;
					txtNombrePerito.text = empresa.descEmpresa;
					PopUpManager.removePopUp(ventanaExaminar);
					lblNombrePerito.visible = true;
					txtNombrePerito.visible = true
				}
				else 
				{
					Alert.show("No seleccionó un perito",null,null,null,null,null,Alert.OK);
				}
			}
			
			
			
			protected function txtIdentificacionPerito_changeHandler(event:TextOperationEvent):void
			{
				if((txtIdentificacionPerito.text == null) || (txtIdentificacionPerito.text.length < 1))
				{
					lblNombrePerito.visible = false;
					txtNombrePerito.visible = false;
				}
			}
			
			var coordenadasLatitud:String="";
			var coordenadasLongitud:String="";
			
			protected function getAvaluosPorIdResult_resultHandler(event:ResultEvent):void
			{
				limpiarControles();
				
				//Se instancian nuevamente todos los objetos
				informacionBarrio = new InformacionBarrio();
				informacionConstruccion = new InformacionConstruccion();
				condicionesSalubridad = new CondicionesSalubridad();
				comportamientoOfertaDemanda = new ComportamientoOfertaDemanda();
				liquidacionAvaluo0 = new LiquidacionAvaluo();
				liquidacionAvaluo1 = new LiquidacionAvaluo();
				liquidacionAvaluo2 = new LiquidacionAvaluo();
				liquidacionAvaluo3 = new LiquidacionAvaluo();
				liquidacionAvaluo4 = new LiquidacionAvaluo();
				liquidacionAvaluo5 = new LiquidacionAvaluo();
				liquidacionAvaluo6 = new LiquidacionAvaluo();
				liquidacionAvaluo7 = new LiquidacionAvaluo();
				liquidacionAvaluo8 = new LiquidacionAvaluo();
				liquidacionAvaluo9 = new LiquidacionAvaluo();
				liquidacionAvaluoTotal = new LiquidacionAvaluoTotal();
				
				avaluo2 = getAvaluosPorIdResult.lastResult as Avaluo;
				
				//19 Nov 2012 Coordenadas Gps
				var coordenadas:String = avaluo2.ubicacionGps;
				
				
				if(coordenadas!=null)
				{
					//var coordenadasArray:Array = coordenadas.split(";");
					var coordenadasArray:Array = coordenadas.split(",");
					//avaluo2.ubicacionGpsTextInput
					try{
						coordenadasLatitud =coordenadasArray[0];
						coordenadasLongitud=coordenadasArray[1];
						
						if(coordenadasLongitud!="" && coordenadasLatitud!="")
						{	
							coordenadasLatitud  = numberFormatter.format(coordenadasLatitud) ;
							coordenadasLongitud = numberFormatter.format(coordenadasLongitud) ;
							avaluo2.ubicacionGps = coordenadasLatitud+","+coordenadasLongitud;
							ubicacionGpsTextInput.text = avaluo2.ubicacionGps; 
							coordenadasLatitudTextInput.text = coordenadasLatitud; 
							coordenadasLongitudTextInput.text = coordenadasLongitud ; 
						}
						
					}	
					catch(e:Error)
					{
						trace(e);
					}	
				}
				if(aprobar){
					if((avaluo2.informacionInmueble != null) && (avaluo2.informacionInmueble.length > 0)) {
						categoria.rvLowValue = (avaluo2.informacionInmueble[0] as InformacionInmueble).idCategoria;
					}
					else {
						categoria = null;
					}
					if((categoria != null) && (categoria.rvLowValue != null)){
						var ava:Avaluo = new Avaluo();
						ava.idAvaluo = avaluo2.idAvaluo;
						aprobarResult.token = avaluosService.aprobar(ava);
					}
					else {
						Alert.show("Para aprobar el avaluo debe seleccionar una categoria del inmueble.\n\nRecuerde seleccionar la categoria y guardar la sección en información del inmueble.","INFO", null, null, null, null, Alert.OK);
					}
					aprobarResult.token = avaluosService.aprobar(avaluo2);
					aprobar = false;
				}
					
				else {
					//valida si el archivo ya fue enviado
					if(avaluo2.logsGeneraArchivo != null){
						if(avaluo2.logsGeneraArchivo.estado!=null)
						{	
							if((avaluo2.logsGeneraArchivo.estado.toUpperCase() == "E") || (avaluo2.logsGeneraArchivo.estado.toUpperCase() == "G"))
							{
								isEnabled = false;
								habilitarCamposEdicion(false); 
							}
							else if((avaluo2.logsGeneraArchivo.estado.toUpperCase() == "R") || (avaluo2.logsGeneraArchivo.estado.toUpperCase() == "V"))
							{
								isEnabled = true;
								habilitarCamposEdicion(true); 
								//Mantener Estado Actual
							}
							else
							{
								isEnabled = false;
								habilitarCamposEdicion(false); 
							}
							
						}
					}else{						
						isEnabled = true;
						habilitarCamposEdicion(true);
					}
					
					if(selectCiudadbasico != null && selectCiudadbasico.length == 0){
						selectCiudadbasico.addItem(avaluo2.objCiudad);
						if(cbxCiudadBasico != null){
							cbxCiudadBasico.selectedIndex = 0 ;
						}
					}
					
					
					
					if((avaluo2.informacionBarrio != null) && (avaluo2.informacionBarrio.length > 0)) {
						informacionBarrio = avaluo2.informacionBarrio.getItemAt(0) as InformacionBarrio;
					}
					
					
					if((avaluo2.informacionInmueble != null) && (avaluo2.informacionInmueble.length > 0)) {
						informacionInmueble2 = avaluo2.informacionInmueble.getItemAt(0) as InformacionInmueble;						
						
						categoria.rvLowValue = informacionInmueble2.idCategoria;
						isBodega = informacionInmueble2.idCategoria == '5'?true:false;
						isLocal = informacionInmueble2.idCategoria == '6'?true:false;
						
						if(selectciudadescritura != null && selectciudadescritura.length == 0 && informacionInmueble2.departamentoEscritura != null){
							var posicionDepartamento:int = getItemIndex(informacionInmueble2.departamentoEscritura,selectDepartamento,'codAsobancaria');
							if(posicionDepartamento >= 0){
								selectciudadescritura =  (selectDepartamento[posicionDepartamento] as Departamento).ciudadesDepto;
							}
						}
					}
										 
					/**/
					//ojo pruebas campos en cero 0
					informacionConstruccion.sala="0";
					informacionConstruccion.banioSocial="0";
					informacionConstruccion.banioPrivado="0";
					informacionConstruccion.banioServicio="0";
					informacionConstruccion.jardin="0";
					informacionConstruccion.comedor="0";
					informacionConstruccion.estarHabitacion="0";
					informacionConstruccion.cocina="0";
					informacionConstruccion.patioInterior="0";
					informacionConstruccion.balcon="0";
					informacionConstruccion.estudio="0";
					informacionConstruccion.numeroHabitaciones="0";
					informacionConstruccion.cuartoServicio="0";
					informacionConstruccion.terraza="0";
					informacionConstruccion.zonaVerdePrivada="0";
					informacionConstruccion.totalGarajes="0";
					informacionConstruccion.usoExclusivo="0";
					informacionConstruccion.sencillo="0";
					informacionConstruccion.deposito="0";
					informacionConstruccion.local="0";
					informacionConstruccion.cubierto="0";
					informacionConstruccion.privado="0";
					informacionConstruccion.doble="0";
					informacionConstruccion.bodega="0";
					informacionConstruccion.descubierto="0";
					informacionConstruccion.bahiaComunal="0";
					informacionConstruccion.servidumbre="0";
					informacionConstruccion.oficina="0";
					
					/**/
					if((avaluo2.informacionConstruccion != null) && (avaluo2.informacionConstruccion.length > 0)) {
						informacionConstruccion = avaluo2.informacionConstruccion.getItemAt(0) as InformacionConstruccion;
					}
					if((avaluo2.condicionSalubridad != null) && (avaluo2.condicionSalubridad.length > 0)) {
						condicionesSalubridad = avaluo2.condicionSalubridad.getItemAt(0) as CondicionesSalubridad;
					}
					if((avaluo2.compOfertaDemanda != null) && (avaluo2.compOfertaDemanda.length > 0)) {
						comportamientoOfertaDemanda = avaluo2.compOfertaDemanda.getItemAt(0) as ComportamientoOfertaDemanda;
					}
					if((avaluo2.observacion != null) && (avaluo2.observacion.length > 0)) {
						observaciones = avaluo2.observacion.getItemAt(0) as Observaciones;
					}
					if((avaluo2.liquidacionTotal != null) && (avaluo2.liquidacionTotal.length > 0)) {
						liquidacionAvaluoTotal = avaluo2.liquidacionTotal.getItemAt(0) as LiquidacionAvaluoTotal;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 0)) {
						liquidacionAvaluo0 = avaluo2.liquidacionAvaluos.getItemAt(0) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 1)) {
						liquidacionAvaluo1 = avaluo2.liquidacionAvaluos.getItemAt(1) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 2)) {
						liquidacionAvaluo2 = avaluo2.liquidacionAvaluos.getItemAt(2) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 3)) {
						liquidacionAvaluo3 = avaluo2.liquidacionAvaluos.getItemAt(3) as LiquidacionAvaluo;	
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 4)) {
						liquidacionAvaluo4 = avaluo2.liquidacionAvaluos.getItemAt(4) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 5)) {
						liquidacionAvaluo5 = avaluo2.liquidacionAvaluos.getItemAt(5) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 6)) {
						liquidacionAvaluo6 = avaluo2.liquidacionAvaluos.getItemAt(6) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 7)) {
						liquidacionAvaluo7 = avaluo2.liquidacionAvaluos.getItemAt(7) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 8)) {
						liquidacionAvaluo8 = avaluo2.liquidacionAvaluos.getItemAt(8) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 9)) {
						liquidacionAvaluo9 = avaluo2.liquidacionAvaluos.getItemAt(9) as LiquidacionAvaluo;
					}
					
					// Leonardo Galan 
					// Este cambio esta afectando el proceso
					//24 junio 2016 se agrega llamado para cargar coordenadas al editar
					// ubicacionGpsTextInput_focusOutHandler(null);
					//24 junio 2016 se agrega llamado para cargar coordenadas al editar
					
					vstAvaluo.selectedIndex = 2;
				}
			}
			
			
			protected function copiarAvaluoResult_resultHandler(event:ResultEvent):void
			{
				
				//getMensajeTransaccionResult.token = avaluosService.getMensajeTransaccion();
				//consultar();
				mensaje = copiarAvaluoResult.lastResult as String;
				if(mensaje!=null)
				{
					Alert.show(mensaje,null, null, null, null, null, Alert.OK);
					mensaje = null;									
				}
				mensaje = null;
			}
			
			
			/*protected function panel_creationCompleteHandler(event:FlexEvent):void
			{
			getMensajeTransaccionResult2.token = avaluosService.getMensajeTransaccion();
			}*/
			
			
			
			protected function startImgsAnexo_clickHandler(event:MouseEvent):void
			{
				wndowCargueAnx = WndAnexosPdf(PopUpManager.createPopUp(this, WndAnexosPdf, true));
				//wndowCargue.empresaAvaluos = dataGrid.selectedItem as EmpresasAvaluos;
				wndowCargueAnx.codigoUsuario=myUsuario.codigoUsuario;
				wndowCargueAnx.idAvaluo=avaluo2.idAvaluo;
				wndowCargueAnx.addEventListener(CloseEvent.CLOSE, closeMeWndAnexos, false, 0, true);
			}
			private function closeMeWndAnexos(e:CloseEvent):void {
				PopUpManager.removePopUp(wndowCargueAnx);
				wndowCargueAnx.removeEventListener(CloseEvent.CLOSE, closeMeWndAnexos);
			}
			
			
			protected function button12_clickHandler(event:MouseEvent):void
			{
				
				nombreSeccion = "encanbezadoConstructor";
				if(nombreSolicitanteTextInput.text != null
					&& nombreSolicitanteTextInput.text.length > 0
					&& cbxTipoIdentificacionEncabezado.selectedItem != null 
					&& numeroIdentificacionTextInput2.text != null
					&& numeroIdentificacionTextInput2.text.length > 0
					&& fechaAvaluoDateField.text != null 
					&& fechaAvaluoDateField.text.length > 0
					&& cbxDepartamento.selectedItem != null 
					&& cbxCiudadEncabezado.selectedItem != null
					&& barrioTextInput.text != null 
					&& barrioTextInput.text.length > 0
					&& direccionInmuebleTextInput2.text != null 
					&& direccionInmuebleTextInput2.text.length > 0
					&& matriculaInmobiliariaPpal1TextInput2.text != null 
					&& matriculaInmobiliariaPpal1TextInput2.text.length > 0
					&& txtMatriculaInmobiliariaPpal2Encab.text != null
					&& txtMatriculaInmobiliariaPpal2Encab.text.length > 0)
				{
					//Consume ws para validar la direccion y en el manejador de la respuesta del ws graba la seccion
					if(numeroIdentificacionTextInput2.text!=avaluo.numeroIdentificacion)
					{	
						// la validacion del formato de direccion se deja en tiempo de escritura
						// se habilita el guardado de la informacion debido a que la validacion de la direccion se realiza en tiempo de digitacion
						guardarConstructor();
					}else
					{
						Alert.show("El solicitante del proyecto debe ser diferente del usuario de creacion del avaluo",null, null, null, null, null, Alert.OK);
					}
					//avaluoDuplicar.usuarioTransaccion = myUsuario.codigoUsuario;
				}
				else
				{
					Alert.show("Debe diligenciar todos los campos",null, null, null, null, null, Alert.OK);
				}
				
			}
			
			public function esConstructor( avaluoValidar:Avaluo ):Boolean
			{
				/*
				var infocon:InformacionConstruccion = avaluoConstructor.informacionConstruccion.getItemAt(0) as InformacionConstruccion;
				if(parseInt(infocon.avanceObra)<70)
				{
				return false;
				}
				*/
				//if(avaluoValidar.)
				//avaluo.tipoInforme = "2";
				return true;
			}
			
			var TmpmatriculaInmobiliariaPpal1:String;
			var TmpmatriculaInmobiliariaPpal2:String;
			protected function button13_clickHandler(event:MouseEvent):void
			{
				
				if(myUsuario.codigoPerfil == "PGBADMINIST01") {
					Alert.show("El aministrador del sistema no tiene autorización para crear avaluos","INFO", null, null, null, null, Alert.OK);
				}
				else
				{	
					if(dtgAvaluos.selectedItem != null)
					{
						var avaluoConstructor:Avaluo = dtgAvaluos.selectedItem as Avaluo;
						
						if(avaluoConstructor.estadoAvaluo == '2') 
						{
							Alert.show("Debe aprobar primero el avalúo para poder copiarlo.","INFO", null, null, null, null, Alert.OK);
						}					
						else
						{	
							var infocon:InformacionConstruccion = avaluoConstructor.informacionConstruccion.getItemAt(0) as InformacionConstruccion;
							//if(avaluoConstructor.informacionConstruccion.getItemAt(0).
							
							
							
							//if(parseInt(infocon.avanceObra)<70)
							//if(parseInt(infocon.avanceObra)<PORCENTAJE_ASOBANCARIA)
							/*
							if(infocon.estadoTerminadaNueva=="1" && avaluoConstructor.tipoInforme=="2")
							{	
							*/	
							
							//if(avaluoConstructor.usuarioCreacion == myUsuario.codigoUsuario)
							//{	
							
							avaluoConstructor.usuarioTransaccion = myUsuario.codigoUsuario;
							
							//copiarAvaluoResult.token = avaluosService.copiarAvaluo(avaluoDuplicar);
							
							nombreSeccion = "encanbezadoConstructor";
							
							if(btnGuardarEncabezadoCon!=null){
								btnGuardarEncabezadoCon.visible=true;
								if(btnGuardarEncabezado!=null){
									btnGuardarEncabezado.visible=false;
								}
							}
							
							avaluo.nombreSolicitante = "";
							avaluo.numeroIdentificacion = "";
							
							avaluo.idAvaluo=avaluoConstructor.idAvaluo;
							
							avaluo.codigoDaneCiudad = avaluoConstructor.codigoDaneCiudad;
							avaluo.codigoDaneDepartamento=avaluoConstructor.codigoDaneDepartamento;
							avaluo.idCiudad=avaluoConstructor.idCiudad;
							avaluo.idDepartamento=avaluoConstructor.idDepartamento;
							
							
							selectCiudadbasico = new ArrayCollection();
							selectCiudadbasico.addItem(avaluoConstructor.objCiudad);
							// cbxCiudadEncabezado.enabled = true;
							avaluo.objCiudad=avaluoConstructor.objCiudad;
							
							//selectCiudadbasico.addItem(avaluo.objCiudad);
							// selectCiudadbasico.addItem(avaluoConstructor.objCiudad);
							//alvCiudad.addItem(avaluo.objCiudad);
							//cbxDepartamento.selectedItem.ciudadesDepto;
							
							avaluo.informacionInmueble=avaluoConstructor.informacionInmueble;
							
							
							avaluo.fechaAvaluo=avaluoConstructor.fechaAvaluo;
							
							
							avaluo.barrio = avaluoConstructor.barrio;
							avaluo.direccionInmueble = avaluoConstructor.direccionInmueble;
							avaluo.matriculaInmobiliariaPpal1 = avaluoConstructor.matriculaInmobiliariaPpal1;
							
							//TmpmatriculaInmobiliariaPpal1=
							//var TmpmatriculaInmobiliariaPpal1=avaluoConstructor.matriculaInmobiliariaPpal1.substr(;
							//var TmpmatriculaInmobiliariaPpal2:String;
							
							if(avaluoConstructor.matriculaInmobiliariaPpal1!=null)
							{
								var matInmArray:Array = avaluoConstructor.matriculaInmobiliariaPpal1.split("-");
								//avaluo2.ubicacionGpsTextInput
								try{
									// TmpmatriculaInmobiliariaPpal1=matInmArray[0];
									// TmpmatriculaInmobiliariaPpal2=matInmArray[1];
									TmpmatriculaInmobiliariaPpal1="";
									TmpmatriculaInmobiliariaPpal2="";
								}catch(Error)
								{
									
								}	
							}
							
							//avaluo=avaluoConstructor;
							
							vstAvaluo.selectedIndex = 1;								
							
							//}else
							//{
							//Alert.show("El usuario de creacion puede duplicar un Avaluo");
							//}
							/*	
							}
							else
							{
							//Alert.show("Solo son proyectos constructor los Avaluos con avance de obra menor al 70%",null, null, null, null, null, Alert.OK);
							//Alert.show("Solo son proyectos constructor los Avaluos con avance de obra menor al "+PORCENTAJE_ASOBANCARIA+"%",null, null, null, null, null, Alert.OK);
							Alert.show("Solo son proyectos constructor los Avaluos con estado nuevo y terminado 100%",null, null, null, null, null, Alert.OK);
							}*/
						}	
						
					}
					else
					{
						Alert.show("Debe seleccionar un avalúo",null, null, null, null, null, Alert.OK);
					}
				}
			}
			
			
			/*protected function panel_creationCompleteHandler(event:FlexEvent):void
			{
			copiarAvaluoConstructorResult.token = avaluosService.copiarAvaluoConstructor( arg0);
			}*/
			
			
			protected function copiarAvaluoConstructorResult_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				
				mensaje = copiarAvaluoConstructorResult.lastResult as String;
				if(mensaje!=null)
				{
					Alert.show(mensaje,null, null, null, null, null, Alert.OK);
					mensaje = null;
					
					//cancelNuevoAvaluo_clickHandler(null);
					limpiarControles();
					vstAvaluo.selectedIndex = 0;
					
				}
				mensaje = null;
				
			}
			protected function ubicacionGpsTextInput_focusOutHandler(event:FocusEvent):void
			{
				var coordenadas:String = ubicacionGpsTextInput.text; 
				// TODO Auto-generated method stub				
				if(coordenadas!=null && coordenadas.length > 0 )
				{
					//var coordenadasArray:Array = coordenadas.split(";");
					var coordenadasArray:Array = coordenadas.split(",");
					//avaluo2.ubicacionGpsTextInput
					try{
						coordenadasLatitud =coordenadasArray[0];
						coordenadasLongitud=coordenadasArray[1];
						
						if(coordenadasLongitud!="" && coordenadasLatitud!="")
						{	
							coordenadasLatitud  = numberFormatter.format(coordenadasLatitud) ;
							coordenadasLongitud = numberFormatter.format(coordenadasLongitud) ;
							avaluo2.ubicacionGps = coordenadasLatitud+","+coordenadasLongitud;
							ubicacionGpsTextInput.text = avaluo2.ubicacionGps ;
						}
						
					}catch(Error)
					{
						
					}
					coordenadasLatitudTextInput.text=coordenadasLatitud;
					coordenadasLongitudTextInput.text=coordenadasLongitud;	
				}
			}
			
			protected function ubicacionGpsTextInput_changeHandler(event:TextOperationEvent):void
			{
				var coordenadas:String = avaluo2.ubicacionGps;
				// TODO Auto-generated method stub				
				if(coordenadas!=null && coordenadas.length > 0 )
				{
					//var coordenadasArray:Array = coordenadas.split(";");
					var coordenadasArray:Array = coordenadas.split(",");
					//avaluo2.ubicacionGpsTextInput
					try{
						coordenadasLatitud =coordenadasArray[0];
						coordenadasLongitud=coordenadasArray[1];
						
						if(coordenadasLongitud!="" && coordenadasLatitud!="")
						{	
							coordenadasLatitud  = numberFormatter.format(coordenadasLatitud) ;
							coordenadasLongitud = numberFormatter.format(coordenadasLongitud) ;
							avaluo2.ubicacionGps = coordenadasLatitud+","+coordenadasLongitud;
							ubicacionGpsTextInput.text = avaluo2.ubicacionGps; 
						}						
					}catch(Error)
					{
						
					}
					coordenadasLatitudTextInput.text=coordenadasLatitud;
					coordenadasLongitudTextInput.text=coordenadasLongitud;	
				}
			}
			
			
			protected function ubicacionGpsTextInput_updateCompleteHandler(event:FlexEvent):void
			{
				
				var coordenadas:String = avaluo2.ubicacionGps;
				// TODO Auto-generated method stub				
				if(coordenadas!=null && coordenadas.length > 0 )
				{
					//var coordenadasArray:Array = coordenadas.split(";");
					var coordenadasArray:Array = coordenadas.split(",");
					//avaluo2.ubicacionGpsTextInput
					try{
						coordenadasLatitud =coordenadasArray[0];
						coordenadasLongitud=coordenadasArray[1];
						
						if(coordenadasLongitud!="" && coordenadasLatitud!="")
						{	
							coordenadasLatitud  = setPrecision(Number(coordenadasLatitud),6).toString();
							coordenadasLongitud = setPrecision(Number(coordenadasLongitud),6).toString();
							avaluo2.ubicacionGps = coordenadasLatitud+","+coordenadasLongitud;
						}
					}catch(Error)
					{
						
					}
					
					/*coordenadasLatitudTextInput.enabled=true;
					coordenadasLongitudTextInput.enabled=true;	
					
					coordenadasLatitudTextInput.text=coordenadasLatitud;
					coordenadasLongitudTextInput.text=coordenadasLongitud;
					
					coordenadasLatitudTextInput.enabled=false;
					coordenadasLongitudTextInput.enabled=false;*/
					
				}
			}
			protected function setPrecision(number:Number, precision:int) {
				/*
				precision = Math.pow(10, precision);
				return Math.round(number * precision)/precision;
				*/
				return truncate(number,precision);
			}
			
			public static function truncate(val:Number, decimalPlaces:uint):Number{
				var multiplier:uint = Math.pow(10, decimalPlaces);
				var truncatedVal:Number = val*multiplier;
				//if (newNumber > int.MAX_VALUE){
				if (truncatedVal > int.MAX_VALUE){
					return Number(truncatedVal.toFixed(decimalPlaces));
				}
				return int(truncatedVal)/multiplier;
			}
			
			
			import mx.core.FlexGlobals;
			import mx.collections.IViewCursor;
			private var fr:FileReference;
			
			private const PROCEDATOS_DOWNLOAD_URL:String = FlexGlobals.topLevelApplication.parameters.urlArchivo;
			
			protected function button14_clickHandler(event:MouseEvent):void
			{
				
				if((getAvaluosPorCriterioResult.lastResult == null) || (getAvaluosPorCriterioResult.lastResult.length == 0)) {
					Alert.show("Debe haber registros en la consulta para descargar la copia de seguridad..",null, null, null, null, null, Alert.OK);
					
				}
				else
				{
					//dtgAvaluos.
					var dp:Object=dtgAvaluos.dataProvider;
					var cursor:IViewCursor=dp.createCursor();
					var ids:String="";
					var noAprobados:int=0;
					while( !cursor.afterLast )
					{
						// Access each column field like: cursor.current.MyFieldName
						//trace(cursor.current.MyFieldName);
						if(cursor.current.estadoAvaluo==3)
						{						
							ids=ids+"&ids="+cursor.current.idAvaluo as String;
						}
						else
						{
							noAprobados++;
						}
						// Obviously don't forget to move to next row:
						cursor.moveNext();
					}					
					if(ids.length>0)
					{
						
						if(noAprobados>0)
						{
							Alert.show("Recuerde que el archivo plano solo contendra los Avaluos 'Aprobados' pertenecientes a su consulta..",null, null, null, null, null, Alert.OK);
						}	
						
						//dtgAvaluos.dataProvider.
						var request:URLRequest = new URLRequest();
						request.url = PROCEDATOS_DOWNLOAD_URL+"/PlanoAvaDownServlet?ids="+ids;
						fr = new FileReference();
						//fr.download(request);
						
						fr.addEventListener(ProgressEvent.PROGRESS, progressHandler);
						fr.addEventListener(Event.COMPLETE, completeHandler);
						
						var now:Date = new Date();
						var CurrentDF:DateFormatter = new DateFormatter();
						CurrentDF.formatString = "DD-MM-YYYY"
						var DateTimeString:String = CurrentDF.format(now);
						
						pb.visible=true;
						
						fr.download(request,"Avaluos_"+DateTimeString+".zip");	
					}
					else{
						Alert.show("No hay registros para generar el archivo, o los registros no corresponden a avaluos 'Aprobados'.. ",null, null, null, null, null, Alert.OK);
					}
				}
				
				
			}
			
			private function progressHandler(event:ProgressEvent):void {
				if(pb != null){
					pb.label = "DESCARGANDO %3%%";
					pb.setProgress(event.bytesLoaded, event.bytesTotal);
				}
			}
			
			/**
			 * Una vez la descarga ha sido completada, cambia el rótulo de la barra de progreso
			 * y desactiva el botón "Cancelar" desde que la descarga ya haya sido completada.
			 */
			private function completeHandler(event:Event):void {
				if(pb != null){
					pb.label = "DESCARGA COMPLETA";
					pb.setProgress(0, 100);
					pb.visible=false;
					Alert.show("El archivo ha sido generado..",null, null, null, null, null, Alert.OK);
				}
			}
			
			
			protected function button15_clickHandler(event:MouseEvent):void
			{
				
				var categoria:int=0;
				
				if((cbxCategoria != null) && (cbxCategoria.selectedIndex > -1)) {
					categoria = cbxCategoria.selectedItem.rvLowValue;
					validarCampos(ListaCampos(categoria,false));
				}
				else
				{
					Alert.show("La categoria es requerida para la validacion..",null, null, null, null, null, Alert.OK);
				}
				
			}
			
			
			
			
			protected function button16_clickHandler(event:MouseEvent):void
			{
				limpiarCampoRequeridoDTOlist(ListaCampos(2,true));
			}
			
			
			protected function avaluosService_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				/*
				event.
				avaluosService.
				avaluosService.serviceControl.logout()
				*/
				//avaluosService.serviceControl.initialize();
				avaluosService = new AvaluosService();
				//AvaluosService.
				
			}
			
			
			/*protected function vBox2_creationCompleteHandler(event:FlexEvent):void
			{
			//getValoresDominioResult93.token = dominiosAuxDao.getValoresDominio(/*Enter value(s) for */ //arg0);
			//getValoresDominioResult94.token = dominiosAuxDao.getValoresDominio(/*Enter value(s) for */ //arg0);
			//}*/
			
			
			/*12052016 error se comenta*/
			/*
			protected function cbxusoInmuebleBUA_changeHandler(event:IndexChangeEvent):void
			{
			if(cbxusoInmuebleBUA.selectedItem != null ){
			if ((cbxusoInmuebleBUA.selectedItem as Dominios).rvLowValue == '13'){
			otroClaseTextInput.enabled = true;
			}
			else {
			otroClaseTextInput.text = "";
			otroClaseTextInput.enabled = false;
			}
			}
			}
			*/
			/*12052016 error se comenta*/
			
			
			protected function cbxmaterialConstruccionBUA_changeHandler(event:IndexChangeEvent):void
			{
				
				cbxdetalleMaterialSFBUA.enabled = true;
				//selectciudadescritura = cbxDepartamentoEscritura.selectedItem.ciudadesDepto;
				cbxdetalleMaterialSFBUA.invalidateDisplayList();
				cbxdetalleMaterialSFBUA.selectedIndex = -1;
				
				var rvLowvalue:String=null;				
				rvLowvalue = (selectmaterialConstruccionBUA[event.newIndex] as Dominios).rvHighValue;
				getValoresDominioResult86.token = dominiosAuxDao.getValoresDominioByAbbreviation("C_ESTRUCTURA_SF_BUA",rvLowvalue);
				
				
			}
			
			import com.segurosbolivar.avaluos.componentes.WndMultiRegistroConstructor;
			
			//private var ventanaConstructor:spark.components.TitleWindow;
			private var ventanaConstructor:WndMultiRegistroConstructor;
			protected function multiConstructor_clickHandler(event:MouseEvent):void
			{
				if(myUsuario.codigoPerfil == "PGBADMINIST01") {
					Alert.show("El aministrador del sistema no tiene autorización para crear avaluos","INFO", null, null, null, null, Alert.OK);
				}
				else
				{	
					if(dtgAvaluos.selectedItem != null)
					{
						var avaluoConstructor:Avaluo = dtgAvaluos.selectedItem as Avaluo;
						
						if(avaluoConstructor.estadoAvaluo == '2') 
						{
							Alert.show("Debe aprobar primero el Avaluo para poder copiarlo.","INFO",null, null, null, null, Alert.OK);
						}					
						else
						{	
							var infocon:InformacionConstruccion = avaluoConstructor.informacionConstruccion.getItemAt(0) as InformacionConstruccion;
							//if(parseInt(infocon.avanceObra)<70)
							//if(parseInt(infocon.avanceObra)<PORCENTAJE_ASOBANCARIA)	
							if(/*parseInt(infocon.avanceObra)==100 &&*/infocon.estadoTerminadaNueva=="1" /*&& chkTerminadoNueva.selected*/ && avaluoConstructor.tipoInforme=="2")
							{	
								/*if(avaluoConstructor.usuarioCreacion == myUsuario.codigoUsuario)
								{*/	
								
								avaluoConstructor.usuarioTransaccion = myUsuario.codigoUsuario;
								
								if(avaluoConstructor.matriculaInmobiliariaPpal1!=null)
								{
									var matInmArray:Array = avaluoConstructor.matriculaInmobiliariaPpal1.split("-");
									try{
										TmpmatriculaInmobiliariaPpal1=matInmArray[0];
										TmpmatriculaInmobiliariaPpal2=matInmArray[1];
									}catch(Error)
									{
										
									}	
								}
								
								
								
								//ventanaConstructor = PopUpManager.createPopUp(this,WndMultiRegistroConstructor,true);
								ventanaConstructor = WndMultiRegistroConstructor(PopUpManager.createPopUp(this, WndMultiRegistroConstructor, true));
								//ventanaConstructor.showCloseButton = true;
								
								ventanaConstructor.avaluo=avaluoConstructor;
								ventanaConstructor.avaluo2=avaluoConstructor;
								
								/*
								ventanaConstructor.x = this.parentApplication.x+30; 
								ventanaConstructor.y = this.parentApplication.y+30;
								*/
								var Screenwidth = Capabilities.screenResolutionX;
								var Screenheight = Capabilities.screenResolutionY;
								
								//ventanaConstructor.width
								//ventanaConstructor.height
								
								if(ventanaConstructor.width>Screenwidth)
								{
									PopUpManager.centerPopUp(ventanaConstructor);
								}else
								{
									ventanaConstructor.x = (this.stage.stageWidth / 2) - (ventanaConstructor.width / 2);
									ventanaConstructor.y = (this.stage.stageHeight / 2) - (ventanaConstructor.height / 2);
								}
								
								
								//PopUpManager.centerPopUp(ventanaConstructor);
								
								//ventanaConstructor['btnSeleccionarPerito'].addEventListener(MouseEvent.CLICK,handleSeleccionarButton);
								
								
								/*}else
								{
								//Alert.show("El usuario de creacion puede duplicar un Avaluo");
								}*/
							}
							else
							{
								//Alert.show("Solo son proyectos constructor los Avaluos con avance de obra menor al 70%",null, null, null, null, null, Alert.OK);
								//Alert.show("Solo son proyectos constructor los Avaluos con avance de obra menor al "+PORCENTAJE_ASOBANCARIA+"%",null, null, null, null, null, Alert.OK);
								Alert.show("Solo son proyectos constructor los Avaluos con estado nuevo y terminado 100%",null, null, null, null, null, Alert.OK);
							}	
						}	
						
					}
					else
					{
						Alert.show("Debe seleccionar un avalúo",null, null, null, null, null, Alert.OK);
					}
				}
				
			}
			
			
			
			
			protected function btnAprobarAvaluo0_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				imprAprobar=true;
				btnAprobarAvaluo_clickHandler(event);
			}
			
			private function administrarPanelesBarrio():void{
				// TODO Auto-generated method stub
				if(tbnAvaluosBarrio.selectedIndex<tbnAvaluosBarrio.length-1){
					tbnAvaluosBarrio.selectedIndex=tbnAvaluosBarrio.selectedIndex+1;
					tbnAvaluosBarrio.validateNow();
					
					switch(tbnAvaluosBarrio.selectedIndex)
					{
						case 1: 
							chkAcueductoSector.setFocus();
							break;
						case 2: 
							viviendaTextInput.setFocus();
							break;						
						case 3: 
							if(cbxEstadoVias != null){
								cbxEstadoVias.setFocus();
							}else {
								nvcViasAcceso.setFocus();
							}
							break;
						case 4: 
							parquesTextInput.setFocus();
							break;
						case 5: 
							cbxEstrato.setFocus();
							break;						
					}	
					
				}					
			}
			
			
			protected function btnGuardarBarrio_focusInHandler(event:FocusEvent):void{
				if(!guardarBarrioSinClick){
					btnGuardarBarrio_clickHandler(null);
				}
				guardarBarrioSinClick = new Boolean(false);
			}
			
			
			private function administrarPanelesInformacionConstruccion():void{
				if(tbnAvaluosConstruccion.selectedIndex<tbnAvaluosConstruccion.length-1)
				{
					tbnAvaluosConstruccion.selectedIndex=tbnAvaluosConstruccion.selectedIndex+1;
					tbnAvaluosConstruccion.validateNow();
					//tbnAvaluosConstruccion.getChildAt(0).;
					
					switch(tbnAvaluosConstruccion.selectedIndex)
					{
						case 1: 
							salaTextInput.setFocus();
							break;
						case 2: 
							cbxReqCondSalubirda.setFocus();
							break;						
						case 3: 
							cbxEstadoPisos.setFocus();
							break;
						case 4: 
							cbxPorpiedadHorizontal.setFocus();
							// nvcPropiedadHorizontal.setFocus();
							break;
						case 5: 
							chkPorteria.setFocus();
							break;						
					}						
					
				}
				
			}
			
			
			protected function btnGuardarConstruccion_focusInHandler(event:FocusEvent):void
			{
				if(!guardarConstruccionSinClick){
					btnGuardarConstruccion_clearHandler(null);
				}
				guardarConstruccionSinClick = new Boolean(false);
			}
			
			
			protected function genericService_faultHandler(event:FaultEvent,service:String):void
			{
				
				isChangeTab=true;
				
				var errorFull:String = event.fault.toString(); 
				var error:String = event.fault.faultString.toString();

				var descripcionError:Array = new Array();
				var errorMessage:String = "";  
				
				if(error != null && error.length > 0){
					descripcionError = error.split(":"); 
				}
				
				if(descripcionError.length>1){
					errorMessage = descripcionError[1];
					imprimirMensaje(errorMessage, "Validación de registros"); 
					limpiarControles();  
				}else {
					var mensaje:String = "Por favor intente de nuevo la operacion, \nsi persiste este mensaje, " +
						"contacte a su coordinador \n\nInformación Error: " +service + " \n " + errorMessage + "\n" + errorFull ; 
					
					if(contadorIntentos < numeroIntentos){
						switch(service){
							case "construccionService":
							case "salubridadService":
								guardarInfoConstruccion();
								contadorIntentos++ ;
								break;
							case "tercerosWebService":
								mensaje = "Se presenta problemas con el validador de direcciones. " +
										  "\nPor favor valide con el administrador de la aplicación" +
										  "\ne intentelo nuevamente"; 
								imprimirMensaje(mensaje,"Falla en direcciones"); 
								break;
							case "liquidacionTotalService":
								createResult11_resultHandler(null);
								contadorIntentos++ ;
								break;
							case "liquidacionService": 
								button9_clickHandler(null);
								contadorIntentos++ ;
								break;
							case "observacionesService": 
								guardarObservaciones();
								contadorIntentos++ ;
								break;
							case "ofertaDemandaService": 
								btnGuardarOfertaDemanda_clickHandler(null);
								contadorIntentos++ ;
								break;
							case "inmuebleService": 
								btnGuardarInmueble_clickHandler(null);
								contadorIntentos++ ;
								break;
							case "barrioService":
								btnGuardarBarrio_clickHandler(null);
								contadorIntentos++ ;
								break;
							case "departamentoService": 
							case "dominiosAuxDao":
							case "avaluosService":
							default:
								imprimirMensaje(mensaje,"Error en la comunicación de la aplicación");  
						}
						 
					}else{
						contadorIntentos = 0 ; 
						imprimirMensaje(mensaje,"Error en la comunicación de la aplicación");						
					}
				}
				//Gardar Log en Tabla 
				
			}
			
			protected function valorUvrDiaTextInput_clickHandler(event:MouseEvent):void
			{
				var fecha:String = fechaAvaluoDateField2.text;
				getUvrDia(fecha);
			}
			protected function selectedConstructor():Boolean
			{
				if(avaluo.tipoInforme == '2')
				{	
					return true;
				}
				else if( nombreSeccion != 'encanbezadoConstructor' )
				{
					return false;		
				}
				else{
					return true;
				}
				return false;
			}	
			
			
			protected function valorTextInput1_focusInHandler(event:Event):void
			{
				if (valorTextInput1.text == null || valorTextInput1.text.length < 1)
				{
					if (valorTextInput1.text == "0")
					{	
						//areaLiquidacionTextInput2.selectionActivePosition .selectionBeginIndex = 0;
						//areaLiquidacionTextInput2.selectionEndIndex = areaLiquidacionTextInput2.text.length;
						//areaLiquidacionTextInput2.setFocus();
						//event.currentTarget.selectAll();
						valorTextInput1.text="";							
					}		
				}
			}
			
			protected function isEnabledCiudadEscritura():Boolean
			{
				var isEnabledCiud=isEnabled;
				if(selectciudadescritura.length < 1)
				{
					isEnabledCiud=false;
				}
				if(cbxDepartamentoEscritura.selectedItem == null){
					isEnabledCiud=false;
				}
				return 	isEnabledCiud;
			}
			
			protected function txtInpCbxDepartamentoBasico(event:TextEvent):void
			{      // if tab key is pressed
				if (event.text.charAt(event.text.length-1) == "\t")
				{       
					// if the text inserted in the combobox is one of the 
					// item in the dataprovider 
					if (cbxDepartamentoBasico.selectedIndex >= 0)
						Alert.show("something selected");
					else   // if the text is not an item in the dataprovider
						Alert.show("nothing selected");
					
				}
			}
			
			protected function cbxCiudadEscritura_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxCiudadEscritura.selectedIndex == spark.components.ComboBox.CUSTOM_SELECTED_ITEM)
				{	
					cbxCiudadEscritura.selectedIndex = event.oldIndex;
				}
			}
			
			//import mx.controls.TextInput;
			import mx.events.ValidationResultEvent;
			import mx.formatters.CurrencyFormatter;
			
			private function formatearMoneda(valor:String):String {
				
				var currencyFormatter:CurrencyFormatter = new CurrencyFormatter();
				var texto:String = valor;								
				try{
					if (valor != null && valor.length > 0)
					{
						if (int(valor) > 0)
						{	
							texto = currencyFormatter.format(valor);							
						}		
					}
				}	
				catch(e:Error)
				{
					trace(e);
				}	
				return texto;	
			}
			
			import mx.events.ValidationResultEvent;
			
			private var vResultTemp:ValidationResultEvent;
			
			// Event handler to validate and format input.
			private function Format():void {
				vResultTemp = fechaAvaluoFiltroVal.validate();
				if (vResultTemp.type == ValidationResultEvent.VALID) {
					fechaAvaluoFiltro.text = dateFormat.format(fechaAvaluoFiltro.text);
				} else {
					fechaAvaluoFiltro.text = "";
				}
			}
			
			protected function getValoresDominioResult78_resultHandler(event:ResultEvent):void
			{
				selectEstadoAvaluo =  getValoresDominioResult78.lastResult ;
			}

			protected function direccionAnexosTextInput_changeHandler(event:FocusEvent):void
			{
				if(convierteDireccionDaneResult3.token == null){
					nombreSeccionDirecccion = "direccionAnexosTextInput"; 
					if(direccionAnexosTextInput.text != null && direccionAnexosTextInput.text.length > 0){
						convierteDireccionDaneResult3.token = tercerosWebService.convierteDireccionDane(direccionAnexosTextInput.text);					
					}
				}else{
					convierteDireccionDaneResult3.token = null ;
					convierteDireccionDaneResult3.lastResult = null ;					
				}
			}
			
			protected function validarOtrasDireccciones(event:FocusEvent):void{
				if(convierteDireccionDaneResult3.token == null){
					nombreSeccionDirecccion = "otrasDireccionesTextInput";
					if(otrasDireccionesTextInput.text != null && otrasDireccionesTextInput.text.length > 0){
						convierteDireccionDaneResult3.token = tercerosWebService.convierteDireccionDane(otrasDireccionesTextInput.text);
					}				
				}else{
					convierteDireccionDaneResult3.token = null ;
					convierteDireccionDaneResult3.lastResult = null ;					
				}
			}

			protected function direccionInmuebleTextInput_focusOutHandler(event:FocusEvent):void
			{
				if(convierteDireccionDaneResult3.token == null){
					nombreSeccionDirecccion = "direccionInmuebleTextInput";
					if(direccionInmuebleTextInput.text != null && direccionInmuebleTextInput.text.length > 0){
						convierteDireccionDaneResult3.token = tercerosWebService.convierteDireccionDane(direccionInmuebleTextInput.text);
					}
				}else{
					convierteDireccionDaneResult3.token = null ;
					convierteDireccionDaneResult3.lastResult = null ;					
				}
			}

			protected function direccionInmuebleTextInput2_focusOutHandler(event:FocusEvent):void
			{
				if(convierteDireccionDaneResult3.token == null){
					nombreSeccionDirecccion = "direccionInmuebleTextInput2";
					if(direccionInmuebleTextInput2.text != null && direccionInmuebleTextInput2.text.length > 0){
						convierteDireccionDaneResult3.token = tercerosWebService.convierteDireccionDane(direccionInmuebleTextInput2.text);
					}
				}else{
					convierteDireccionDaneResult3.token = null ;
					convierteDireccionDaneResult3.lastResult = null ;					
				}
			}

			protected function direccionInmuebleTextInput3_focusOutHandler(event:FocusEvent):void
			{
				if(convierteDireccionDaneResult3.token == null){
					nombreSeccionDirecccion = "direccionInmuebleTextInput3";
					if(direccionInmuebleTextInput3.text != null && direccionInmuebleTextInput3.text.length > 0){
						convierteDireccionDaneResult3.token = tercerosWebService.convierteDireccionDane(direccionInmuebleTextInput3.text);
					}
				}else{
					convierteDireccionDaneResult3.token = null ;
					convierteDireccionDaneResult3.lastResult = null ;					
				}
			}


			protected function convierteDireccionDaneResult3_resultHandler(event:ResultEvent):void
			{
				if(!((convierteDireccionDaneResult3.lastResult != " ") && (convierteDireccionDaneResult3.lastResult))){
					Alert.show("Dirección no válida",null, null, null, null, null, Alert.OK);
				}else{					
					if(nombreSeccionDirecccion == "direccionAnexosTextInput"){
						observaciones.direccionAnexos =  convierteDireccionDaneResult3.lastResult;												
					}else if(nombreSeccionDirecccion == "otrasDireccionesTextInput"){
						observaciones.otrasDirecciones =  convierteDireccionDaneResult3.lastResult;
					}else if(nombreSeccionDirecccion == "direccionInmuebleTextInput"){
						avaluo.direccionInmueble =  convierteDireccionDaneResult3.lastResult;						
					}else if(nombreSeccionDirecccion == "direccionInmuebleTextInput2"){
						avaluo.direccionInmueble =  convierteDireccionDaneResult3.lastResult;
					}else if(nombreSeccionDirecccion == "direccionInmuebleTextInput3"){
						avaluo2.direccionInmueble =  convierteDireccionDaneResult3.lastResult;
					}else {
						Alert.show("Dirección no válida",null, null, null, null, null, Alert.OK);						
					}
				}
				convierteDireccionDaneResult3.token = null ; 
				convierteDireccionDaneResult3.lastResult = null;
			}
			
			
			/**
			 * Se imprime el mensaje por pantalla
			 **/
			protected function imprimirMensaje(mensaje:String, titulo:String):void{
				Alert.show(mensaje,titulo, 4, null, null, null, Alert.OK);
			}
			
			private function alertListener(eventObj:CloseEvent):void {
				// Check to see if the OK button was pressed.
				if (eventObj.detail==Alert.OK) {
					aprobarPostValidar = new Boolean(true);
					btnAprobarAvaluo_clickHandler(null);			
				}
			}
			
			private function limpiarCamposConsulta():void{
				cbxTipoIdentificacion.selectedIndex = -1; 
				numeroIdentificacionTextInput.text = ""; 
				cbxDepartamentoFiltro.selectedIndex = -1; 
				direccionInmuebleTextInput.text = "";
				txtmatriculaInmobiliariaPpal1.text = "";
				txtmatriculaInmobiliariaPpal2.text = "";
				fechaCreacionDesde.text = "";
				fechaCreacionHasta.text = "";
				fechaAvaluoFiltro.text = "";
				fechaAvaluoFiltroHasta.text = "";
				txtNombreTxt.text = "";
				txtNumeroLinea.text = "";
				cbxEstadoAvaluo.selectedIndex = -1; 
			}
			
			protected function limpiarTodosFormularios():void{
				
				registrosEncontrados.text = ""; 
				dtgAvaluos.dataProvider.removeAll();
				avaluo.nombreSolicitante = "";
				avaluo.idTipoIdentificacion = "";
				avaluo.numeroIdentificacion = "";
				avaluo.codigoDaneDepartamento = "";
				
				if(avaluo.ciudad!=null)
					avaluo.ciudad.codDane = "";
				
				avaluo.barrio = "";
				avaluo.direccionInmueble = "";
				avaluo.matriculaInmobiliariaPpal1 = "";
				
				
				
				cbxTipoIdentificacion.selectedIndex = -1;
				cbxDepartamentoFiltro.selectedIndex = -1;
				direccionInmuebleTextInput.text = "";
				numeroIdentificacionTextInput.text = "";
				cbxCiudadFiltro.selectedIndex = -1;
				txtmatriculaInmobiliariaPpal1.text = "";
				txtmatriculaInmobiliariaPpal2.text = "";
				
				fechaCreacionDesde.text = ""; 
				fechaCreacionHasta.text = ""; 
				fechaAvaluoFiltro.text = ""; 
				fechaAvaluoFiltroHasta.text = ""; 
				txtNombreTxt.text = ""; 
				txtNumeroLinea.text = ""; 
				cbxEstadoAvaluo.selectedIndex = -1; 
				
				// los campos de la pstaña 
				if(cbxTipoIdentificacionEncabezado!=null){
					cbxTipoIdentificacionEncabezado.selectedIndex = 0;
				}
				if(cbxDepartamento!= null)
					cbxDepartamento.selectedIndex = -1;
				if(fechaAvaluoDateField != null)
					fechaAvaluoDateField.text = "";
				if(chkTipoInforme != null)
					chkTipoInforme.selected = false;
				if(matriculaInmobiliariaPpal1TextInput2!=null)
					matriculaInmobiliariaPpal1TextInput2.text = "";
				if(txtMatriculaInmobiliariaPpal2Encab!=null)
					txtMatriculaInmobiliariaPpal2Encab.text = "";
				if(direccionInmuebleTextInput2!= null)
					direccionInmuebleTextInput2.text = "";
				if(barrioTextInput!=null)
					barrioTextInput.text = "";
				if(barrioTextInput!=null)
					cbxCiudadEncabezado.selectedIndex = -1;
				if(numeroIdentificacionTextInput2!=null)
					numeroIdentificacionTextInput2.text = "";
				if(cbxTipoIdentificacionEncabezado!=null)
					cbxTipoIdentificacionEncabezado.selectedIndex = 0;
				
				//Limpia el avaluo seleccionado
				avaluo2 = null;
				
				existsAnexo = false;
				existsFachada = false;
				
				if(startImgsAnexo!=null){
					startImgsAnexo.enabled=false;
				}
				
				limpiarControles();
			}


			protected function cbxEstadoConstruccion_focusOutHandler(event:FocusEvent):void
			{
				cbxEstadoConstruccion_changeHandler(null); 
			}

			protected function chbTerminado_changeHandler(event:Event):void
			{
				chbTerminado_clickHandler(null); 
			}


			protected function chbRemodelado_focusInHandler(event:FocusEvent):void
			{
				chbTerminado_clickHandler(null); 
			}


			protected function getValoresTipoDocumento_resultHandler(event:ResultEvent):void
			{
				if(selectTipoConsulta == null || selectTipoConsulta.length < 1){
					selectTipoConsulta = getValoresTipoDocumento.lastResult;
				}
			}
			
			protected function cbxTipoIdentificacion_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectTipoConsulta == null || selectTipoConsulta.length < 1){
					var dominio:DominiosAux = new DominiosAux();
					dominio.rvDomain = "TIPOIDENTIFICACION";
					getValoresTipoDocumento.token = dominiosAuxDao.getValoresDominioProcedatos(dominio);
				}
			}
			
			private function guardarTodoAvaluo(avaluoTmp:Avaluo):void{
				var informacionInmuebleTmp:InformacionInmueble = new InformacionInmueble();
				informacionInmuebleTmp.avaluo = new Avaluo(); 
				informacionInmuebleTmp.avaluo.idAvaluo = avaluoTmp.idAvaluo;
				informacionInmuebleTmp.idInfinmueble = null ;
				informacionInmuebleTmp.fechaCreacion = avaluoTmp.fechaCreacion ; 
				informacionInmuebleTmp.fechaTransaccion = avaluoTmp.fechaTransaccion ; 
				informacionInmuebleTmp.usuarioCreacion = avaluoTmp.usuarioCreacion ; 
				informacionInmuebleTmp.usuarioTransaccion = avaluoTmp.usuarioTransaccion ; 
				inmuebleService.persist(informacionInmuebleTmp) ; 
			}


			protected function getAvaluosAfterPersist_resultHandler(event:ResultEvent):void
			{
				//Se instancian nuevamente todos los objetos
			/**	informacionBarrio = new InformacionBarrio();
				informacionConstruccion = new InformacionConstruccion();
				condicionesSalubridad = new CondicionesSalubridad();
				comportamientoOfertaDemanda = new ComportamientoOfertaDemanda();
				liquidacionAvaluo0 = new LiquidacionAvaluo();
				liquidacionAvaluo1 = new LiquidacionAvaluo();
				liquidacionAvaluo2 = new LiquidacionAvaluo();
				liquidacionAvaluo3 = new LiquidacionAvaluo();
				liquidacionAvaluo4 = new LiquidacionAvaluo();
				liquidacionAvaluo5 = new LiquidacionAvaluo();
				liquidacionAvaluo6 = new LiquidacionAvaluo();
				liquidacionAvaluo7 = new LiquidacionAvaluo();
				liquidacionAvaluo8 = new LiquidacionAvaluo();
				liquidacionAvaluo9 = new LiquidacionAvaluo();
				liquidacionAvaluoTotal = new LiquidacionAvaluoTotal();
				
				avaluo2 = getAvaluosPorIdResult.lastResult as Avaluo;
				guardarTodoAvaluo(avaluo2); 
				
				//19 Nov 2012 Coordenadas Gps
		/**		var coordenadas:String = avaluo2.ubicacionGps;
				
				
				if(coordenadas!=null)
				{
					//var coordenadasArray:Array = coordenadas.split(";");
					var coordenadasArray:Array = coordenadas.split(",");
					//avaluo2.ubicacionGpsTextInput
					try{
						coordenadasLatitud =coordenadasArray[0];
						coordenadasLongitud=coordenadasArray[1];
						
						if(coordenadasLongitud!="" && coordenadasLatitud!="")
						{	
							coordenadasLatitud  = numberFormatter.format(coordenadasLatitud) ;
							coordenadasLongitud = numberFormatter.format(coordenadasLongitud) ;
							avaluo2.ubicacionGps = coordenadasLatitud+","+coordenadasLongitud;
							ubicacionGpsTextInput.text = avaluo2.ubicacionGps; 
							coordenadasLatitudTextInput.text = coordenadasLatitud; 
							coordenadasLongitudTextInput.text = coordenadasLongitud ; 
						}
						
					}	
					catch(e:Error)
					{
						trace(e);
					}	
				}
				if(aprobar){
					if((avaluo2.informacionInmueble != null) && (avaluo2.informacionInmueble.length > 0)) {
						categoria.rvLowValue = (avaluo2.informacionInmueble[0] as InformacionInmueble).idCategoria;
					}
					else {
						categoria = null;
					}
					if((categoria != null) && (categoria.rvLowValue != null)){
						var ava:Avaluo = new Avaluo();
						ava.idAvaluo = avaluo2.idAvaluo;
						aprobarResult.token = avaluosService.aprobar(ava);
					}
					else {
						Alert.show("Para aprobar el avaluo debe seleccionar una categoria del inmueble.\n\nRecuerde seleccionar la categoria y guardar la sección en información del inmueble.","INFO", null, null, null, null, Alert.OK);
					}
					aprobarResult.token = avaluosService.aprobar(avaluo2);
					aprobar = false;
				}
					
				else {
					//valida si el archivo ya fue enviado
					if(avaluo2.logsGeneraArchivo != null) 						
					{
						if(avaluo2.logsGeneraArchivo.estado!=null)
						{	
							if((avaluo2.logsGeneraArchivo.estado.toUpperCase() == "E") || (avaluo2.logsGeneraArchivo.estado.toUpperCase() == "G"))
							{
								isEnabled = false;
							}
							else if((avaluo2.logsGeneraArchivo.estado.toUpperCase() == "R") || (avaluo2.logsGeneraArchivo.estado.toUpperCase() == "V"))
							{
								isEnabled = true;
								//Mantener Estado Actual
							}
							else
							{
								isEnabled = false;
							}	
							
						}
					}
					
					if(selectCiudadbasico != null && selectCiudadbasico.length == 0){
						selectCiudadbasico.addItem(avaluo2.objCiudad);
					}
					
					if((avaluo2.informacionBarrio != null) && (avaluo2.informacionBarrio.length > 0)) {
						informacionBarrio = avaluo2.informacionBarrio.getItemAt(0) as InformacionBarrio;
					}
					if((avaluo2.informacionInmueble != null) && (avaluo2.informacionInmueble.length > 0)) {
						informacionInmueble2 = avaluo2.informacionInmueble.getItemAt(0) as InformacionInmueble;						
						
						categoria.rvLowValue = informacionInmueble2.idCategoria;
						isBodega = informacionInmueble2.idCategoria == '5'?true:false;
						isLocal = informacionInmueble2.idCategoria == '6'?true:false;
					}
					
					/**/
					//ojo pruebas campos en cero 0
			/**		informacionConstruccion.sala="0";
					informacionConstruccion.banioSocial="0";
					informacionConstruccion.banioPrivado="0";
					informacionConstruccion.banioServicio="0";
					informacionConstruccion.jardin="0";
					informacionConstruccion.comedor="0";
					informacionConstruccion.estarHabitacion="0";
					informacionConstruccion.cocina="0";
					informacionConstruccion.patioInterior="0";
					informacionConstruccion.balcon="0";
					informacionConstruccion.estudio="0";
					informacionConstruccion.numeroHabitaciones="0";
					informacionConstruccion.cuartoServicio="0";
					informacionConstruccion.terraza="0";
					informacionConstruccion.zonaVerdePrivada="0";
					informacionConstruccion.totalGarajes="0";
					informacionConstruccion.usoExclusivo="0";
					informacionConstruccion.sencillo="0";
					informacionConstruccion.deposito="0";
					informacionConstruccion.local="0";
					informacionConstruccion.cubierto="0";
					informacionConstruccion.privado="0";
					informacionConstruccion.doble="0";
					informacionConstruccion.bodega="0";
					informacionConstruccion.descubierto="0";
					informacionConstruccion.bahiaComunal="0";
					informacionConstruccion.servidumbre="0";
					informacionConstruccion.oficina="0";
					
					/**/
		/**			if((avaluo2.informacionConstruccion != null) && (avaluo2.informacionConstruccion.length > 0)) {
						informacionConstruccion = avaluo2.informacionConstruccion.getItemAt(0) as InformacionConstruccion;
					}
					if((avaluo2.condicionSalubridad != null) && (avaluo2.condicionSalubridad.length > 0)) {
						condicionesSalubridad = avaluo2.condicionSalubridad.getItemAt(0) as CondicionesSalubridad;
					}
					if((avaluo2.compOfertaDemanda != null) && (avaluo2.compOfertaDemanda.length > 0)) {
						comportamientoOfertaDemanda = avaluo2.compOfertaDemanda.getItemAt(0) as ComportamientoOfertaDemanda;
					}
					if((avaluo2.observacion != null) && (avaluo2.observacion.length > 0)) {
						observaciones = avaluo2.observacion.getItemAt(0) as Observaciones;
					}
					if((avaluo2.liquidacionTotal != null) && (avaluo2.liquidacionTotal.length > 0)) {
						liquidacionAvaluoTotal = avaluo2.liquidacionTotal.getItemAt(0) as LiquidacionAvaluoTotal;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 0)) {
						liquidacionAvaluo0 = avaluo2.liquidacionAvaluos.getItemAt(0) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 1)) {
						liquidacionAvaluo1 = avaluo2.liquidacionAvaluos.getItemAt(1) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 2)) {
						liquidacionAvaluo2 = avaluo2.liquidacionAvaluos.getItemAt(2) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 3)) {
						liquidacionAvaluo3 = avaluo2.liquidacionAvaluos.getItemAt(3) as LiquidacionAvaluo;	
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 4)) {
						liquidacionAvaluo4 = avaluo2.liquidacionAvaluos.getItemAt(4) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 5)) {
						liquidacionAvaluo5 = avaluo2.liquidacionAvaluos.getItemAt(5) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 6)) {
						liquidacionAvaluo6 = avaluo2.liquidacionAvaluos.getItemAt(6) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 7)) {
						liquidacionAvaluo7 = avaluo2.liquidacionAvaluos.getItemAt(7) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 8)) {
						liquidacionAvaluo8 = avaluo2.liquidacionAvaluos.getItemAt(8) as LiquidacionAvaluo;
					}
					if((avaluo2.liquidacionAvaluos != null) && (avaluo2.liquidacionAvaluos.length > 9)) {
						liquidacionAvaluo9 = avaluo2.liquidacionAvaluos.getItemAt(9) as LiquidacionAvaluo;
					}
					
					// Leonardo Galan 
					// Este cambio esta afectando el proceso
					//24 junio 2016 se agrega llamado para cargar coordenadas al editar
					// ubicacionGpsTextInput_focusOutHandler(null);
					//24 junio 2016 se agrega llamado para cargar coordenadas al editar
					
					vstAvaluo.selectedIndex = 2;
				}***/
			}


			protected function imprimirEnEdicion_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				var avaluoTmp:Avaluo = imprimirEnEdicion.lastResult as Avaluo;
				if(avaluoTmp == null){
					imprimirMensaje("No se encontraron avaluos para imprimir","Error en la impresión del avaluo"); 
					return ; 
				}
				
				if(avaluoTmp.informacionBarrio == null || avaluoTmp.informacionBarrio.length == 0){
					imprimirMensaje("Recuerde que para imprimir en borrador, se requiere tener insertado un campo en la información del barrio","Error en la impresión del avaluo"); 
					return ;
				}
				
				if(avaluoTmp.informacionInmueble == null || avaluoTmp.informacionInmueble.length == 0){
					imprimirMensaje("Recuerde que para imprimir en borrador, se requiere tener insertado un campo en la información del inmueble","Error en la impresión del avaluo"); 
					return ;
				}
				
				if(avaluoTmp.informacionConstruccion == null || avaluoTmp.informacionConstruccion.length == 0){
					imprimirMensaje("Recuerde que para imprimir en borrador, se requiere tener insertado un campo en la información de la construcción","Error en la impresión del avaluo"); 
					return ;
				}
				
				if(avaluoTmp.compOfertaDemanda == null || avaluoTmp.compOfertaDemanda.length == 0){
					imprimirMensaje("Recuerde que para imprimir en borrador, se requiere tener insertado un campo en la información del comportamiento y la demanda","Error en la impresión del avaluo"); 
					return ;
				}
				
				if(avaluoTmp.condicionSalubridad == null || avaluoTmp.condicionSalubridad.length == 0){
					imprimirMensaje("Recuerde que para imprimir en borrador, se requiere tener insertado un campo en la Condicion de Salubridad","Error en la impresión del avaluo"); 
					return ;
				}
				
				if(avaluoTmp.liquidacionAvaluos == null || avaluoTmp.liquidacionAvaluos.length == 0){
					imprimirMensaje("Recuerde que para imprimir en borrador, se requiere tener insertado un campo en la liquidación del avaluos","Error en la impresión del avaluo"); 
					return ;
				}
				
				if(avaluoTmp.observacion == null || avaluoTmp.observacion.length == 0){
					imprimirMensaje("Recuerde que para imprimir en borrador, se requiere tener insertado un campo en la observación del avaluos","Error en la impresión del avaluo"); 
					return ;
				}
				
				var request:URLRequest = new URLRequest();
				if(avaluoTmp.estadoAvaluo == "3")
				{
					request.method = "POST";
					request.url = "ReporteAvaluo/"+avaluoTmp.consecutivoBanco+".pdf";					
				}else {
					imprimirMensaje("El avalúo será impreso como borrador hasta que se encuentre en estado Aprobado","Información");
					request.method = "POST";
					request.url = "ReportServlet?idAvaluo="+avaluoTmp.idAvaluo+"&aprobado=false";
				}
				navigateToURL(request,"_blank");
				
			}
			
			protected function validarImpresionAvaluo(avaluoTmp:Avaluo):Boolean
			{
				if(avaluoTmp == null){
					imprimirMensaje("No se encontraron avaluos para imprimir","Error en la impresión del avaluo"); 
					return false; 
				}
				
				if(avaluoTmp.informacionBarrio == null || avaluoTmp.informacionBarrio.length == 0){
					imprimirMensaje("El avaluo: "+ avaluoTmp.consecutivoBanco + "no se encuentra totalmente diligenciado, por favor inserte un campo en la información del barrio","Error en la impresión del avaluo"); 
					return false;
				}
				
				if(avaluoTmp.informacionInmueble == null || avaluoTmp.informacionInmueble.length == 0){
					imprimirMensaje("El avaluo: "+ avaluoTmp.consecutivoBanco + "no se encuentra totalmente diligenciado, por favor inserte un campo en la información del inmueble","Error en la impresión del avaluo"); 
					return false;
				}
				
				if(avaluoTmp.informacionConstruccion == null || avaluoTmp.informacionConstruccion.length == 0){
					imprimirMensaje("El avaluo: "+ avaluoTmp.consecutivoBanco + "no se encuentra totalmente diligenciado, por favor inserte un  campo en la información de la construcción","Error en la impresión del avaluo"); 
					return false;
				}
				
				if(avaluoTmp.compOfertaDemanda == null || avaluoTmp.compOfertaDemanda.length == 0){
					imprimirMensaje("El avaluo: "+ avaluoTmp.consecutivoBanco + "no se encuentra totalmente diligenciado, por favor inserte un  campo en la información del comportamiento y la demanda","Error en la impresión del avaluo"); 
					return false;
				}
				
				if(avaluoTmp.condicionSalubridad == null || avaluoTmp.condicionSalubridad.length == 0){
					imprimirMensaje("El avaluo: "+ avaluoTmp.consecutivoBanco + "no se encuentra totalmente diligenciado, por favor inserte un  campo en la Condicion de Salubridad","Error en la impresión del avaluo"); 
					return false;
				}
				
				if(avaluoTmp.liquidacionAvaluos == null || avaluoTmp.liquidacionAvaluos.length == 0){
					imprimirMensaje("El avaluo: "+ avaluoTmp.consecutivoBanco + "no se encuentra totalmente diligenciado, por favor inserte un  campo en la liquidación del avaluos","Error en la impresión del avaluo"); 
					return false;
				}
				
				if(avaluoTmp.observacion == null || avaluoTmp.observacion.length == 0){
					imprimirMensaje("El avaluo: "+ avaluoTmp.consecutivoBanco + "no se encuentra totalmente diligenciado, por favor inserte un  campo en la observación del avaluos","Error en la impresión del avaluo"); 
					return false;
				}				
				return true;
				
			}
			
			private function habilitarCamposEdicion(isEnabled:Boolean):void{
				if(idBtnBasico != null)
					idBtnBasico.enabled = isEnabled ;
				if(btnGuardarBarrio != null)
					btnGuardarBarrio.enabled = isEnabled ;
				if(btnGuardarInmueble != null)
					btnGuardarInmueble.enabled = isEnabled ;
				if(btnGuardarConstruccion != null)
					btnGuardarConstruccion.enabled = isEnabled ;
				if(btnGuardarOfertaDemanda != null)
					btnGuardarOfertaDemanda.enabled = isEnabled ;
				if(btnGuardarliquidacion != null)
					btnGuardarliquidacion.enabled = isEnabled ;
				if(btnGuardarObservaciones != null)
					btnGuardarObservaciones.enabled = isEnabled ;
				if(nombreSolicitanteTextInput2!= null)
					nombreSolicitanteTextInput2.enabled = isEnabled ;
				if(cbxIdTipoIdentificacion!= null)
					cbxIdTipoIdentificacion.enabled = isEnabled ;
				if(numeroIdentificacionTextInput3!= null)
					numeroIdentificacionTextInput3.enabled = isEnabled ;
				if(cbxObjetivo!= null)
					cbxObjetivo.enabled = isEnabled ;
				if(direccionInmuebleTextInput3!= null)
					direccionInmuebleTextInput3.enabled = isEnabled ;
				if(barrioTextInput2!= null)
					barrioTextInput2.enabled = isEnabled ;
				if(nombreConjuntoEdificioTextInput!= null)
					nombreConjuntoEdificioTextInput.enabled = isEnabled ;
				if(cbxDepartamentoBasico!= null)
					cbxDepartamentoBasico.enabled = isEnabled ;
				if(cbxSector!= null)
					cbxSector.enabled = isEnabled ;
				if(telefonoSolicitanteTextInput!= null)
					telefonoSolicitanteTextInput.enabled = isEnabled ;
				if(celularSolicitanteTextInput!= null)
					celularSolicitanteTextInput.enabled = isEnabled ;
				if(correoSolicitanteTextInput!= null)
					correoSolicitanteTextInput.enabled = isEnabled ;
				if(cbxMetodologia!= null)
					cbxMetodologia.enabled = isEnabled ;
				if(justificacionTextInput!= null)
					justificacionTextInput.enabled = isEnabled ;
				if(chkAcueductoSector!= null)
					chkAcueductoSector.enabled = isEnabled ;
				if(chkAlcantarilladoSector!= null)
					chkAlcantarilladoSector.enabled = isEnabled ;
				if(chkElectricidadSector!= null)
					chkElectricidadSector.enabled = isEnabled ;
				if(chkGasSector!= null)
					chkGasSector.enabled = isEnabled ;
				if(chkTelefonoSector!= null)
					chkTelefonoSector.enabled = isEnabled ;
				if(viviendaTextInput!= null)
					viviendaTextInput.enabled = isEnabled ;
				if(chkIndustria!= null)
					chkIndustria.enabled = isEnabled ;
				if(comercioTextInput!= null)
					comercioTextInput.enabled = isEnabled ;
				if(otrosUsosTextInput!= null)
					otrosUsosTextInput.enabled = isEnabled ;
				if(cbxEstadoVias!= null)
					cbxEstadoVias.enabled = isEnabled ;
				if(pavimentadaTextInput!= null)
					pavimentadaTextInput.enabled = isEnabled ;
				if(andenesTextInput!= null)
					andenesTextInput.enabled = isEnabled ;
				if(parquesTextInput!= null)
					parquesTextInput.enabled = isEnabled ;
				if(arborizacionTextInput!= null)
					arborizacionTextInput.enabled = isEnabled ;
				if(paraderoTextInput!= null)
					paraderoTextInput.enabled = isEnabled ;
				if(alamedasTextInput!= null)
					alamedasTextInput.enabled = isEnabled ;
				if(alumbradoTextInput!= null)
					alumbradoTextInput.enabled = isEnabled ;
				if(cicloRutasTextInput!= null)
					cicloRutasTextInput.enabled = isEnabled ;
				if(zonasVerdesTextInput!= null)
					zonasVerdesTextInput.enabled = isEnabled ;
				if(cbxEstrato!= null)
					cbxEstrato.enabled = isEnabled ;
				if(cbxLegalidad!= null)
					cbxLegalidad.enabled = isEnabled ;
				if(cbxTopografia!= null)
					cbxTopografia.enabled = isEnabled ;
				if(cbxTransporte!= null)
					cbxTransporte.enabled = isEnabled ;
				if(perspectivasTextInput!= null)
					perspectivasTextInput.enabled = isEnabled ;
				if(cbxTipoVivienda!= null)
					cbxTipoVivienda.enabled = isEnabled ;
				if(cbxUbicacion2!= null)
					cbxUbicacion2.enabled = isEnabled ;
				if(cbxUbiaccionLocal!= null)
					cbxUbiaccionLocal.enabled = isEnabled ;
				if(cbxUso!= null)
					cbxUso.enabled = isEnabled ;
				if(cbxClase!= null)
					cbxClase.enabled = isEnabled ;
				if(cbxCategoria!= null)
					cbxCategoria.enabled = isEnabled ;
				if(cbxConstUsoActual!= null)
					cbxConstUsoActual.enabled = isEnabled ;
				if(notariaTextInput!= null)
					notariaTextInput.enabled = isEnabled ;
				if(numeroEscrituraTextInput!= null)
					numeroEscrituraTextInput.enabled = isEnabled ;
				if(cbxDepartamentoEscritura!= null)
					cbxDepartamentoEscritura.enabled = isEnabled ;
				if(cbxDescLiq0!= null)
					cbxDescLiq0.enabled = isEnabled ;
				if(cbxDescLiq1!= null)
					cbxDescLiq1.enabled = isEnabled ;
				if(cbxDescLiq2!= null)
					cbxDescLiq2.enabled = isEnabled ;
				if(cbxDescLiq3!= null)
					cbxDescLiq3.enabled = isEnabled ;
				if(cbxDescLiq4!= null)
					cbxDescLiq4.enabled = isEnabled ;
				if(cbxDescLiq5!= null)
					cbxDescLiq5.enabled = isEnabled ;
				if(cbxDescLiq6!= null)
					cbxDescLiq6.enabled = isEnabled ;									
				if(cbxDescLiq7!= null)
					cbxDescLiq7.enabled = isEnabled ;
				if(cbxDescLiq8!= null)
					cbxDescLiq8.enabled = isEnabled ;
				if(cbxDescLiq9!= null)
					cbxDescLiq9.enabled = isEnabled ;
				if(descripcionDependenciaTextInput0!= null)
					descripcionDependenciaTextInput0.enabled = isEnabled ;
				if(descripcionDependenciaTextInput1!= null)
					descripcionDependenciaTextInput1.enabled = isEnabled ;
				if(descripcionDependenciaTextInput2!= null)
					descripcionDependenciaTextInput2.enabled = isEnabled ;
				if(descripcionDependenciaTextInput3!= null)
					descripcionDependenciaTextInput3.enabled = isEnabled ;
				if(descripcionDependenciaTextInput4!= null)
					descripcionDependenciaTextInput4.enabled = isEnabled ;
				if(descripcionDependenciaTextInput5!= null)
					descripcionDependenciaTextInput5.enabled = isEnabled ;
				if(descripcionDependenciaTextInput6!= null)
					descripcionDependenciaTextInput6.enabled = isEnabled ;
				if(descripcionDependenciaTextInput7!= null)
					descripcionDependenciaTextInput7.enabled = isEnabled ;
				if(descripcionDependenciaTextInput8!= null)
					descripcionDependenciaTextInput8.enabled = isEnabled ;
				if(areaLiquidacionTextInput0!= null)
					areaLiquidacionTextInput0.enabled = isEnabled ;
				if(areaLiquidacionTextInput1!= null)
					areaLiquidacionTextInput1.enabled = isEnabled ;
				if(areaLiquidacionTextInput2!= null)
					areaLiquidacionTextInput2.enabled = isEnabled ;
				if(areaLiquidacionTextInput3!= null)
					areaLiquidacionTextInput3.enabled = isEnabled ;
				if(areaLiquidacionTextInput4!= null)
					areaLiquidacionTextInput4.enabled = isEnabled ;
				if(areaLiquidacionTextInput5!= null)
					areaLiquidacionTextInput5.enabled = isEnabled ;
				if(areaLiquidacionTextInput6!= null)
					areaLiquidacionTextInput6.enabled = isEnabled ;
				if(areaLiquidacionTextInput7!= null)
					areaLiquidacionTextInput7.enabled = isEnabled ;
				if(areaLiquidacionTextInput8!= null)
					areaLiquidacionTextInput8.enabled = isEnabled ;
				if(areaLiquidacionTextInput9!= null)
					areaLiquidacionTextInput9.enabled = isEnabled ;
				if(valorTextInput0!= null)
					valorTextInput0.enabled = isEnabled ;
				if(valorTextInput1!= null)
					valorTextInput1.enabled = isEnabled ;
				if(valorTextInput2!= null)
					valorTextInput2.enabled = isEnabled ;
				if(valorTextInput3!= null)
					valorTextInput3.enabled = isEnabled ;
				if(valorTextInput4!= null)
					valorTextInput4.enabled = isEnabled ;
				if(valorTextInput5!= null)
					valorTextInput5.enabled = isEnabled ;
				if(valorTextInput6!= null)
					valorTextInput6.enabled = isEnabled ;
				if(valorTextInput7!= null)
					valorTextInput7.enabled = isEnabled ;
				if(valorTextInput8!= null)
					valorTextInput8.enabled = isEnabled ;
				if(valorTextInput9!= null)
					valorTextInput9.enabled = isEnabled ;
				
				if(fechaEscrituraDateField != null){
					fechaEscrituraDateField.enabled = isEnabled;	
				}
				
				inhabilitarCampos(startUploadFachada,isEnabled);
				inhabilitarCampos(startUploadDocAnexos,isEnabled);
				inhabilitarCampos(startImgsAnexo,isEnabled);
				inhabilitarCampos(direccionAnexosTextInput,isEnabled);
				inhabilitarCampos(otrasDireccionesTextInput,isEnabled);
				inhabilitarCampos(observacionAvaluoTextInput,isEnabled);
				inhabilitarCampos(cbxDepartamentoEscritura,isEnabled); 
				inhabilitarCampos(chkAcueductoSector,isEnabled);
				inhabilitarCampos(chkAlcantarilladoSector,isEnabled);
				inhabilitarCampos(chkElectricidadSector,isEnabled);
				inhabilitarCampos(chkGasSector,isEnabled);
				inhabilitarCampos(chkTelefonoSector,isEnabled);
				inhabilitarCampos(viviendaTextInput,isEnabled);
				inhabilitarCampos(chkIndustria,isEnabled);
				inhabilitarCampos(comercioTextInput,isEnabled);
				inhabilitarCampos(otrosUsosTextInput,isEnabled);
				inhabilitarCampos(textoOtrosUsosTextInput,isEnabled);
				inhabilitarCampos(edificacionesIgualesTextInput,isEnabled);
				inhabilitarCampos(cbxEstadoVias,isEnabled);
				inhabilitarCampos(pavimentadaTextInput,isEnabled);
				inhabilitarCampos(andenesTextInput,isEnabled);
				inhabilitarCampos(sardenelesTextInput,isEnabled);
				inhabilitarCampos(parquesTextInput,isEnabled);
				inhabilitarCampos(arborizacionTextInput,isEnabled);
				inhabilitarCampos(paraderoTextInput,isEnabled);
				inhabilitarCampos(alamedasTextInput,isEnabled);
				inhabilitarCampos(cicloRutasTextInput,isEnabled);
				inhabilitarCampos(zonasVerdesTextInput,isEnabled);
				inhabilitarCampos(cbxEstrato,isEnabled);
				inhabilitarCampos(cbxLegalidad,isEnabled);
				inhabilitarCampos(cbxTopografia,isEnabled);
				inhabilitarCampos(cbxTransporte,isEnabled);
				inhabilitarCampos(perspectivasTextInput,isEnabled);
				inhabilitarCampos(cbxTipoVivienda,isEnabled);
				inhabilitarCampos(cbxUbicacion2,isEnabled);
				inhabilitarCampos(cbxUbiaccionLocal,isEnabled);
				inhabilitarCampos(otroUsoInmuebleTextInput,isEnabled);
				inhabilitarCampos(cbxClase,isEnabled);
				inhabilitarCampos(otroClaseTextInput,isEnabled);
				inhabilitarCampos(cbxCategoria,isEnabled);
				inhabilitarCampos(notariaTextInput,isEnabled);
				inhabilitarCampos(numeroEscrituraTextInput,isEnabled);
				inhabilitarCampos(cbxDepartamentoEscritura,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaPpal1TextInput3,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaPpal2TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaGaraje1TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaGaraje2TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaGaraje3TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaGaraje4TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaGaraje5TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaDeposito1TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaGaraje5TextInput,isEnabled);
				inhabilitarCampos(matriculaInmobiliariaDeposito1TextInput,isEnabled);
				inhabilitarCampos(txtMatriculaInmDeposito2,isEnabled);
				inhabilitarCampos(chipTextInput,isEnabled);
				inhabilitarCampos(catastralTextInput,isEnabled);				
				inhabilitarCampos(pisosTextInput,isEnabled);
				inhabilitarCampos(sotanosTextInput,isEnabled);
				inhabilitarCampos(vetustezTextInput,isEnabled);
				inhabilitarCampos(pisoInmuebleTextInput,isEnabled);
				inhabilitarCampos(cbxFuentesHidricas,isEnabled);
				inhabilitarCampos(cbxDistancia,isEnabled);
				inhabilitarCampos(cbxAltura,isEnabled);
				inhabilitarCampos(cbxPisosBodega,isEnabled);
				inhabilitarCampos(cbxEstadoConstruccion,isEnabled);
				inhabilitarCampos(avanceObraTextInput,isEnabled);
				inhabilitarCampos(chbTerminado,isEnabled);
				inhabilitarCampos(chbSinTerminar,isEnabled);
				inhabilitarCampos(chbRemodelado,isEnabled);
				inhabilitarCampos(cbxEstadoConservacion,isEnabled);
				inhabilitarCampos(cbxParapetosCubierta,isEnabled);
				inhabilitarCampos(cbxEstructura,isEnabled);
				inhabilitarCampos(cbxestructuraReforzadaBUA,isEnabled);
				inhabilitarCampos(cbxmaterialConstruccionBUA,isEnabled);
				inhabilitarCampos(cbxdetalleMaterialSFBUA,isEnabled);
				inhabilitarCampos(cbxirregularidadPlantaBUA,isEnabled);
				inhabilitarCampos(cbxirregularidadAlturaBUA,isEnabled);
				inhabilitarCampos(cbxFachada,isEnabled);
				inhabilitarCampos(cbxTipoFachada,isEnabled);
				inhabilitarCampos(cbxCubierta,isEnabled);
				inhabilitarCampos(cbxGolpeteo,isEnabled);
				inhabilitarCampos(cbxdanoPrevioBUA,isEnabled);
				inhabilitarCampos(cbxreparadosBUA,isEnabled);
				inhabilitarCampos(salaTextInput,isEnabled);
				inhabilitarCampos(banioSocialTextInput,isEnabled);
				inhabilitarCampos(banioPrivadoTextInput,isEnabled);
				inhabilitarCampos(banioServicioTextInput,isEnabled);
				inhabilitarCampos(jardinTextInput,isEnabled);
				inhabilitarCampos(comedorTextInput,isEnabled);
				inhabilitarCampos(estarHabitacionTextInput,isEnabled);
				inhabilitarCampos(cocinaTextInput,isEnabled);
				inhabilitarCampos(patioInteriorTextInput,isEnabled);
				inhabilitarCampos(balconTextInput,isEnabled);
				inhabilitarCampos(estudioTextInput,isEnabled);
				inhabilitarCampos(numeroHabitacionesTextInput,isEnabled);
				inhabilitarCampos(cuartoServicioTextInput,isEnabled);
				inhabilitarCampos(terrazaTextInput,isEnabled);
				inhabilitarCampos(zonaVerdePrivadaTextInput,isEnabled);
				inhabilitarCampos(totalGarajesTextInput,isEnabled);
				inhabilitarCampos(usoExclusivoTextInput,isEnabled);
				inhabilitarCampos(sencilloTextInput,isEnabled);
				inhabilitarCampos(depositoTextInput,isEnabled);
				inhabilitarCampos(localTextInput,isEnabled);
				inhabilitarCampos(cubiertoTextInput,isEnabled);
				inhabilitarCampos(privadoTextInput,isEnabled);
				inhabilitarCampos(dobleTextInput,isEnabled);
				inhabilitarCampos(bodegaTextInput,isEnabled);
				inhabilitarCampos(descubiertoTextInput,isEnabled);
				inhabilitarCampos(bahiaComunalTextInput,isEnabled);
				inhabilitarCampos(servidumbreTextInput,isEnabled);
				inhabilitarCampos(oficinaTextInput,isEnabled);
				inhabilitarCampos(cbxVentilacion,isEnabled);
				inhabilitarCampos(cbxIluminacion,isEnabled);
				inhabilitarCampos(cbxReqCondSalubirda,isEnabled);
				inhabilitarCampos(cbxCondSalubridad,isEnabled);
				inhabilitarCampos(cbxArborizacion,isEnabled);
				inhabilitarCampos(cbxParques,isEnabled);
				inhabilitarCampos(cbxZonaVerde,isEnabled);
				inhabilitarCampos(cbxPorAire,isEnabled);
				inhabilitarCampos(cbxBasura,isEnabled);
				inhabilitarCampos(cbxInseguridad,isEnabled);
				inhabilitarCampos(cbxRuido,isEnabled);
				inhabilitarCampos(cbxAguasServidas,isEnabled);
				inhabilitarCampos(impactoNegativoOtrosTextInput,isEnabled);
				inhabilitarCampos(ambientalOtrosTextInput,isEnabled);
				inhabilitarCampos(cbxEstadoPisos,isEnabled);
				inhabilitarCampos(cbxCalidadPisos,isEnabled);
				inhabilitarCampos(cbxEstadoMuros,isEnabled);
				inhabilitarCampos(cbxCalidadMuros,isEnabled);
				inhabilitarCampos(cbxEstadoTecho,isEnabled);
				inhabilitarCampos(cbxCalidadTechos,isEnabled);
				inhabilitarCampos(cbxEstadoMadera,isEnabled);
				inhabilitarCampos(cbxCalidadMadera,isEnabled);
				inhabilitarCampos(cbxEstadoMetal,isEnabled);
				inhabilitarCampos(cbxCalidadMetal,isEnabled);
				inhabilitarCampos(cbxEstadobanos,isEnabled);
				inhabilitarCampos(cbxCalidadBanos,isEnabled);
				inhabilitarCampos(cbxEstadoCocina,isEnabled);
				inhabilitarCampos(cbxCalidadCocina,isEnabled);
				inhabilitarCampos(cbxPorpiedadHorizontal,isEnabled);
				inhabilitarCampos(cbxAguCerrada,isEnabled);
				inhabilitarCampos(cbxUbicacionInmueble,isEnabled);
				inhabilitarCampos(numeroEdificiosTextInput,isEnabled);
				inhabilitarCampos(unidadPorPisoTextInput,isEnabled);
				inhabilitarCampos(totalUnidadesTextInput,isEnabled);
				inhabilitarCampos(chkPorteria,isEnabled);
				inhabilitarCampos(piscinaTextInput,isEnabled);
				inhabilitarCampos(garajeVisitanteTextInput,isEnabled);
				inhabilitarCampos(bombaEyectoraTextInput,isEnabled);
				inhabilitarCampos(zonasVerdesTextInput2,isEnabled);
				inhabilitarCampos(chkCitofono,isEnabled);
				inhabilitarCampos(tanqueAguaTextInput,isEnabled);
				inhabilitarCampos(juegoNinosTextInput,isEnabled);
				inhabilitarCampos(aireAcondicionadoTextInput,isEnabled);
				inhabilitarCampos(gimnasioTextInput,isEnabled);
				inhabilitarCampos(bicicleteroTextInput,isEnabled);
				inhabilitarCampos(clubHouseTextInput,isEnabled);
				inhabilitarCampos(canchaMultipleTextInput,isEnabled);
				inhabilitarCampos(squashTextInput,isEnabled);
				inhabilitarCampos(golfitoTextInput,isEnabled);
				inhabilitarCampos(salonComunalTextInput,isEnabled);
				inhabilitarCampos(plantaTextInput,isEnabled);
				inhabilitarCampos(shutBasurasTextInput,isEnabled);
				inhabilitarCampos(presionTextInput,isEnabled);
				inhabilitarCampos(ascensorTextInput,isEnabled);
				inhabilitarCampos(numeroAscensoresTextInput,isEnabled);
				inhabilitarCampos(otrosDotacionTextInput,isEnabled);
				inhabilitarCampos(otrosDotacion2TextInput,isEnabled);
				inhabilitarCampos(descripcionDependenciaTextInput9,isEnabled);
				inhabilitarCampos(cbxCalificacion,isEnabled);
				inhabilitarCampos(tipoComercializacionTextInput,isEnabled);
				inhabilitarCampos(actualidadEdificadoraTextInput,isEnabled);
				inhabilitarCampos(comportamientoOfertaDemandaTextInput,isEnabled);
				inhabilitarCampos(direccionAnexosTextInput,isEnabled);
				inhabilitarCampos(otrasDireccionesTextInput,isEnabled);
				inhabilitarCampos(observacionAvaluoTextInput,isEnabled);

				
			}


			protected function cbxDepartamentoBasico_focusOutHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub				
				cbxDepartamentoBasico_changeHandler(null);
				if(avaluo2.objCiudad != null){
					cbxCiudadBasico.selectedItem = avaluo2.objCiudad ;  
				}				 
			}


			protected function cbxDepartamentoEscritura_focusOutHandler(event:FocusEvent):void
			{
				cbxDepartamentoEscritura_changeHandler(null);
				if(informacionInmueble2.ciudadEscritura != null){
					selectciudadescritura = cbxDepartamentoEscritura.selectedItem.ciudadesDepto;
					var posicionCiudad:int = getItemIndex(informacionInmueble2.ciudadEscritura,selectciudadescritura,'codAsobancaria');
					if(posicionCiudad >= 0)
						cbxCiudadEscritura.selectedIndex = posicionCiudad ;  
				} 				 
			}


			protected function fechaEscrituraDateField_focusInHandler(event:FocusEvent):void
			{
				fechaEscrituraDateField.setFocus();  
			}
			
			import spark.components.supportClasses.SkinnableComponent; 
			protected function inhabilitarCampos(campo:SkinnableComponent, isEnabled:Boolean):void{
				if(campo != null){
					campo.enabled = isEnabled ;  	
				}				
			}


			protected function cbxPorpiedadHorizontal_focusOutHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub
				nombreSeccion = "Propiedad Horizontal";
				guardarPropiedadHorizontal = true; 
				cbxPorpiedadHorizontal_changeHandler(null);				 
			}


			protected function cbxDepartamento_focusOutHandler(event:FocusEvent):void
			{
				if(cbxDepartamento.selectedItem != null){
					cbxCiudadEncabezado.enabled = true;					
				}else {					 
					cbxCiudadEncabezado.enabled = false;
				}
			}
			
			protected function crearModuloEdicionFormulario(isNuevo:Boolean):void{
				if(isNuevo){
					if(newVBoxAdicion == null){
						newVBoxAdicion = new VBox();
						newVBoxAdicion.label = "ADICIÓN DE AVALUOS";
						newVBoxAdicion.alpha=100; 
						newVBoxAdicion.percentWidth =100;
						newVBoxAdicion.percentHeight=100;		
					}
					
					if(mlAdicion == null){
						mlAdicion = new CustomModuleLoader();
						mlAdicion.url = "com/segurosbolivar/avaluos/modulos/FormularioAvaluosPanels.swf?estado=adicion";
						mlAdicion.applicationDomain=ApplicationDomain.currentDomain;
						mlAdicion.addEventListener(ModuleEvent.READY, parentApplication.modEventHandler);
						mlAdicion.alpha=100;
						mlAdicion.percentWidth=100;
						mlAdicion.percentHeight=100;
					}
										
					mlAdicion.avaluo  = null ;
					newVBoxAdicion.addChild(mlAdicion);
					
					try{					
						parentApplication.tn.getChildIndex(newVBoxAdicion);						
					}catch(e:Error){
						parentApplication.tn.addChild(newVBoxAdicion); 
					}
					
					
				}else{
					if(newVBoxEdicion == null){
						newVBoxEdicion = new VBox();
						newVBoxEdicion.label = "EDICIÓN DE AVALUOS";
						newVBoxEdicion.alpha=100; 
						newVBoxEdicion.percentWidth =100;
						newVBoxEdicion.percentHeight=100;				
					}
					
					if(mlEdicion == null){
						mlEdicion = new CustomModuleLoader();
						mlEdicion.url = "com/segurosbolivar/avaluos/modulos/FormularioAvaluosPanels.swf?estado=edicion";
						
						mlEdicion.applicationDomain=ApplicationDomain.currentDomain;
						mlEdicion.addEventListener(ModuleEvent.READY, parentApplication.modEventHandler);
						mlEdicion.alpha=100;
						mlEdicion.percentWidth=100;
						mlEdicion.percentHeight=100;
					}
					
					mlEdicion.avaluo  = avaluo2 ;
					newVBoxEdicion.addChild(mlEdicion);
					
					try{					
						parentApplication.tn.getChildIndex(newVBoxEdicion);						
					}catch(e:Error){
						parentApplication.tn.addChild(newVBoxEdicion); 
					}
					
				}
			} 
			

		]]>
	</fx:Script>
	<fx:Declarations>
		
		<mx:NumberFormatter id="numberFormatter" 
							decimalSeparatorFrom="."
							decimalSeparatorTo="."
							precision="7" 
							rounding="none"
							useThousandsSeparator="false" 
							useNegativeSign="true"/>
		
		<mx:NumberValidator id="LongitudNumberValidator" property="text"
							source="{coordenadasLongitudTextInput}"					
							minValue="-82.500000" maxValue="-66.00000" domain="real"		
							invalid="Alert.show('El valor de las coordenadas de longitud no es válido debe estar entre -82.500000 y -66.00000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma',null,null,null,null,null, Alert.OK)"
							triggerEvent=""
							/>
		
		<mx:NumberValidator id="LatitudNumberValidator" property="text" 
							source="{coordenadasLatitudTextInput}"
							minValue="-4.400000" maxValue="13.500000" domain="real"
							invalid="Alert.show('El valor de las coordenadas de latitud no es valido debe estar entre -4.400000 y 13.500000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma',null,null,null,null,null, Alert.OK)"
							triggerEvent=""
							/>
		
		<!--
		<mx:NumberValidator id="LongitudNumberValidator" property="text"
		source="{coordenadasLongitudTextInput}"					
		minValue="-82.500000" maxValue="-66.00000" domain="real"
		trigger="{idBtnBasico}" triggerEvent="click"		
		invalid="Alert.show('El valor de las coordenadas de longitud no es válido debe estar entre -82.500000 y -66.00000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma',null,null,null,null,null, Alert.OK);{idBtnBasico.}" 
		/>
		
		<mx:NumberValidator id="LatitudNumberValidator" property="text" 
		source="{coordenadasLatitudTextInput}"
		minValue="-4.400000" maxValue="13.500000" domain="real"
		trigger="{idBtnBasico}" triggerEvent="click"
		invalid="Alert.show('El valor de las coordenadas de latitud no es valido debe estar entre -4.400000 y 13.500000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma',null,null,null,null,null, Alert.OK)" 
		/>
		-->
		<!--
		<mx:NumberValidator id="LongitudNumberValidator" property="text"
		source="{coordenadasLongitudTextInput}"					
		minValue="-82.500000" maxValue="-66.00000" domain="real"
		trigger="{ubicacionGpsTextInput}" triggerEvent="focusOut"		
		invalid="Alert.show('El valor de las coordenadas de longitud no es válido debe estar entre -82.500000 y -66.00000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma');"
		/>
		
		<mx:NumberValidator id="LatitudNumberValidator" property="text" 
		source="{coordenadasLatitudTextInput}"
		minValue="-4.400000" maxValue="13.500000" domain="real"
		trigger="{ubicacionGpsTextInput}" triggerEvent="focusOut"
		invalid="Alert.show('El valor de las coordenadas de latitud no es valido debe estar entre -4.400000 y 13.500000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma');"
		/>
		-->
		<mx:DateFormatter id="formatDateTime" formatString="DD/MM/YYYY" />
		
		<valueObjects:InformacionInmueble id="informacionInmueble">
			<valueObjects:avaluo>
				<valueObjects:Avaluo>
					<valueObjects:ciudad>
						<valueObjects:Ciudad/>
					</valueObjects:ciudad>
				</valueObjects:Avaluo>
			</valueObjects:avaluo>
		</valueObjects:InformacionInmueble>
		<!--<services:AvaluosService id="avaluosService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)"  showBusyCursor="true" />-->
		<!--<services:AvaluosService id="avaluosService" fault="avaluosService_faultHandler(event)"  showBusyCursor="true" />-->
		<services:AvaluosService id="avaluosService" fault="genericService_faultHandler(event,'avaluosService')"  showBusyCursor="true" />		
		<s:CallResponder id="getAvaluosPorCriterioResult" result="getAvaluosPorCriterioResult_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult" result="getValoresDominioResult_resultHandler(event)"/>
		<s:CallResponder id="getValoresTipoDocumento" result="getValoresTipoDocumento_resultHandler(event)"/>
		<!--<services:DominiosAuxDao id="dominiosAuxDao" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail,null, null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:DominiosAuxDao id="dominiosAuxDao" fault="genericService_faultHandler(event,'dominiosAuxDao')" showBusyCursor="true"/>
		
		<valueObjects:Avaluo id="avaluo">
			<!--
			<valueObjects:ciudad>
			<valueObjects:Ciudad/>
			</valueObjects:ciudad>
			-->
		</valueObjects:Avaluo>
		<s:CallResponder id="createResult" result="createResult_resultHandler(event)" />
		<s:CallResponder id="consultaDepartamentosResult" result="consultaDepartamentosResult_resultHandler(event)" />
		<!--<services:DepartamentoService id="departamentoService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail,null, null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:DepartamentoService id="departamentoService" fault="genericService_faultHandler(event,'departamentoService')" showBusyCursor="true"/>
		
		<s:CallResponder id="getMensajeTransaccionResult" result="getMensajeTransaccionResult_resultHandler(event)"/>
		<valueObjects:Avaluo id="avaluo2">
			<valueObjects:objCiudad>
				<valueObjects:Ciudad>
					<valueObjects:departamento>
						<valueObjects:Departamento/>
					</valueObjects:departamento>
				</valueObjects:Ciudad>
			</valueObjects:objCiudad>
		</valueObjects:Avaluo>
		<s:CallResponder id="updateResult" result="updateResult_resultHandler(event)"/>
		<valueObjects:InformacionBarrio id="informacionBarrio"/>
		<!--<services:BarrioService id="barrioService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:BarrioService id="barrioService" fault="genericService_faultHandler(event,'barrioService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult2" result="createResult2_resultHandler(event)"/>
		<valueObjects:InformacionConstruccion id="informacionConstruccion" />
		<valueObjects:CondicionesSalubridad id="condicionesSalubridad"/>
		<!--<services:SalubridadService id="salubridadService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:SalubridadService id="salubridadService" fault="genericService_faultHandler(event,'salubridadService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult3" result="createResult3_resultHandler(event)"/>
		<valueObjects:InformacionInmueble id="informacionInmueble2"/>
		<!--<services:InmuebleService id="inmuebleService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:InmuebleService id="inmuebleService" fault="genericService_faultHandler(event,'inmuebleService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult4" result="createResult4_resultHandler(event)"/>
		<valueObjects:ComportamientoOfertaDemanda id="comportamientoOfertaDemanda"/>
		<!--<services:OfertaDemandaService id="ofertaDemandaService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:OfertaDemandaService id="ofertaDemandaService" fault="genericService_faultHandler(event,'ofertaDemandaService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult5" result="createResult5_resultHandler(event)"/>
		<valueObjects:Observaciones id="observaciones"/>
		<!--<services:ObservacionesService id="observacionesService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:ObservacionesService id="observacionesService" fault="genericService_faultHandler(event,'observacionesService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult6" result="createResult6_resultHandler(event)"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo0"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo1"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo2"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo3"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo4"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo5"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo6"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo7"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo8"/>
		<valueObjects:LiquidacionAvaluo id="liquidacionAvaluo9"/>
		<!--<services:LiquidacionService id="liquidacionService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:LiquidacionService id="liquidacionService" fault="genericService_faultHandler(event,'liquidacionService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult7" />
		<valueObjects:LiquidacionAvaluoTotal id="liquidacionAvaluoTotal"/>
		<!--<services:LiquidacionTotalService id="liquidacionTotalService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:LiquidacionTotalService id="liquidacionTotalService" fault="genericService_faultHandler(event,'liquidacionTotalService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult8" result="createResult8_resultHandler(event)"/>
		<valueObjects:LiquidacionAvaluoTotal id="liquidacionAvaluoTotal2"/>
		<s:CallResponder id="createResult9"/>
		<s:CallResponder id="getValoresDominioResult2" result="getValoresDominioResult2_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult3" result="getValoresDominioResult3_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult4" result="getValoresDominioResult4_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult5" result="getValoresDominioResult5_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult6" result="getValoresDominioResult6_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult7" result="getValoresDominioResult7_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult8" result="getValoresDominioResult8_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult9" result="getValoresDominioResult9_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult10" result="getValoresDominioResult10_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult11" result="getValoresDominioResult11_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult12" result="getValoresDominioResult12_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult13" result="getValoresDominioResult13_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult14" result="getValoresDominioResult14_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult15" result="getValoresDominioResult15_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult16" result="getValoresDominioResult16_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult17" result="getValoresDominioResult17_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult18" result="getValoresDominioResult18_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult19" result="getValoresDominioResult19_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult20" result="getValoresDominioResult20_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult21" result="getValoresDominioResult21_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult22" result="getValoresDominioResult22_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult23" result="getValoresDominioResult23_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult24" result="getValoresDominioResult24_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult25" result="getValoresDominioResult25_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult27" result="getValoresDominioResult27_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult28" result="getValoresDominioResult28_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult29" result="getValoresDominioResult29_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult30" result="getValoresDominioResult30_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult31" result="getValoresDominioResult31_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult32" result="getValoresDominioResult32_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult33" result="getValoresDominioResult33_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult34" result="getValoresDominioResult34_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult35" result="getValoresDominioResult35_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult36" result="getValoresDominioResult36_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult37" result="getValoresDominioResult37_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult38" result="getValoresDominioResult38_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult39" result="getValoresDominioResult39_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult40" result="getValoresDominioResult40_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult41" result="getValoresDominioResult41_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult42" result="getValoresDominioResult42_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult43" result="getValoresDominioResult43_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult44" result="getValoresDominioResult44_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult45" result="getValoresDominioResult45_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult46" result="getValoresDominioResult46_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult47" result="getValoresDominioResult47_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult48" result="getValoresDominioResult48_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult49" result="getValoresDominioResult49_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult50" result="getValoresDominioResult50_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult51" result="getValoresDominioResult51_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult52" result="getValoresDominioResult52_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult53" result="getValoresDominioResult53_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult54" result="getValoresDominioResult54_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult55" result="getValoresDominioResult55_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult56" result="getValoresDominioResult56_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult57" result="getValoresDominioResult57_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult58" result="getValoresDominioResult58_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult59" result="getValoresDominioResult59_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult60" result="getValoresDominioResult60_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult61" result="getValoresDominioResult61_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult62" result="getValoresDominioResult62_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult63" result="getValoresDominioResult63_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult64" result="getValoresDominioResult64_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult65" result="getValoresDominioResult65_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult66" result="getValoresDominioResult66_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult67" result="getValoresDominioResult67_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult68" result="getValoresDominioResult68_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult69" result="getValoresDominioResult69_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult70" result="getValoresDominioResult70_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult71" result="getValoresDominioResult71_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult72" result="getValoresDominioResult72_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult73" result="getValoresDominioResult73_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult74" result="getValoresDominioResult74_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult75" result="getValoresDominioResult75_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult76" result="getValoresDominioResult76_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult77" result="getValoresDominioResult77_resultHandler(event)"/>
		
		<s:CallResponder id="createResult10" result="createResult10_resultHandler(event)"/>
		<!--<services:ConstruccionService id="construccionService" fault="Alert.show('Existen errores, por favor inténtelo de nuevo','Error', null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:ConstruccionService id="construccionService" fault="genericService_faultHandler(event,'construccionService')" showBusyCursor="true"/>
		<s:CallResponder id="aprobarResult" result="aprobarResult_resultHandler(event)"/>
		<s:CallResponder id="convierteDireccionDaneResult3" result="convierteDireccionDaneResult3_resultHandler(event)"/>
		<!--<services:TercerosWebService id="tercerosWebService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail,null, null, null, null, null, Alert.YES)" showBusyCursor="true"/>-->
		<services:TercerosWebService id="tercerosWebService" fault="genericService_faultHandler(event,'tercerosWebService')" showBusyCursor="true"/>
		<s:CallResponder id="createResult11" result="createResult11_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult78" result="getValoresDominioResult78_resultHandler(event)"/>
		<s:CallResponder id="prevalidarResult" result="prevalidarResult_resultHandler(event)"/>
		<s:CallResponder id="getUvrDiaResult" result="getUvrDiaResult_resultHandler(event)"/>
		<s:CallResponder id="pasarANuevoResult" result="pasarANuevoResult_resultHandler(event)"/>
		<s:CallResponder id="getValoresDescLiquidacionResult"/>
		<s:CallResponder id="getValoresDescLiquidacionResult2"/>
		<s:CallResponder id="getValoresDescLiquidacionResult3"/>
		<s:CallResponder id="getAvaluosPorIdResult" result="getAvaluosPorIdResult_resultHandler(event)"/>
		<s:CallResponder id="getAvaluosAfterPersist" result="getAvaluosAfterPersist_resultHandler(event)"/>
		<s:CallResponder id="imprimirEnEdicion" result="imprimirEnEdicion_resultHandler(event)"/>		
		<s:CallResponder id="copiarAvaluoResult" result="copiarAvaluoResult_resultHandler(event)"/>
		<s:CallResponder id="getMensajeTransaccionResult2"/>
		<s:CallResponder id="copiarAvaluoConstructorResult" result="copiarAvaluoConstructorResult_resultHandler(event)"/>
		<!--<s:CallResponder id="campoRequeridoResult"/>-->
		<!--<s:CallResponder id="campoRequeridoDTOResult" result="campoRequeridoDTOResult_resultHandler(event)"/>-->
		<s:CallResponder id="campoRequeridoDTOListResult" result="campoRequeridoDTOListResult_resultHandler(event)"/>
		
		<s:CallResponder id="getValoresDominioResult79" result="getValoresDominioResult79_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult80" result="getValoresDominioResult80_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult81" result="getValoresDominioResult81_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult82" result="getValoresDominioResult82_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult83" result="getValoresDominioResult83_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult84" result="getValoresDominioResult84_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult85" result="getValoresDominioResult85_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult86" result="getValoresDominioResult86_resultHandler(event)"/>
		<!--<s:CallResponder id="getValoresDominioByAbbreviationResult"/>-->
		<s:CallResponder id="getValoresDominioResult87" result="getValoresDominioResult87_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult88" result="getValoresDominioResult88_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult89" result="getValoresDominioResult89_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult90" result="getValoresDominioResult90_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult91" result="getValoresDominioResult91_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult92" result="getValoresDominioResult92_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult93" result="getValoresDominioResult93_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult94" result="getValoresDominioResult94_resultHandler(event)"/>
		<s:CallResponder id="existeConsecutivoResult" result="existeConsecutivoResult_resultHandler(event)"/>
		
		<!--<s:CallResponder id="createResult11"/>-->
		
		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<!--<mx:EmailValidator id="emV" source="{correoSolicitanteTextInput}" property="text"/>-->
		<!--<mx:CurrencyFormatter id="cf" currencySymbol="$" alignSymbol="left" precision="4"/>-->
		
		<mx:DateFormatter id="dateFormat" formatString="day: DD, month: MM, year: YYYY"/>
		<mx:DateValidator id="fechaAvaluoFiltroVal" source="{fechaAvaluoFiltro}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene carácteres no válidos, por favor verifique."
						  wrongDayError="Ingrese un dia del més válido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un més válido, entre 1 y 12."
						  wrongYearError="Ingrese un año válido, entre 0 y 9999."
						  required="false"
						  />
		<mx:DateValidator id="fechaCreacionDesdeVal" source="{fechaCreacionDesde}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene carácteres no válidos, por favor verifique."
						  wrongDayError="Ingrese un dia del més válido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un més válido, entre 1 y 12."
						  wrongYearError="Ingrese un año válido, entre 0 y 9999."
						  required="false"
						  />
		<mx:DateValidator id="fechaCreacionHastaVal" source="{fechaCreacionHasta}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene carácteres no válidos, por favor verifique."
						  wrongDayError="Ingrese un dia del més válido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un més válido, entre 1 y 12."
						  wrongYearError="Ingrese un año válido, entre 0 y 9999."
						  required="false"
						  />
		<mx:DateValidator id="fechaAvaluoFiltroHastaVal" source="{fechaAvaluoFiltroHasta}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene carácteres no válidos, por favor verifique."
						  wrongDayError="Ingrese un dia del més válido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un més válido, entre 1 y 12."
						  wrongYearError="Ingrese un año válido, entre 0 y 9999."
						  required="false"
						  />
		<mx:DateValidator id="fechaAvaluoDateFieldVal" source="{fechaAvaluoDateField}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene carácteres no válidos, por favor verifique."
						  wrongDayError="Ingrese un dia del més válido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un més válido, entre 1 y 12."
						  wrongYearError="Ingrese un año válido, entre 0 y 9999."
						  />
		<mx:DateValidator id="fechaAvaluoDateField2Val" source="{fechaAvaluoDateField2}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene carácteres no válidos, por favor verifique."
						  wrongDayError="Ingrese un dia del més válido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un més válido, entre 1 y 12."
						  wrongYearError="Ingrese un año válido, entre 0 y 9999."
						  />
		<mx:DateValidator id="fechaEscrituraDateFieldVal" source="{fechaEscrituraDateField}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene carácteres no válidos, por favor verifique."
						  wrongDayError="Ingrese un dia del més válido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un més válido, entre 1 y 12."
						  wrongYearError="Ingrese un año válido, entre 0 y 9999."
						  />
		
	</fx:Declarations>
	
	<fx:Style source="assets/css/AvaluosBolivar.css"/>
	<fx:Style source="assets/css/AvaluosBolivarPanel.css"/>
	
	<fx:Style>
		
	</fx:Style>
	
	<!--	<file:FileUploadAnexos id="fileUploadFachada" creationComplete="fileUploadAnexos.init(uploadProgressFachada, cancelUploadFachada,this);"/>-->
	<!--<file:FileDownload id="fileDownload" creationComplete="fileDownload.init(downloadProgress, cancelDownload);"  />-->
	<mx:ViewStack x="7" y="3" id="vstAvaluo" width="853" height="749">
		<!-- ########################################### CONSULTA DE AVALUOS ###########################################-->
		<s:NavigatorContent width="100%" height="100%" id="vstAvaluoConsulta">
			<mx:Form x="96" y="23" height="285">
				<mx:VBox height="253">
					<mx:HBox>
						<s:Label text="Tipo de identificación" width="120"/>
						<s:ComboBox id="cbxTipoIdentificacion" dataProvider="{selectTipoConsulta}" creationComplete="cbxTipoIdentificacion_creationCompleteHandler(event)" labelField="rvMeaning" width="150" tabIndex="1"/>
						<s:Label text="Número de Identificación" width="140"/>
						<s:TextInput id="numeroIdentificacionTextInput" text="{informacionInmueble.avaluo.numeroIdentificacion}" restrict="0-9" maxChars="10" width="146" tabIndex="2"/>
					</mx:HBox>
					<mx:HBox>
						<s:Label text="Departamento" width="120"/>
						<s:ComboBox id="cbxDepartamentoFiltro" dataProvider="{selectDepartamento}" creationComplete="cbxDepartamento_creationCompleteHandler(event)" labelField="departamento" change="cbxFiltro_changeHandler(event)" width="150" color="#000000" tabIndex="3" />
						<s:Label text="Ciudad" width="140"/>
						<s:ComboBox id="cbxCiudadFiltro" dataProvider="{selectCiudadfiltro}" labelField="ciudad" enabled="false" color="#000000" tabIndex="4">
							<!--<s:AsyncListView id="alvCiudadFiltro" list="{consultaDepartamentosResult.lastResult}"/>-->
						</s:ComboBox>
					</mx:HBox>
					<mx:HBox>
						<s:Label text="Dirección" width="120"/>
						<s:TextInput id="direccionInmuebleTextInput" text="{informacionInmueble.avaluo.direccionInmueble}" restrict="{restrict_}" maxChars="100" width="150" tabIndex="5" focusOut="direccionInmuebleTextInput_focusOutHandler(event)"/>
						<s:Label text="Matricula Inmobliaria" width="140"/>
						<s:TextInput id="txtmatriculaInmobiliariaPpal1" text="{informacionInmueble.matriculaInmobiliariaPpal1}" width="35" maxChars="4" restrict="0-9,a-z,A-Z" tabIndex="6"/>
						<s:Label text="_" />
						<s:TextInput id="txtmatriculaInmobiliariaPpal2" x="241" y="2" maxChars="9" width="86" restrict="0-9,a-z,A-Z" />
					</mx:HBox>
					<mx:HBox>
						<s:Label text="Fecha Cargue Desde" width="120"/>
						<mx:DateField id="fechaCreacionDesde" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaCreacionDesde)" yearNavigationEnabled="true" editable="true" width="150" tabIndex="8"/>
						<s:Label text="Fecha Cargue Hasta" width="140"/>
						<mx:DateField id="fechaCreacionHasta" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaCreacionHasta)" yearNavigationEnabled="true" editable="true" width="150" tabIndex="9"/>
					</mx:HBox>
					<mx:HBox width="666">
						<s:Label text="Fecha Avaluo Desde" width="119"/>
						<mx:DateField id="fechaAvaluoFiltro" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaAvaluoFiltro)" yearNavigationEnabled="true" editable="true" width="150" tabIndex="10"/>
						<s:Label text="Fecha Avaluo Hasta" width="142"/>
						<mx:DateField id="fechaAvaluoFiltroHasta" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaAvaluoFiltroHasta)" yearNavigationEnabled="true" editable="true" width="150" tabIndex="11"/>
					</mx:HBox>
					<mx:HBox>
						<s:Label text="Nombre Txt" width="120"/>
						<s:TextInput id="txtNombreTxt" width="150" change="txtNombreTxt_changeHandler(event)" maxChars="30" tabIndex="12"/>
						<s:Label text="Número Línea" width="140"/>
						<s:TextInput id="txtNumeroLinea" width="32" restrict="0-9" tabIndex="13"/>
					</mx:HBox>
					<mx:HBox>
						<s:Label text="Constructor?"  width="123"/>
						<s:CheckBox id="chkConstructorFiltro"/>
						
					</mx:HBox>
					<mx:HBox>
						<s:Label text="Estado Avaluo" width="120" visible="{isEnabled}"/>
						<s:ComboBox id="cbxEstadoAvaluo" dataProvider="{selectEstadoAvaluo}" width="150" creationComplete="cbxEstadoAvaluo_creationCompleteHandler(event)" labelField="rvMeaning" visible="{isEnabled}" tabIndex="14" />
						<!--<s:Label text="Fecha Avaluo" width="140"/>-->
						<!--<mx:DateField id="fechaAvaluoFiltro" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaAvaluoFiltro)" yearNavigationEnabled="true" editable="true" width="146"/>-->
					</mx:HBox>
					<mx:HBox width="666">
						<s:Label text="Identificación Perito" width="120" visible="{!isEnabled}"/>
						<s:TextInput id="txtIdentificacionPerito" width="105" maxChars="30" visible="{!isEnabled}" change="txtIdentificacionPerito_changeHandler(event)" tabIndex="15"/>
						<s:Button label="..." width="37" id="btnExaminar" click="btnExaminar_clickHandler(event)" visible="{!isEnabled}" tabIndex="16"/>
						<s:Label id="lblNombrePerito" text="Nombre Perito" width="140" visible="false" enabled="false" color="#B9B7B7" />
						<s:Label id="txtNombrePerito" width="220" visible="false" enabled="false" color="#B9B7B7"/>
					</mx:HBox>
				</mx:VBox>
			</mx:Form>
			<s:Label id="registrosEncontrados" width="100%" visible="false" x="11" y="285" fontWeight="bold" verticalAlign="middle" textAlign="center"/>
			<mx:DataGrid x="10" y="322" width="100%" height="247" id="dtgAvaluos" dataProvider="{getAvaluosPorCriterioResult.lastResult}" horizontalScrollPolicy="auto" tabIndex="17">
				<mx:columns>
					<mx:DataGridColumn dataField="consecutivoBanco" headerText="Consecutivo" sortable="true"/>
					<mx:DataGridColumn headerText="Tipo Id" dataField="dominioTipoIdentificacion.rvMeaning" sortable="true"/>
					<mx:DataGridColumn headerText="Número ID" dataField="numeroIdentificacion" sortable="true"/>
					<mx:DataGridColumn dataField="fechaAvaluo" headerText="Fecha Avaluo" sortable="true" labelFunction="labelFechaAvaluo"/>
					<mx:DataGridColumn headerText="Nombre Solicitante" dataField="nombreSolicitante" sortable="true"/>
					<mx:DataGridColumn headerText="Departamento" dataField="objCiudad.departamento.departamento" sortable="true"/>
					<mx:DataGridColumn headerText="Ciudad" dataField="objCiudad.ciudad" sortable="true"/>
					<mx:DataGridColumn headerText="Dirección" dataField="direccionInmueble" sortable="true"/>
					<mx:DataGridColumn headerText="Matrícula Inmobiliaria" dataField="matriculaInmobiliariaPpal1" sortable="true"/>
					<mx:DataGridColumn headerText="Estado" dataField="estadoAvaluo" labelFunction="labelEstado" sortable="true"/>
					<mx:DataGridColumn headerText="Transmitido" dataField="logsGeneraArchivo.estado" labelFunction="labelTransmitido" sortable="false"/>
					<mx:DataGridColumn headerText="Archivo zip" dataField="logsGeneraArchivo.nombreArchivo" sortable="false"/>
					<mx:DataGridColumn headerText="Nombre txt" dataField="logsGeneraArchivo.nombrePlano" sortable="false"/>
					<mx:DataGridColumn headerText="Línea" dataField="numLinea" sortable="false"/>
					<mx:DataGridColumn headerText="Fecha Creación" dataField="fechaCreacion"  labelFunction="labelFechaCreacion"/>
				</mx:columns>
			</mx:DataGrid>
			<s:Button x="10" y="593" label="Aprobar Avalúo" id="btnAprobarAvaluo" click="btnAprobarAvaluo_clickHandler(event)" enabled="{isValidAprobador}" tabIndex="18"/>
			<s:Button x="231" y="593" label="Cambiar estado a nuevo" click="button10_clickHandler(event)" enabled="{isValidAprobador||isValidAdministrador}" tabIndex="20"/>
			
			<s:Button x="387" y="593" label="Replicar Avalúo" enabled="{isValidAprobadorHijo}" click="button11_clickHandler(event)" tabIndex="21"/>
			<!--<s:Button x="509" y="594" label="Transcribir Individual"  enabled="{isValidAprobador}" click="button13_clickHandler(event)" tabIndex="22"/>-->
			<s:Button x="509" y="594" label="Transcribir Individual"  enabled="{isValidAprobadorHijo}" click="button13_clickHandler(event)" tabIndex="22"/>
			<s:Button x="118" y="593" label="Copia Seguridad" click="button14_clickHandler(event)" tabIndex="19"/>
			<mx:ProgressBar id="pb" label="" mode="manual"  x="120" y="617" width="106" height="29" visible="false"/>
			<s:Button x="664" y="592" label="Creacion Multiple Constructor" enabled="{isValidAprobador}" click="multiConstructor_clickHandler(event)" tabIndex="23"/>
			<s:Button x="12" y="628" label="Aprobar e imprimir Avalúo" id="btnAprobarAvaluo0" click="btnAprobarAvaluo0_clickHandler(event)" enabled="{isValidAprobador}" tabIndex="24"/>
			
		</s:NavigatorContent>
		<!-- ########################################### FIN CONSULTA DE AVALUOS ###########################################-->
		
		<!-- ########################################### ENCABEZADO AVALUO ###########################################-->
		<s:NavigatorContent label="" width="100%" height="100%" id="vstAvaluoEncabezado">
			<s:Panel width="100%" dropShadowVisible="false" height="454" y="14" x="2" id="panel">
				<s:Label x="10" y="6" text="Información Inicial." fontWeight="bold" width="100%" textAlign="center"/>
				<mx:Form id="formEncabezado" defaultButton="{btnGuardarEncabezado}" x="188" y="35" width="430" height="376">
					<mx:FormItem label="Nombre Solicitante">
						<s:TextInput id="nombreSolicitanteTextInput" text="{avaluo.nombreSolicitante}" width="256" restrict="{restrict_}" maxChars="60" tabIndex="1"/>
					</mx:FormItem>
					<mx:FormItem label="Tipo Identificación">
						<s:ComboBox id="cbxTipoIdentificacionEncabezado" dataProvider="{selectTipoId}" creationComplete="comboBox_creationCompleteHandler(event)" labelField="rvMeaning" selectedItem="{getValoresDominioResult.lastResult[1]}" width="70" tabIndex="2" />
					</mx:FormItem>
					<mx:FormItem label="Número Identificación">
						<s:TextInput id="numeroIdentificacionTextInput2" text="{avaluo.numeroIdentificacion}" width="256" restrict ="0-9" maxChars="10" tabIndex="3"/>
					</mx:FormItem>
					<mx:FormItem label="Fecha Avaluo">
						<mx:DateField id="fechaAvaluoDateField" selectedDate="{avaluo.fechaAvaluo}" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaAvaluoDateField)" yearNavigationEnabled="true" tabIndex="4" editable="true"/>
					</mx:FormItem>
					<mx:FormItem label="Departamento">						
						<s:ComboBox id="cbxDepartamento" dataProvider="{selectDepartamento}" creationComplete="cbxDepartamento_creationCompleteHandler(event)" labelField="departamento" change="comboBox_changeHandler(event)" 
									selectedIndex="{getItemIndex(avaluo.objCiudad.departamento.codAsobancaria,selectDepartamento,'codAsobancaria')}" tabIndex="5" focusOut="cbxDepartamento_focusOutHandler(event)" />
					</mx:FormItem>
					<mx:FormItem label="Ciudad">
						<s:ComboBox id="cbxCiudadEncabezado" labelField="ciudad" enabled="false"
									selectedIndex="{getItemIndex(avaluo.objCiudad.codAsobancaria,selectCiudadbasico,'codAsobancaria')}"
									dataProvider="{selectCiudadbasico}" 
									tabIndex="6">
							<!--dataProvider="{selectCiudadbasico}"--> 
							<!--<s:AsyncListView id="alvCiudad" list="{consultaDepartamentosResult.lastResult}"/>-->
						</s:ComboBox>
					</mx:FormItem>
					<mx:FormItem label="Barrio">
						<s:TextInput id="barrioTextInput" text="{avaluo.barrio}" width="256" restrict="{restrict_}" maxChars="30"  tabIndex="7"/>
					</mx:FormItem>
					<mx:FormItem label="Dirección Inmueble">
						<s:TextInput id="direccionInmuebleTextInput2" text="{avaluo.direccionInmueble}" width="256" restrict="{restrict_}" maxChars="100" tabIndex="8" focusOut="direccionInmuebleTextInput2_focusOutHandler(event)"/>
					</mx:FormItem>
					<mx:FormItem label="Matrícula Inmobiliaria" direction="horizontal">
						<!--<s:TextInput id="matriculaInmobiliariaPpal1TextInput2" text="{avaluo.matriculaInmobiliariaPpal1}" width="40" maxChars="4" restrict="0-9,a-z,A-Z"/>-->
						<s:TextInput id="matriculaInmobiliariaPpal1TextInput2" text="{TmpmatriculaInmobiliariaPpal1}" width="40" maxChars="4" restrict="0-9,a-z,A-Z" tabIndex="9"/>						
						<s:Label text="_"/>
						<!--<s:TextInput id="txtMatriculaInmobiliariaPpal2Encab" maxChars="9" restrict="0-9,a-z,A-Z" width="100"/>-->
						<s:TextInput id="txtMatriculaInmobiliariaPpal2Encab" text="{TmpmatriculaInmobiliariaPpal2}" maxChars="9" restrict="0-9,a-z,A-Z" width="100" tabIndex="10"/>						
					</mx:FormItem>
					<!--
					<mx:FormItem label="Tipo Avaluo">
					<s:ComboBox id="cbxTipoInforme" width="251"  selectedIndex="{nombreSeccion != 'encanbezadoConstructor'?0:1}" tabIndex="11">
					<mx:ArrayList>
					<fx:String>Individual</fx:String>
					<fx:String>Constructor</fx:String>
					</mx:ArrayList>
					</s:ComboBox>
					</mx:FormItem>
					-->
					<mx:FormItem label="Proyecto Constructor" width="384">
						<s:CheckBox id="chkTipoInforme" label="Seleccione" selected="{selectedConstructor()}"/>
					</mx:FormItem>
					<s:HGroup width="278" height="27">
						<s:Button visible="{(nombreSeccion=='encanbezadoConstructor')}" id="btnGuardarEncabezadoCon" label="Transcribir Avaluo" click="button12_clickHandler(event)" tabIndex="12"/>
						<s:Button visible="{(nombreSeccion=='encanbezado')}" label="Crear" id="btnGuardarEncabezado" click="btnGuardarEncabezado_clickHandler(event)" tabIndex="13"/>
						<s:Button id="idCancelEncabezado" label="Cancelar" click="cancelNuevoAvaluo_clickHandler(event)" tabIndex="14"/>
					</s:HGroup>
					
				</mx:Form>
			</s:Panel>
		</s:NavigatorContent>
		<!-- ########################################### FIN ENCABEZADO AVALUO ###########################################-->
		
		<!-- ########################################### CREACION AVALUO (ACORDEON) ###########################################-->
		<s:NavigatorContent label="" width="100%" height="100%" id="vstAvaluosCrear">
			
			
			<mx:Accordion x="7.7" y="16.35" width="835" height="727" id="acdAvaluo">
				
				<!-- ########################################### INFO BASICA ###########################################-->
				<s:NavigatorContent label="Información Básica" width="100%" height="100%" id="acdAvaluoBasico" tabIndex="0">
					<mx:Form defaultButton="{idBtnBasico}" x="0.3" y="13.65" width="843" height="388">
						
						<mx:VBox width="100%" height="346">
							<mx:HBox>
								<mx:VBox>
									<s:Label text="Nombre Solicitante"/>
									<s:TextInput id="nombreSolicitanteTextInput2" text="{avaluo2.nombreSolicitante}" width="231" restrict="{restrict_}" maxChars="60" enabled="{isEnabled}" tabIndex="1"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="ID"/>
									<s:ComboBox id="cbxIdTipoIdentificacion" dataProvider="{selectTipoId}" labelField="rvMeaning" selectedIndex="{getItemIndex(avaluo2.dominioTipoIdentificacion.rvMeaning,selectTipoId,'rvMeaning')}" width="70" enabled="{isEnabled}" tabIndex="2"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Número Identificación"/>									
									<!--<s:TextInput id="numeroIdentificacionTextInput3" text="{avaluo2.numeroIdentificacion}" width="124" restrict ="0-9" maxChars="10" enabled="{isEnabled}" focusIn="numeroIdentificacionTextInput3_focusInHandler(event)"  change="numeroIdentificacionTextInput3_changegHandler(event)" focusOut="numeroIdentificacionTextInput3_focusOutHandler(event)" tabIndex="3"/>-->
									<s:TextInput id="numeroIdentificacionTextInput3" text="{avaluo2.numeroIdentificacion}" width="124" restrict ="0-9" maxChars="10" enabled="false" focusIn="numeroIdentificacionTextInput3_focusInHandler(event)"  change="numeroIdentificacionTextInput3_changegHandler(event)" focusOut="numeroIdentificacionTextInput3_focusOutHandler(event)" tabIndex="3"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Entidad"/>
									<s:TextInput id="nombreBancoTextInput" text="DAVIVIENDA" enabled="false" width="86" tabIndex="4"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Fecha Avaluo"/>
									<mx:DateField id="fechaAvaluoDateField2" selectedDate="{avaluo2.fechaAvaluo}" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaAvaluoDateField2)" enabled="false" yearNavigationEnabled="true"  change="fechaAvaluoDateField2_changeHandler(event)" tabIndex="5" editable="true"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Consecutivo Banco"/>
									<s:TextInput id="consecutivoBancoTextInput" text="{avaluo2.consecutivoBanco}" enabled="false" width="151" tabIndex="6"/>
								</mx:VBox>
							</mx:HBox>
							<mx:HBox width="100%">
								<mx:VBox>
									<s:Label text="Objetivo"/>
									<s:ComboBox id="cbxObjetivo" creationComplete="cbxObjetivo_creationCompleteHandler(event)" dataProvider="{selectObjeto}" labelField="rvMeaning" selectedIndex="{getItemIndex(avaluo2.idObjetoAvaluo,selectObjeto,'rvLowValue')}" width="135" enabled="{isEnabled}" tabIndex="7"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Dirección Inmueble"/>
									<s:TextInput id="direccionInmuebleTextInput3" text="{avaluo2.direccionInmueble}" width="337" restrict="{restrict_}" maxChars="100" enabled="{isEnabled}" tabIndex="8" focusOut="direccionInmuebleTextInput3_focusOutHandler(event)"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Barrio"/>
									<s:TextInput id="barrioTextInput2" text="{avaluo2.barrio}" restrict="{restrict_}" maxChars="30" enabled="{isEnabled}" tabIndex="9"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Nombre Conjunto o Edificio"/>
									<s:TextInput id="nombreConjuntoEdificioTextInput" text="{avaluo2.nombreConjuntoEdificio}" width="176" restrict="{restrict_}" maxChars="30" enabled="{isEnabled}" tabIndex="10"/>
								</mx:VBox> 
							</mx:HBox>
							<mx:HBox>
								<mx:VBox>
									<s:Label text="Departamento"/>
									<s:ComboBox id="cbxDepartamentoBasico" dataProvider="{selectDepartamento}" labelField="departamento" selectedIndex="{getItemIndex(avaluo2.objCiudad.departamento.codAsobancaria,selectDepartamento,'codAsobancaria')}" change="cbxDepartamentoBasico_changeHandler(event)"  creationComplete="cbxDepartamento_creationCompleteHandler(event)" width="176" enabled="{isEnabled}" tabIndex="11" focusOut="cbxDepartamentoBasico_focusOutHandler(event)"/>
									<!--
									<s:ComboBox id="cbxDepartamentoBasico" textInput="txtInpCbxDepartamentoBasico(event)" dataProvider="{selectDepartamento}" labelField="departamento" selectedIndex="{getItemIndex(avaluo2.objCiudad.departamento.codAsobancaria,selectDepartamento,'codAsobancaria')}" change="cbxDepartamentoBasico_changeHandler(event)"  creationComplete="cbxDepartamento_creationCompleteHandler(event)" width="176" enabled="{isEnabled}" tabIndex="11">
									<fx:Script>
									<![CDATA[
									]]>
									</fx:Script>
									</s:ComboBox>
									-->	
									<!--<mx:ComboBox id="cbxDepartamentoBasico" dataProvider="{selectDepartamento}" labelField="departamento" selectedIndex="{getItemIndex(avaluo2.objCiudad.departamento.codAsobancaria,selectDepartamento,'codAsobancaria')}" change="cbxDepartamentoBasico_changeHandler(event)"  creationComplete="cbxDepartamento_creationCompleteHandler(event)" width="176" enabled="{isEnabled}" tabIndex="11"/>-->
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Código"/>
									<s:TextInput id="txiCodDaneDepto" text="{avaluo2.objCiudad.departamento.codDane}" enabled="false" width="45" tabIndex="12"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Ciudad"/>
									<s:ComboBox id="cbxCiudadBasico" labelField="ciudad" dataProvider="{selectCiudadbasico}" selectedIndex="{getItemIndex(avaluo2.objCiudad.codAsobancaria,selectCiudadbasico,'codAsobancaria')}" width="197" change="cbxCiudadBasico_changeHandler(event)" tabIndex="13"/>
									<!--<mx:ComboBox id="cbxCiudadBasico" labelField="ciudad" dataProvider="{selectCiudadbasico}" selectedIndex="{getItemIndex(avaluo2.objCiudad.codAsobancaria,selectCiudadbasico,'codAsobancaria')}" enabled="false" width="197" change="cbxCiudadBasico_changeHandler(event)" tabIndex="13"/>-->
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Código"/>
									<s:TextInput id="txiCodDaneCiudad" text="{avaluo2.objCiudad.codDane}" enabled="false" width="58" tabIndex="14"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Sector"/>
									<s:ComboBox id="cbxSector" creationComplete="cbxSector_creationCompleteHandler(event)" labelField="rvMeaning" dataProvider="{selectSector}" selectedIndex="{getItemIndex(avaluo2.sector,selectSector,'rvLowValue')}" width="96" enabled="{isEnabled}" tabIndex="14"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Coordenadas"/>
									<s:TextInput id="ubicacionGpsTextInput" focusOut="ubicacionGpsTextInput_focusOutHandler(event)" text="{avaluo2.ubicacionGps}" width="84" restrict="{restrict_}" maxChars="30" tabIndex="16"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Tel. Fijo"/>
									<s:TextInput id="telefonoSolicitanteTextInput" text="{avaluo2.telefonoSolicitante}" width="96" restrict="0-9" maxChars="10" enabled="{isEnabled}" tabIndex="17"/>
								</mx:VBox>
							</mx:HBox>
							<mx:HBox width="100%">
								<mx:VBox>
									<s:Label text="Tel. Celular"/>
									<s:TextInput id="celularSolicitanteTextInput" text="{avaluo2.celularSolicitante}" width="93" restrict="0-9" maxChars="10"  enabled="{isEnabled}" tabIndex="18"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="E- Mail"/>
									<s:TextInput id="correoSolicitanteTextInput" text="{avaluo2.correoSolicitante}" width="159" restrict="{restrict_}" maxChars="60" enabled="{isEnabled}" tabIndex="19"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Metodología"/>
									<s:ComboBox id="cbxMetodologia" dataProvider="{selectMetodologia}" labelField="rvMeaning" selectedIndex="{getItemIndex(avaluo2.idMetodologia,selectMetodologia,'rvLowValue')}" creationComplete="cbxMetodologia_creationCompleteHandler(event)" width="211" enabled="{isEnabled}" tabIndex="20"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Justificación de la Metodología"/>
									<s:TextInput id="justificacionTextInput" text="{avaluo2.justificacion}" width="313" restrict="{restrict_}" enabled="{isEnabled}" maxChars="500" tabIndex="21"/>
								</mx:VBox>
							</mx:HBox>
							<mx:HBox width="100%">
								<mx:VBox width="96">
									<s:Label text="Latitud" width="90"/>
									<comp:NumberInput id="coordenadasLatitudTextInput" text="{coordenadasLatitud}" width="90" maxChars="12" allowNegative="true" fractionalDigits="7" visible="true" enabled="false"/>
								</mx:VBox>
								<mx:VBox>
									<s:Label text="Longitud" width="90"/>
									<comp:NumberInput id="coordenadasLongitudTextInput" text="{coordenadasLongitud}" width="90" maxChars="12" allowNegative="true" fractionalDigits="7" visible="true" enabled="false" tabIndex="23"/>
								</mx:VBox>
								<!--
								<mx:VBox height="100%">
								<s:Label text="LatitSFBUA"/>
								<s:TextInput id="latitudBUATextInput" text="{avaluo2.latitudSFBUA}"/>
								</mx:VBox>
								<mx:VBox height="100%">
								<s:Label text="LongitudSFUA"/>
								<s:TextInput id="longitudBUATextInput" text="{avaluo2.longitudSFBUA}"/>
								</mx:VBox>
								-->
								<mx:VBox height="100%">
									<s:Label text="Otro Sist de Coord."/>
									<s:TextInput id="sisCoordBUATxtTextInput" maxChars="20" text="{avaluo2.sistemaCoordenadasTxtBUA}" tabIndex="25"/>
								</mx:VBox>
								<mx:VBox height="100%" visible="false">
									<s:Label text="Sistema de Coordenadas"/>
									<s:TextInput id="sisCoordBUATextInput" text="{avaluo2.sistemaCoordenadasBUA}" enabled="false" tabIndex="24"/>
								</mx:VBox>
							</mx:HBox>
							<mx:HBox>
								<s:Button id="idBtnBasico" label="Guardar Sección" click="idBtnBasico_clickHandler(event)" enabled="{isEnabled}" tabIndex="26"/>
								<s:Button id="idCancelarBasicos" label="Cancelar" click="cancelSeccion_clickHandler(event)"  tabIndex="27"/>
								<!--<s:Button label="Button" click="button15_clickHandler(event)"/>
								<s:Button label="Button" click="button16_clickHandler(event)"/>-->
							</mx:HBox>
							<mx:HRule width="100%"/>
							<s:BorderContainer width="254" height="40">
								<mx:VBox horizontalCenter="-194" verticalCenter="-82">
									<mx:HBox>
										<s:Label text="Usuario Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
										<s:TextInput enabled="false" text="{avaluo2.usuarioCreacion}" width="55" fontSize="6" height="15" borderVisible="true" color="#7D7D7D" focusEnabled="false"/>
										<s:Label text="Fecha Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
										<mx:DateField selectedDate="{avaluo2.fechaCreacion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="15" focusEnabled="false"/>
									</mx:HBox>
									<mx:HBox>
										<s:Label text="Usuario Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
										<s:TextInput enabled="false" text="{avaluo2.usuarioTransaccion}" width="55" fontSize="6" height="15" color="#7D7D7D" focusEnabled="false"/>
										<s:Label text="Fecha Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
										<mx:DateField selectedDate="{avaluo2.fechaTransaccion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="15" focusEnabled="false"/>
									</mx:HBox>
								</mx:VBox>
							</s:BorderContainer>
						</mx:VBox>
					</mx:Form>
					
				</s:NavigatorContent>
				<!-- ########################################### FIN INFO BASICA ###########################################-->
				
				<!-- ########################################### BARRIO ###########################################-->
				<s:NavigatorContent label="Información del Barrio" width="100%" height="100%" id="acdAvaluoBarrio" tabIndex="28">
					<mx:VBox width="100%">
						<mx:TabNavigator id="tbnAvaluosBarrio" dropShadowVisible="false" width="833" height="226">
							<s:NavigatorContent label="Servicios Públicos" width="100%" height="100%" id="nvcServiciosPulicos" tabIndex="29">
								<mx:Form defaultButton="{btnGuardarBarrio}"   x="275" y="-1" >
									<mx:VBox x="247" y="0">
										<mx:HBox>
											<s:Label text="" width="100"/>
											<s:Label text="SECTOR" width="100"/>
											<s:Label text="PREDIO" />
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Acueducto" width="100"/>
											<s:CheckBox id="chkAcueductoSector" width="100" click="acueductoSectorTextInput_clickHandler(event)" selected="{isTrue(informacionBarrio.acueductoSector)}" enabled="{isEnabled}" tabIndex="30"/>
											<s:CheckBox id="chkAcueducto"  enabled="false" selected="{isTrue(informacionBarrio.acueductoPredio)}" tabIndex="31"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Alcantarillado" width="100"/>
											<s:CheckBox id="chkAlcantarilladoSector" width="100" click="alcantarilladoSectorTextInput_clickHandler(event)" selected="{isTrue(informacionBarrio.alcantarilladoSector)}" enabled="{isEnabled}" tabIndex="32"/>
											<s:CheckBox id="chkAlcantarillado"  enabled="false" selected="{isTrue(informacionBarrio.alcantarilladoPredio)}" tabIndex="33"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Electricidad" width="100"/>
											<s:CheckBox id="chkElectricidadSector" width="100" click="electricidadSectorTextInput_clickHandler(event)" selected="{isTrue(informacionBarrio.electricidadSector)}" enabled="{isEnabled}" tabIndex="34"/>
											<s:CheckBox id="chkElectricidad"  enabled="false" selected="{isTrue(informacionBarrio.electricidadPredio)}" tabIndex="35"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Gas" width="100"/>
											<s:CheckBox id="chkGasSector" width="100" click="gasSectorTextInput_clickHandler(event)" selected="{isTrue(informacionBarrio.gasSector)}" enabled="{isEnabled}" tabIndex="36"/>
											<s:CheckBox id="chkGas"  enabled="false" selected="{isTrue(informacionBarrio.gasPredio)}" tabIndex="37"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Teléfono" width="100"/>
											<s:CheckBox id="chkTelefonoSector" width="100" click="telefonoSectorTextInput_clickHandler(event)" selected="{isTrue(informacionBarrio.telefonoSector)}" tabIndex="38"/>
											<s:CheckBox id="chkTelefono"  enabled="false" selected="{isTrue(informacionBarrio.telefonoPredio)}" tabIndex="39"/>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Uso Predominante" width="100%" height="100%" id="nvcUsoPredominate" tabIndex="40">
								<mx:Form defaultButton="{btnGuardarBarrio}"   x="196" y="1" width="432" id="frm1">
									<mx:VBox  x="260" y="0" width="387">
										<mx:HBox>
											<s:Label text="Vivienda" width="100"/>
											<s:CheckBox id="viviendaTextInput" selected="{isTrue(informacionBarrio.vivienda)}" enabled="{isEnabled}" tabIndex="41"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Industria" width="100"/>
											<s:CheckBox id="chkIndustria" selected="{isTrue(informacionBarrio.industria)}" enabled="{isEnabled}" tabIndex="42"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Comercio" width="100"/>
											<s:CheckBox id="comercioTextInput" selected="{isTrue(informacionBarrio.comercio)}" enabled="{isEnabled}" tabIndex="43"/>									
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Otros Usos" width="100"/>
											<s:CheckBox id="otrosUsosTextInput" selected="{isTrue(informacionBarrio.otrosUsos)}" enabled="{isEnabled}" click="otrosUsosTextInput_clickHandler(event)" tabIndex="44"/>									
										</mx:HBox>
										<mx:HBox>
											<s:Label text="¿Cuales?" width="100"/>
											<s:TextInput id="textoOtrosUsosTextInput" text="{informacionBarrio.textoOtrosUsos}" width="265" restrict="{restrict_}" maxChars="30" enabled="false" tabIndex="45"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Edificaciones Similares" width="100"/>
											<s:TextInput id="edificacionesIgualesTextInput" text="{informacionBarrio.edificacionesIguales}" width="30" restrict ="0-9" maxChars="4" tabIndex="46"/>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Vías de Acceso" width="100%" height="100%" id="nvcViasAcceso" tabIndex="47">
								<mx:Form defaultButton="{btnGuardarBarrio}"   width="310" x="265" y="0">
									<mx:VBox  x="227" y="0" width="274" height="103">
										<mx:HBox>
											<s:Label text="Estado" width="100"/>
											<s:ComboBox id="cbxEstadoVias" dataProvider="{selectEstadoVias}" selectedIndex="{getItemIndex(informacionBarrio.estadosViaAcceso,selectEstadoVias,'rvLowValue')}"  creationComplete="cbxEstadoVias_creationCompleteHandler(event)" labelField="rvMeaning" enabled="{isEnabled}" tabIndex="48"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Pavimentada" width="100"/>
											<s:CheckBox id="pavimentadaTextInput" selected="{isTrue(informacionBarrio.pavimentada)}" enabled="{isEnabled}" tabIndex="49"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Andenes" width="100"/>
											<s:CheckBox id="andenesTextInput" selected="{isTrue(informacionBarrio.andenes)}" enabled="{isEnabled}" tabIndex="50"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Sardineles" width="100"/>
											<s:CheckBox id="sardenelesTextInput" selected="{isTrue(informacionBarrio.sardeneles)}" tabIndex="50"/>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Amoblamiento Urbano" width="100%" height="100%" id="nvcAmoblamientoUrbano"  tabIndex="52">
								<mx:Form defaultButton="{btnGuardarBarrio}"   x="274" y="0">
									<mx:VBox x="243" y="0">
										<mx:HBox>
											<s:Label text="Parques" width="100"/>
											<s:CheckBox id="parquesTextInput" selected="{isTrue(informacionBarrio.parques)}" enabled="{isEnabled}" tabIndex="53"/>
											<s:Label text="Arborización" width="100"/>
											<s:CheckBox id="arborizacionTextInput" selected="{isTrue(informacionBarrio.arborizacion)}" enabled="{isEnabled}" tabIndex="54"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Paradero" width="100"/>
											<s:CheckBox id="paraderoTextInput" selected="{isTrue(informacionBarrio.paradero)}" enabled="{isEnabled}" tabIndex="55"/>
											<s:Label text="Alamedas" width="100"/>
											<s:CheckBox id="alamedasTextInput" selected="{isTrue(informacionBarrio.alamedas)}" enabled="{isEnabled}" tabIndex="56"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Alumbrado" width="100" />
											<s:CheckBox id="alumbradoTextInput" selected="{isTrue(informacionBarrio.alumbrado)}" enabled="{isEnabled}" tabIndex="57"/>
											<s:Label text="Ciclo Rutas" width="100"/>
											<s:CheckBox id="cicloRutasTextInput" selected="{isTrue(informacionBarrio.cicloRutas)}" tabIndex="58"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Zonas Verdes" width="100"/>
											<s:CheckBox id="zonasVerdesTextInput" selected="{isTrue(informacionBarrio.zonasVerdes)}" enabled="{isEnabled}" tabIndex="58"/>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Información Adicional" width="100%" height="100%" id="nvcInfoAdicional"  tabIndex="60">
								<mx:Form defaultButton="{btnGuardarBarrio}" x="96" y="0">
									<mx:VBox height="144" width="615" x="101" y="-1">
										<mx:HBox>
											<mx:VBox>
												<s:Label text="Estrato"/>
												<s:ComboBox id="cbxEstrato" dataProvider="{selectEstrato}" creationComplete="cbxEstrato_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionBarrio.estrato,selectEstrato,'rvLowValue')}"  enabled="{isEnabled}" tabIndex="61"/>
											</mx:VBox>
											<mx:VBox>
												<s:Label text="Legalidad"/>
												<s:ComboBox id="cbxLegalidad" dataProvider="{selectLegalidad}" creationComplete="cbxLegalidad_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionBarrio.legalidad,selectLegalidad,'rvLowValue')}"  enabled="{isEnabled}" tabIndex="62"/>
											</mx:VBox>
											<mx:VBox>
												<s:Label text="Topografia"/>
												<s:ComboBox id="cbxTopografia" dataProvider="{selectTopografia}" creationComplete="cbxTopografia_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionBarrio.topografia,selectTopografia,'rvLowValue')}"  enabled="{isEnabled}" tabIndex="63"/>
											</mx:VBox>
											<mx:VBox>
												<s:Label text="Transporte"/>
												<s:ComboBox id="cbxTransporte" dataProvider="{selectTransporte}" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionBarrio.transporte,selectTransporte,'rvLowValue')}" creationComplete="cbxTransporte_creationCompleteHandler(event)" enabled="{isEnabled}" tabIndex="64"/>
											</mx:VBox>
										</mx:HBox>
										<mx:HBox>
											<mx:VBox>
												<s:Label text="Perspectiva de Valorización"/>
												<s:TextArea x="244" y="22" id="perspectivasTextInput" text="{informacionBarrio.perspectivas}" width="607" height="65" restrict="{restrict_}" maxChars="500" enabled="{isEnabled}" tabIndex="65"/>
											</mx:VBox>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
						</mx:TabNavigator>
						<mx:HBox>
							<s:Button focusOut="btnGuardarBarrio_focusInHandler(event)" label="Guardar Sección" id="btnGuardarBarrio" click="btnGuardarBarrio_clickHandler(event)" enabled="{isEnabled}" tabIndex="66"/>
							<s:Button id="idCancelarBarrio" label="Cancelar" click="cancelSeccion_clickHandler(event)" tabIndex="67"/>
						</mx:HBox>
						<mx:HRule width="100%"/>
					</mx:VBox>
					<s:BorderContainer width="262" height="43" x="0" y="262">
						<mx:VBox horizontalCenter="-194" verticalCenter="-82">
							<mx:HBox>
								<s:Label text="Usuario Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{informacionBarrio.usuarioCreacion}" width="65" fontSize="6" height="17" borderVisible="true" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{informacionBarrio.fechaCreacion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
							<mx:HBox>
								<s:Label text="Usuario Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{informacionBarrio.usuarioTransaccion}" width="65" fontSize="6" height="17" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{informacionBarrio.fechaTransaccion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
						</mx:VBox>
					</s:BorderContainer>
				</s:NavigatorContent> 
				<!-- ########################################### FIN BARRIO ###########################################-->
				
				<!-- ########################################### INMUEBLE ###########################################-->
				<s:NavigatorContent label="Información del Inmueble" width="100%" height="100%" tabIndex="68">
					<mx:Form defaultButton="{btnGuardarInmueble}" width="833" height="415">
						<mx:VBox width="100%" id="vBox2">
							<mx:HBox>
								<s:Label text="Tipo Vivienda" width="105"/>
								<s:ComboBox id="cbxTipoVivienda" dataProvider="{selecttipovivienda}" creationComplete="cbxTipoVivienda_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionInmueble2.tipoVivienda,selecttipovivienda,'rvLowValue')}" enabled="{isEnabled}" tabIndex="69"/>
								<s:Label text="Ubicación" width="105"/>
								<s:ComboBox id="cbxUbicacion2" dataProvider="{selectubicacion2}" creationComplete="cbxUbicacion2_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionInmueble2.ubicacion2,selectubicacion2,'rvLowValue')}" enabled="{isEnabled}" tabIndex="73"/>
								<s:Label id="txtUbicacionLocal" text="Ubicacion Local" width="105" visible="{isLocal}"/>
								<s:ComboBox id="cbxUbiaccionLocal" dataProvider="{selectubicacion3}" creationComplete="cbxUbicacion3_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionInmueble2.ubicacion3,selectubicacion3,'rvLowValue')}" enabled="{isEnabled}" visible="{isLocal}" tabIndex="77"/>
								<!--
								<s:Label id="usoInmuebleBUA" text="usoInmuebleBUA" width="105"/>								
								<s:ComboBox selectedIndex="{getItemIndex(informacionInmueble2.usoInmuebleBUA,selectusoInmuebleBUA,'rvLowValue')}"  id="cbxusoInmuebleBUA" dataProvider="{selectusoInmuebleBUA}" creationComplete="cbxusoInmuebleBUA_creationCompleteHandler(event)" labelField="rvMeaning" />
								-->
							</mx:HBox>
							<mx:HBox>
								<s:Label text="Uso" width="105"/>
								<s:ComboBox id="cbxUso" dataProvider="{selectusoinmueble}" creationComplete="cbxUso_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionInmueble2.usoInmueble,selectusoinmueble,'rvLowValue')}" enabled="{isEnabled}" change="cbxUso_changeHandler(event)" tabIndex="70"/>
								<s:Label width="105" text="Otro Uso"/>
								<s:TextInput id="otroUsoInmuebleTextInput" text="{informacionInmueble2.otroUsoInmueble}" maxChars="30" restrict="{restrict_}" enabled="false" width="148" tabIndex="74"/>
								<!--
								<s:Label id="usoInmuebleSF" text="usoInmuebleSF" width="105" />
								<s:ComboBox selectedIndex="{getItemIndex(informacionInmueble2.usoInmuebleSF,selectusoInmuebleSF,'rvLowValue')}"  id="cbxusoInmuebleSF" dataProvider="{selectusoInmuebleSF}" creationComplete="cbxusoInmuebleSF_creationCompleteHandler(event)" labelField="rvMeaning"  change="cbxusoInmuebleSF_changeHandler(event)"/>
								-->
							</mx:HBox>
							<mx:HBox>
								<s:Label width="105" text="Clase"/>
								<!--12052016 error-->
								<s:ComboBox id="cbxClase" dataProvider="{selectclaseinmueble}" creationComplete="cbxClase_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionInmueble2.claseInmueble,selectclaseinmueble,'rvLowValue')}" enabled="{isEnabled}" change="cbxClase_changeHandler(event)" tabIndex="71"/>
								<!--12052016 error-->
								
								<!--12052016 error se comenta-->
								<!--<s:ComboBox selectedIndex="{getItemIndex(informacionInmueble2.usoInmuebleBUA,selectusoInmuebleBUA,'rvLowValue')}"  id="cbxusoInmuebleBUA" dataProvider="{selectusoInmuebleBUA}" creationComplete="cbxusoInmuebleBUA_creationCompleteHandler(event)" change="cbxusoInmuebleBUA_changeHandler(event)" labelField="rvMeaning"  tabIndex="71"/>-->
								<!--12052016 error se comenta-->
								
								<s:Label width="105" text="Otro Clase"/>
								<s:TextInput id="otroClaseTextInput" text="{informacionInmueble2.otroClase}" maxChars="30" restrict="{restrict_}" enabled="false" width="148" tabIndex="75"/>
							</mx:HBox>
							<mx:HBox>
								<s:Label width="105" text="Categoria"/>
								<s:ComboBox id="cbxCategoria" dataProvider="{selectcategoria}" creationComplete="cbxCategoria_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionInmueble2.idCategoria,selectcategoria,'rvLowValue')}" enabled="{isEnabled}" change="cbxCategoria_changeHandler(event)" tabIndex="72"/>
								<s:Label width="105" text="Construido Para el Uso Actual"/>
								<s:ComboBox id="cbxConstUsoActual" dataProvider="{selectafirmarusoactual}" creationComplete="cbxConstUsoActual_creationCompleteHandler(event)" labelField="rvMeaning" selectedIndex="{getItemIndex(informacionInmueble2.ediContUso,selectafirmarusoactual,'rvLowValue')}" enabled="{isEnabled}" tabIndex="76"/>
							</mx:HBox>
						</mx:VBox>
						<mx:HRule width="100%">
							
						</mx:HRule>
						<mx:VBox width="100%">
							<mx:HBox width="10%">
								<s:Label width="105" text="Notaria"/>
								<s:TextInput id="notariaTextInput" text="{informacionInmueble2.notaria}" maxChars="5" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="78"/>
								<s:Label width="105" text="Número Escritura"/>
								<s:TextInput id="numeroEscrituraTextInput" text="{informacionInmueble2.numeroEscritura}" restrict="{restrict_}" maxChars="5" enabled="{isEnabled}" tabIndex="79"/>
								<s:Label text="Departamento Escritura" width="105"/>
								<s:ComboBox id="cbxDepartamentoEscritura" dataProvider="{selectDepartamento}" labelField="departamento" selectedIndex="{getItemIndex(informacionInmueble2.departamentoEscritura,selectDepartamento,'codAsobancaria')}" creationComplete="cbxDepartamentoEscritura_creationCompleteHandler(event)" change="cbxDepartamentoEscritura_changeHandler(event)" enabled="{isEnabled}" tabIndex="79" focusOut="cbxDepartamentoEscritura_focusOutHandler(event)"/>
								<!--<mx:ComboBox id="cbxDepartamentoEscritura" dataProvider="{selectDepartamento}" labelField="departamento" selectedIndex="{getItemIndex(informacionInmueble2.departamentoEscritura,selectDepartamento,'codAsobancaria')}" creationComplete="cbxDepartamentoEscritura_creationCompleteHandler(event)" change="cbxDepartamentoEscritura_changeHandler(event)" enabled="{isEnabled}" tabIndex="79"/>-->
							</mx:HBox>
							<mx:HBox width="105%">
								<s:Label text="Ciudad Escritura" width="105"/>
								<s:ComboBox id="cbxCiudadEscritura" labelField="ciudad" dataProvider="{selectciudadescritura}" selectedIndex="{getItemIndex(informacionInmueble2.ciudadEscritura,selectciudadescritura,'codAsobancaria')}"  enabled="{isEnabledCiudadEscritura}" tabIndex="80" change="cbxCiudadEscritura_changeHandler(event)"/>
								<!--<mx:ComboBox id="cbxCiudadEscritura" labelField="ciudad" dataProvider="{selectciudadescritura}" selectedIndex="{getItemIndex(informacionInmueble2.ciudadEscritura,selectciudadescritura,'codAsobancaria')}"  enabled="{isEnabledCiudadEscritura}" tabIndex="80"/>-->
								<s:Label width="105" text="Fecha Escritura"/>
								<mx:DateField id="fechaEscrituraDateField" selectedDate="{informacionInmueble2.fechaEscritura}" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(fechaEscrituraDateField)" enabled="{isEnabled}" yearNavigationEnabled="true" tabIndex="80" editable="true" focusIn="fechaEscrituraDateField_focusInHandler(event)"/>
							</mx:HBox>
							<mx:HBox width="105%">
								<s:Label width="105" text="Matrícula Inmobiliaria Ppal1"/>
								<s:TextInput id="matriculaInmobiliariaPpal1TextInput3" text="{informacionInmueble2.matriculaInmobiliariaPpal1}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="81"/>
								<s:Label width="105" text="Matrícula Inmobiliaria Ppal2"/>
								<s:TextInput id="matriculaInmobiliariaPpal2TextInput" text="{informacionInmueble2.matriculaInmobiliariaPpal2}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="82"/>
								<s:Label width="105" text="Matrícula Inmobiliaria Garaje 1"/>
								<s:TextInput id="matriculaInmobiliariaGaraje1TextInput" text="{informacionInmueble2.matriculaInmobiliariaGaraje1}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="83"/>
							</mx:HBox>
							<mx:HBox width="105%">
								<s:Label width="105" text="Matrícula Inmobiliaria Garaje 2"/>
								<s:TextInput id="matriculaInmobiliariaGaraje2TextInput" text="{informacionInmueble2.matriculaInmobiliariaGaraje2}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="84"/>
								<s:Label width="105" text="Matrícula Inmobiliaria Garaje 3"/>
								<s:TextInput id="matriculaInmobiliariaGaraje3TextInput" text="{informacionInmueble2.matriculaInmobiliariaGaraje3}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="85"/>
								<s:Label width="105" text="Matrícula Inmobiliaria Garaje 4"/>
								<s:TextInput id="matriculaInmobiliariaGaraje4TextInput" text="{informacionInmueble2.matriculaInmobiliariaGaraje4}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="86"/>
							</mx:HBox>
							<mx:HBox width="105%">
								<s:Label width="105" text="Matrícula Inmobiliaria Garaje 5"/>
								<s:TextInput id="matriculaInmobiliariaGaraje5TextInput" text="{informacionInmueble2.matriculaInmobiliariaGaraje5}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="87"/>
								<s:Label width="105" text="Matrícula Inmobiliaria Deposito 1"/>
								<s:TextInput id="matriculaInmobiliariaDeposito1TextInput" text="{informacionInmueble2.matriculaInmobiliariaDeposito1}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="88"/>
								<s:Label width="105" text="Matrícula Inmobiliaria Deposito 2"/>
								<s:TextInput id="txtMatriculaInmDeposito2" text="{informacionInmueble2.matriculaInmobiliariaDeposito2}" maxChars="20" restrict="0-9,a-z,A-Z" enabled="{isEnabled}" tabIndex="89"/>
							</mx:HBox>
							<mx:HBox width="105%">
								<s:Label width="105" text="Chip"/>
								<s:TextInput id="chipTextInput" text="{informacionInmueble2.chip}" maxChars="20" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="90"/>
								<s:Label text="Número Catastral"/>
								<s:TextInput id="catastralTextInput" text="{informacionInmueble2.catastralSF}" maxChars="20" tabIndex="100"/>
							</mx:HBox>
						</mx:VBox>
						<mx:HBox>
							<s:Button label="Guardar Sección" id="btnGuardarInmueble" click="btnGuardarInmueble_clickHandler(event)" enabled="{isEnabled}" tabIndex="101"/>
							<s:Button id="idCancelarInmueble" label="Cancelar" click="cancelSeccion_clickHandler(event)" tabIndex="102"/>
						</mx:HBox>
					</mx:Form>
					<mx:HRule width="100%" x="0" y="420"/>
					<s:BorderContainer width="264" height="46" x="10" y="422">
						<mx:VBox horizontalCenter="-194" verticalCenter="-82">
							<mx:HBox>
								<s:Label text="Usuario Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{informacionInmueble2.usuarioCreacion}" width="65" fontSize="6" height="17" borderVisible="true" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{informacionInmueble2.fechaCreacion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
							<mx:HBox>
								<s:Label text="Usuario Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{informacionInmueble2.usuarioTransaccion}" width="65" fontSize="6" height="17" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{informacionInmueble2.fechaTransaccion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
						</mx:VBox>
					</s:BorderContainer>
				</s:NavigatorContent> 
				<!-- ########################################### FIN INMUEBLE ###########################################-->
				
				<!-- ########################################### CONSTRUCCION ###########################################-->
				<s:NavigatorContent label="Información de la Construcción" width="100%" height="100%" id="navigatorContent2"  tabIndex="103">
					<mx:VBox height="505" id="vBox" >
						<mx:TabNavigator x="10" y="40" width="796" height="396" id="tbnAvaluosConstruccion" dropShadowVisible="false">
							<s:NavigatorContent label="Adicional" width="100%" height="100%" id="navigatorContent">
								<mx:Form defaultButton="{btnGuardarConstruccion}" height="603" width="784">
									<mx:VBox width="100%" horizontalAlign="center">
										<mx:HBox width="100%">
											<s:Label text="Número de Pisos" width="110"/>
											<s:TextInput id="pisosTextInput" text="{informacionConstruccion.pisos}" width="60" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="105"/>
											<s:Label text="Número de Sótanos" width="120"/>
											<s:TextInput id="sotanosTextInput" text="{informacionConstruccion.sotanos}" width="60" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="106"/>
											<s:Label text="Vetustez" width="60"/>
											<s:TextInput id="vetustezTextInput" text="{informacionConstruccion.vetustez}" width="114" restrict ="0-9,." maxChars="23" enabled="{isEnabled}" tabIndex="107"/>
											<s:Label text="Piso Inmueble" width="95"/>
											<s:TextInput id="pisoInmuebleTextInput" text="{informacionConstruccion.pisoInmueble}" width="60" restrict ="0-9" maxChars="3" enabled="{isEnabled}" tabIndex="108"/>
										</mx:HBox>
										<mx:HBox width="100%">
											<s:Label text="Cerca de Fuentes Hídricas" width="110"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.ubicacionFuentesHidricas,selectafirmarcercafuenthidri,'rvLowValue')}"  id="cbxFuentesHidricas" dataProvider="{selectafirmarcercafuenthidri}" creationComplete="cbxFuentesHidricas_creationCompleteHandler(event)" labelField="rvMeaning" width="60" enabled="{isEnabled}" tabIndex="108"/>
											<s:Label text="Edificación Vs. Vía" width="120"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.ubicacionNivelVia,selectdistanciametros,'rvLowValue')}"  id="cbxDistancia" dataProvider="{selectdistanciametros}" creationComplete="cbxDistancia_creationCompleteHandler(event)"  labelField="rvMeaning" width="60" enabled="{isEnabled}" tabIndex="109"/>
											<s:Label id="txtAltura" text="Altura" width="60" visible="{isBodega}"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.altura,selectalura,'rvLowValue')}"  id="cbxAltura" dataProvider="{selectalura}" creationComplete="cbxAltura_creationCompleteHandler(event)" labelField="rvMeaning"  width="60" enabled="{isEnabled}" visible="{isBodega}" tabIndex="110"/>
											<s:Label id="txtPisosBodega" text="Pisos Bodega" width="95" visible="{isBodega}"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.pisosBodega,selectpisosbodega,'rvLowValue')}"  id="cbxPisosBodega" dataProvider="{selectpisosbodega}" creationComplete="cbxPisosBodega_creationCompleteHandler(event)" labelField="rvMeaning"  width="95" enabled="{isEnabled}" visible="{isBodega}" tabIndex="111"/>
										</mx:HBox>
									</mx:VBox>
									<mx:HRule width="100%">
										
									</mx:HRule>
									<mx:VBox width="100%" horizontalAlign="left">
										<mx:HBox>
											<s:Label text="Estado Construcción"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoConstruccion,selectestadoconstruccion,'rvLowValue')}"  id="cbxEstadoConstruccion" dataProvider="{selectestadoconstruccion}" labelField="rvMeaning" creationComplete="cbxEstadoConstruccion_creationCompleteHandler(event)" change="cbxEstadoConstruccion_changeHandler(event)" enabled="{isEnabled}" tabIndex="112" focusOut="cbxEstadoConstruccion_focusOutHandler(event)"  />
										</mx:HBox>
										<mx:HBox width="100%">
											<mx:FormItem label="Terminado">
												<s:CheckBox id="chkTerminadoNueva" selected="{isTrue(informacionConstruccion.estadoTerminadaNueva)}" enabled="false" click="chkTerminadoNueva_clickHandler(event)" tabIndex="113"/>
											</mx:FormItem>
											<mx:FormItem label="En Obra">
												<s:CheckBox id="chkSinTerminarNueva" selected="{isTrue(informacionConstruccion.enObra)}" enabled="false" click="chkSinTerminarNueva_clickHandler(event)" tabIndex="114"/>
											</mx:FormItem>
											<s:Label text="Avance Obra"/>
											<s:TextInput id="avanceObraTextInput" text="{informacionConstruccion.avanceObra}" width="50" restrict ="0-9" maxChars="3" enabled="{isEnabled}" tabIndex="115"/>
											<mx:FormItem label="Terminado">
												<s:CheckBox id="chbTerminado" selected="{isTrue(informacionConstruccion.estadoTerminadoUsado)}" click="chbTerminado_clickHandler(event)" tabIndex="116" change="chbTerminado_changeHandler(event)"/>
											</mx:FormItem>
											<mx:FormItem label="Sin terminar">
												<s:CheckBox id="chbSinTerminar" selected="{isTrue(informacionConstruccion.sinTerminar)}" enabled="false" click="chbSinTerminar_clickHandler(event)" tabIndex="117"/>
											</mx:FormItem>
											<mx:FormItem label="Remodelado" >
												<s:CheckBox id="chbRemodelado" selected="{isTrue(informacionConstruccion.estadoRemodelacion)}" tabIndex="118" focusIn="chbRemodelado_focusInHandler(event)"/>
											</mx:FormItem>
										</mx:HBox>
									</mx:VBox>
									<mx:HRule width="100%">
										
									</mx:HRule>
									<mx:VBox width="100%" verticalAlign="top" horizontalAlign="center">
										<mx:HBox width="100%">
											<s:Label width="150" text="Estado Conservación"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoConservacion,selectestadoconservacion,'rvLowValue')}"  id="cbxEstadoConservacion" dataProvider="{selectestadoconservacion}" creationComplete="cbxEstadoConservacioon_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" enabled="{isEnabled}" tabIndex="119"/>
											<s:Label width="130" text="Parapetos Cubierta"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.parapetosCubierta,selectparapetos,'rvLowValue')}"  id="cbxParapetosCubierta" dataProvider="{selectparapetos}" creationComplete="cbxParapetosCubierta_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}" tabIndex="128"/>
										</mx:HBox>
										<mx:HBox width="100%">
											<s:Label width="150" text="Estructura"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estructura,selectestructura,'rvLowValue')}"  id="cbxEstructura" dataProvider="{selectestructura}" labelField="rvMeaning" creationComplete="cbxEstructura_creationCompleteHandler(event)"  width="170" enabled="{isEnabled}" change="cbxEstructura_changeHandler(event)" tabIndex="120"/>
											<s:Label width="130" text="Estructura Reforzada"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estructuraReforzadaBUA,selectestructuraReforzadaBUA,'rvLowValue')}"  id="cbxestructuraReforzadaBUA" dataProvider="{selectestructuraReforzadaBUA}" creationComplete="cbxestructuraReforzadaBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}"  tabIndex="129"/>
											<!--
											<s:Label width="130" text="Ubicación Tanque"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.ubicacionTanque,selecttanquesagua,'rvLowValue')}"  id="cbxUbiTanques" dataProvider="{selecttanquesagua}" creationComplete="cbxUbiTanques_creationCompleteHandler(event)" labelField="rvMeaning" width="226" enabled="{isEnabled}" change="cbxTanque_changeHandler(event)"/>
											-->
										</mx:HBox>
										<!--
										<mx:HBox  width="100%">
										<s:Label width="150" text="Otra Estructura"/>
										<s:TextInput id="textoEstructuraTextInput" text="{informacionConstruccion.textoEstructura}" width="170" restrict="{restrict_}" maxChars="30" enabled="false"/>
										<s:Label width="130" text="Otra Ubicación Tanque"/>
										<s:TextInput id="otraUbicacionTanqueTextInput" text="{informacionConstruccion.otraUbicacionTanque}" width="226" restrict="{restrict_}" maxChars="30" enabled="false"/>
										</mx:HBox>
										-->
										<mx:HBox width="100%">
											<s:Label width="150" text="Material Estructura"/>
											<!--
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.materialEstructura,selectmaterialestructura,'rvLowValue')}"  id="cbxMaterialesEstructura" dataProvider="{selectmaterialestructura}" creationComplete="cbxMaterialesEstructura_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" enabled="{isEnabled}" change="cbxMaterialEstructura_changeHandler(event)"/>
											-->
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.materialConstruccionBUA,selectmaterialConstruccionBUA,'rvLowValue')}"  id="cbxmaterialConstruccionBUA" dataProvider="{selectmaterialConstruccionBUA}" creationComplete="cbxmaterialConstruccionBUA_creationCompleteHandler(event)" labelField="rvMeaning" enabled="{isEnabled}" width="170" change="cbxmaterialConstruccionBUA_changeHandler(event)"  tabIndex="121"/>
											<s:Label width="130" text="Detalle Material"/>											
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.detalleMaterialSFBUA,selectdetalleMaterialSFBUA,'rvLowValue')}"  id="cbxdetalleMaterialSFBUA" dataProvider="{selectdetalleMaterialSFBUA}" creationComplete="cbxdetalleMaterialSFBUA_creationCompleteHandler(event)" enabled="{isEnabled}" labelField="rvMeaning"  width="226"  tabIndex="130"/>
											<!--<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.detalleMaterialSFBUA,selectdetalleMaterialSFBUA,'rvLowValue')}"  id="cbxdetalleMaterialSFBUA" creationComplete="cbxdetalleMaterialSFBUA_creationCompleteHandler(event)" enabled="{isEnabled}" labelField="rvDomain"  width="226"  tabIndex="130">											
											<s:AsyncListView list="{getValoresDominioByAbbreviationResult.lastResult}"/>
											</s:ComboBox>-->
											<!--
											<s:Label width="130" text="Luces"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.luces,selectlongluces,'rvLowValue')}"  id="cbxLongLuces" dataProvider="{selectlongluces}" creationComplete="cbxLongLues_creationCompleteHandler(event)" labelField="rvMeaning" width="226" enabled="{isEnabled}"/>
											-->
										</mx:HBox>
										<mx:HBox width="100%">
											<!--
											<s:Label width="150" text="Otro Material"/>
											<s:TextInput id="otroMaterialTextInput" text="{informacionConstruccion.otroMaterial}" width="170" restrict="{restrict_}" maxChars="30" enabled="false"/>
											-->
											<!--
											<s:Label width="150" text="Simetria Altura"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.simetriaAltura,selectsimetriaaltura,'rvLowValue')}"  id="cbxSimetriaAltura" dataProvider="{selectsimetriaaltura}" creationComplete="cbxSimetriaAltura_creationCompleteHandler(event)" labelField="rvMeaning" width="170" enabled="{isEnabled}"/>
											<s:Label width="130" text="Simetria Planta"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.simetriaPlanta, selectsimetriaplanta,'rvLowValue')}"  id="cbxSimetriaPlanta" dataProvider="{selectsimetriaplanta}" creationComplete="cbxSimetriaPlanta_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}"/>
											-->
											<s:Label width="150" text="Irregularidad Planta"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.irregularidadPlantaBUA,selectirregularidadPlantaBUA,'rvLowValue')}"  id="cbxirregularidadPlantaBUA" dataProvider="{selectirregularidadPlantaBUA}" creationComplete="cbxirregularidadPlantaBUA_creationCompleteHandler(event)" labelField="rvMeaning" enabled="{isEnabled}" width="170"  tabIndex="122"/>
											<s:Label width="130" text="Irregularidad Altura"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.irregularidadAlturaBUA,selectirregularidadAlturaBUA,'rvLowValue')}"  id="cbxirregularidadAlturaBUA" dataProvider="{selectirregularidadAlturaBUA}" creationComplete="cbxirregularidadAlturaBUA_creationCompleteHandler(event)" labelField="rvMeaning" enabled="{isEnabled}" width="226" tabIndex="131"/>
										</mx:HBox>
										<mx:HBox width="100%">
											<s:Label width="150" text="Fachada"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.fachada,selectfachada,'rvLowValue')}"  id="cbxFachada" dataProvider="{selectfachada}" creationComplete="cbxFachada_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" enabled="{isEnabled}" change="cbxFachada_changeHandler(event)" tabIndex="123"/>
											<s:Label width="130" text="Tipo Fachada"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.tipoFachada,selecttipofachada,'rvLowValue')}"  id="cbxTipoFachada" dataProvider="{selecttipofachada}" creationComplete="cbxTipoFachada_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}" tabIndex="132"/>
										</mx:HBox>
										<mx:HBox width="100%">
											<s:Label width="150" text="Cubierta"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.cubierta,selectcubierta,'rvLowValue')}"  id="cbxCubierta" dataProvider="{selectcubierta}" creationComplete="cbxCubierta_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" enabled="{isEnabled}" change="cbxCubierta_changeHandler(event)" tabIndex="124"/>
											<s:Label width="130" text="Golpeteo"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.golpeteo,selectgolpeteo,'rvLowValue')}"  id="cbxGolpeteo" dataProvider="{selectgolpeteo}" creationComplete="cbxGolpeteo_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}" tabIndex="133"/>
										</mx:HBox>
										<mx:HBox width="100%">
											<!--
											<s:Label width="150" text="Otra Cubierta"/>
											<s:TextInput id="textoCubiertaTextInput" text="{informacionConstruccion.textoCubierta}" width="170" restrict="{restrict_}" maxChars="30" enabled="false"/>
											-->											
											<s:Label width="150" text="Daño Previo"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.danoPrevioBUA,selectdanoPrevioBUA,'rvLowValue')}"  id="cbxdanoPrevioBUA" dataProvider="{selectdanoPrevioBUA}" creationComplete="cbxdanoPrevioBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" enabled="{isEnabled}"  tabIndex="125"/>
											<!--
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.danoPrevio,selectdanosprevios,'rvLowValue')}"  id="cbxDanoPrevio" dataProvider="{selectdanosprevios}" creationComplete="cbxDanoPrevio_creationCompleteHandler(event)" labelField="rvMeaning" width="226" enabled="{isEnabled}"/>
											-->
											<s:Label width="130" text="Reparados"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.reparadosBUA,selectreparadosBUA,'rvLowValue')}"  id="cbxreparadosBUA" dataProvider="{selectreparadosBUA}" creationComplete="cbxreparadosBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}" tabIndex="134"/>
										</mx:HBox>
										<!--
										<mx:HBox width="100%">
										<s:Label width="150" text="RangoConstruccionSF"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.rangoConstruccionSF,selectrangoConstruccionSF,'rvLowValue')}"  id="cbxrangoConstruccionSF" dataProvider="{selectrangoConstruccionSF}" creationComplete="cbxrangoConstruccionSF_creationCompleteHandler(event)" labelField="rvMeaning"  width="170"  tabIndex="126"/>
										</mx:HBox>
										<mx:HBox width="100%">
										<s:Label width="150" text="anoConstruccionBUA"/>
										<s:TextInput  width="170" id="anoConstruccionBUATextInput" text="{informacionConstruccion.anoConstruccionBUA}"  tabIndex="127"/>
										</mx:HBox>
										-->
										<!--<mx:HBox width="100%">-->
										<!--
										<mx:Label width="130" text="IrregularidadAlturaBUA"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.irregularidadAlturaBUA,selectirregularidadAlturaBUA,'rvLowValue')}"  id="cbxirregularidadAlturaBUA" dataProvider="{selectirregularidadAlturaBUA}" creationComplete="cbxirregularidadAlturaBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" />
										-->
										<!--</mx:HBox>-->
										<!--<mx:HBox width="100%">-->
										<!--
										<s:Label width="150" text="IrregularidadPlantaBUA"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.irregularidadPlantaBUA,selectirregularidadPlantaBUA,'rvLowValue')}"  id="cbxirregularidadPlantaBUA" dataProvider="{selectirregularidadPlantaBUA}" creationComplete="cbxirregularidadPlantaBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" />
										-->
										<!--
										<mx:Label width="130" text="MaterialConstruccionBUA"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.materialConstruccionBUA,selectmaterialConstruccionBUA,'rvLowValue')}"  id="cbxmaterialConstruccionBUA" dataProvider="{selectmaterialConstruccionBUA}" creationComplete="cbxmaterialConstruccionBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" />
										-->
										<!--</mx:HBox>-->
										<!--<mx:HBox width="100%">-->
										<!--
										<s:Label width="150" text="Otra Fachada"/>
										<s:TextInput id="textoFachadaTextInput" text="{informacionConstruccion.textoFachada}" width="170" restrict="{restrict_}" maxChars="30" enabled="false"/>
										-->
										<!--
										<s:Label width="130" text="Sobrepeso"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.sobrePeso,selectsobrepeso,'rvLowValue')}"  id="cbxSobrepeso" dataProvider="{selectsobrepeso}" creationComplete="cbxSobrepeso_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}"/>
										-->
										<!--</mx:HBox>-->
										<!--<mx:HBox width="100%">-->
										<!--
										<s:Label width="130" text="Asentamientos"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.asentamientos,selectasentamientos,'rvLowValue')}"  id="cbxAsentamientos" dataProvider="{selectasentamientos}" creationComplete="cbxAsentamientos_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" enabled="{isEnabled}"/>
										-->
										<!--</mx:HBox>-->
										
										<!--<mx:HBox width="100%">-->
										<!--
										<s:Label width="150" text="DanoPrevioSF"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.danoPrevioSF,selectdanoPrevioSF,'rvLowValue')}"  id="cbxdanoPrevioSF" dataProvider="{selectdanoPrevioSF}" creationComplete="cbxdanoPrevioSF_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" />
										<mx:Label width="130" text="DanoReparadoSF"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.danoReparadoSF,selectdanoReparadoSF,'rvLowValue')}"  id="cbxdanoReparadoSF" dataProvider="{selectdanoReparadoSF}" creationComplete="cbxdanoReparadoSF_creationCompleteHandler(event)" labelField="rvMeaning"  width="226"/>
										-->
										<!--</mx:HBox>-->
										
										<!--
										<mx:HBox width="100%">											
										<s:Label width="150" text="DanoPrevioBUA"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.danoPrevioBUA,selectdanoPrevioBUA,'rvLowValue')}"  id="cbxdanoPrevioBUA" dataProvider="{selectdanoPrevioBUA}" creationComplete="cbxdanoPrevioBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" />
										-->
										<!--
										<mx:Label width="130" text="ReparadosBUA"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.reparadosBUA,selectreparadosBUA,'rvLowValue')}"  id="cbxreparadosBUA" dataProvider="{selectreparadosBUA}" creationComplete="cbxreparadosBUA_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" />											
										</mx:HBox>
										-->										
										<!--<mx:HBox width="100%">-->
										<!--
										<s:Label width="150" text="SimetriaAlturaSF"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.simetriaAlturaSF,selectsimetriaAlturaSF,'rvLowValue')}"  id="cbxsimetriaAlturaSF" dataProvider="{selectsimetriaAlturaSF}" creationComplete="cbxsimetriaAlturaSF_creationCompleteHandler(event)" labelField="rvMeaning"  width="170" />
										<mx:Label width="130" text="SimetriaPlantaSF"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.simetriaPlantaSF,selectsimetriaPlantaSF,'rvLowValue')}"  id="cbxsimetriaPlantaSF" dataProvider="{selectsimetriaPlantaSF}" creationComplete="cbxsimetriaPlantaSF_creationCompleteHandler(event)" labelField="rvMeaning"  width="226" />
										-->
										<!--</mx:HBox>-->
										<!--<mx:HBox width="100%">-->
										<!--
										<s:Label width="150" text="MaterialConstruccionSF"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.materialConstruccionSF,selectMaterialConstruccionSF,'rvLowValue')}"  id="cbxMaterialConstruccionSF" dataProvider="{selectMaterialConstruccionSF}" creationComplete="cbxMaterialConstruccionSF_creationCompleteHandler(event)" labelField="rvMeaning"  width="170"/>
										<mx:Label width="130" text="EstructuraReforzadaSF"/>
										<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estructuraReforzadaSF,selectEstructuraReforzadaSF,'rvLowValue')}"  id="cbxEstructuraReforzadaSF" dataProvider="{selectEstructuraReforzadaSF}" creationComplete="cbxEstructuraReforzadaSF_creationCompleteHandler(event)" labelField="rvMeaning" width="226"/>
										-->
										<!--</mx:HBox>-->										
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Dependencias" width="100%" height="100%" id="nvcDependencias" tabIndex="135">
								<mx:Form defaultButton="{btnGuardarConstruccion}" x="27" y="1">
									<mx:VBox width="100%">
										<mx:HBox>
											<s:Label width="70" text="Sala"/>
											<s:TextInput id="salaTextInput" text="{informacionConstruccion.sala}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="136"/>
											<s:Label width="75" text="Baño Social"/>
											<s:TextInput id="banioSocialTextInput" text="{informacionConstruccion.banioSocial}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="139"/>
											<s:Label width="85" text="Baño Privado"/>
											<s:TextInput id="banioPrivadoTextInput" text="{informacionConstruccion.banioPrivado}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="142"/>
											<s:Label width="75" text="Baño Servicio"/>
											<s:TextInput id="banioServicioTextInput" text="{informacionConstruccion.banioServicio}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="145"/>
											<s:Label width="90" text="Jardín"/>
											<s:TextInput id="jardinTextInput" text="{informacionConstruccion.jardin}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="148"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="70" text="Comedor"/>
											<s:TextInput id="comedorTextInput" text="{informacionConstruccion.comedor}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="137"/>
											<s:Label width="75" text="Estar"/>
											<s:TextInput id="estarHabitacionTextInput" text="{informacionConstruccion.estarHabitacion}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="140"/>
											<s:Label width="85" text="Cocina"/>
											<s:TextInput id="cocinaTextInput" text="{informacionConstruccion.cocina}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="143"/>
											<s:Label width="75" text="Patio Interior"/>
											<s:TextInput id="patioInteriorTextInput" text="{informacionConstruccion.patioInterior}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="146"/>
											<s:Label width="90" text="Balcón"/>
											<s:TextInput id="balconTextInput" text="{informacionConstruccion.balcon}" width="50" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="149"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="70" text="Estudio"/>
											<s:TextInput width="50" id="estudioTextInput" text="{informacionConstruccion.estudio}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="138"/>
											<s:Label width="75" text="Habitaciones"/>
											<s:TextInput width="50" id="numeroHabitacionesTextInput" text="{informacionConstruccion.numeroHabitaciones}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="141"/>
											<s:Label width="85" text="Cuarto Servicio"/>
											<s:TextInput width="50" id="cuartoServicioTextInput" text="{informacionConstruccion.cuartoServicio}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="144"/>
											<s:Label width="75" text="Terraza"/>
											<s:TextInput width="50" id="terrazaTextInput" text="{informacionConstruccion.terraza}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="147"/>
											<s:Label width="90" text="Z. Verde Privada" />
											<s:TextInput width="50" id="zonaVerdePrivadaTextInput" text="{informacionConstruccion.zonaVerdePrivada}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="150"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="70" text="Total Garajes"/>
											<s:TextInput width="50" id="totalGarajesTextInput" text="{informacionConstruccion.totalGarajes}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="151"/>
											<s:Label width="75" text="Uso Exclusivo"/>
											<s:TextInput width="50" id="usoExclusivoTextInput" text="{informacionConstruccion.usoExclusivo}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="154"/>
											<s:Label width="85" text="Sencillo"/>
											<s:TextInput width="50" id="sencilloTextInput" text="{informacionConstruccion.sencillo}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="157"/>
											<s:Label width="75" text="Depósito"/>
											<s:TextInput width="50" id="depositoTextInput" text="{informacionConstruccion.deposito}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="160"/>
											<s:Label width="90" text="Local"/>
											<s:TextInput width="50" id="localTextInput" text="{informacionConstruccion.local}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="161"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="70" text="Cubierto"/>
											<s:TextInput width="50" id="cubiertoTextInput" text="{informacionConstruccion.cubierto}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="152"/>
											<s:Label width="75" text="Privado"/>
											<s:TextInput width="50" id="privadoTextInput" text="{informacionConstruccion.privado}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="155"/>
											<s:Label width="85" text="Doble"/>
											<s:TextInput width="50" id="dobleTextInput" text="{informacionConstruccion.doble}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="158"/>
											<s:Label width="133" text=""/>
											<s:Label width="90" text="Bodega"/>
											<s:TextInput width="50" id="bodegaTextInput" text="{informacionConstruccion.bodega}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="162"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="70" text="Descubierto"/>
											<s:TextInput width="50" id="descubiertoTextInput" text="{informacionConstruccion.descubierto}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="153"/>
											<s:Label width="75" text="Bahia Común"/>
											<s:TextInput width="50" id="bahiaComunalTextInput" text="{informacionConstruccion.bahiaComunal}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="156"/>
											<s:Label width="85" text="Servidumbre"/>
											<s:TextInput width="50" id="servidumbreTextInput" text="{informacionConstruccion.servidumbre}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="159"/>
											<s:Label width="133" text=""/>
											<s:Label width="90" text="Oficina"/>
											<s:TextInput width="50" id="oficinaTextInput" text="{informacionConstruccion.oficina}" restrict ="0-9" maxChars="2" enabled="{isEnabled}" tabIndex="163"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Ventilación" width="70"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.ventilacion,selectventilacion,'rvLowValue')}"  id="cbxVentilacion" dataProvider="{selectventilacion}" creationComplete="cbxVentilacion_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="164"/>
											<s:Label width="40"/>
											<s:Label text="Iluminación" width="82"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.iluminacion,selectiluminacion,'rvLowValue')}"  id="cbxIluminacion" dataProvider="{selectiluminacion}" creationComplete="cbxIluminacion_creationCompleteHandler(event)" labelField="rvMeaning"  tabIndex="165"/>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Salubridad" width="100%" height="100%" tabIndex="166">
								<mx:Form defaultButton="{btnGuardarConstruccion}" x="226" y="0">
									<mx:FormItem label="Requiere condiciones de salubridad">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.requiereCondicionesSalubridad,selectreccondsalubri,'rvLowValue')}"  id="cbxReqCondSalubirda" dataProvider="{selectreccondsalubri}" creationComplete="cbxReqCondSalubirda_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="167"/>
									</mx:FormItem>
									<mx:FormItem label="Condiciones Salubridad">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.condicionesSalubridad,selectcondsalubridad,'rvLowValue')}"  id="cbxCondSalubridad" dataProvider="{selectcondsalubridad}" creationComplete="cbxCondSalubridad_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="168"/>
									</mx:FormItem>
									<mx:FormItem label="Arborización">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.ambientalArborizacion,selectaroborizacion,'rvLowValue')}"  id="cbxArborizacion" dataProvider="{selectaroborizacion}" creationComplete="cbxArborizacion_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="169"/>
									</mx:FormItem>
									<mx:FormItem label="Parques">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.ambientalParques,selectparques,'rvLowValue')}"  id="cbxParques" dataProvider="{selectparques}" creationComplete="cbxParques_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="170"/>
									</mx:FormItem>
									<mx:FormItem label="Zona Verde">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.ambientalZonaVerde,selectzonasverdes,'rvLowValue')}"  id="cbxZonaVerde" dataProvider="{selectzonasverdes}" creationComplete="cbxZonaVerde_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="171"/>
									</mx:FormItem>
									<mx:FormItem label="Impacto Negativo Por Aire">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.impactoNegativoPorAire,selectporaire,'rvLowValue')}"  id="cbxPorAire" dataProvider="{selectporaire}" creationComplete="cbxPorAire_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="172"/>
									</mx:FormItem>
									<mx:FormItem label="Impacto Negativo Por Basura">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.impactoNegativoBasura,selectbasura,'rvLowValue')}"  id="cbxBasura" dataProvider="{selectbasura}" creationComplete="cbxBasura_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="173"/>
									</mx:FormItem>
									<mx:FormItem label="Impacto Negativo Inseguridad">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.impactoNegativoInseguridad,selectinseguridad,'rvLowValue')}"  id="cbxInseguridad" dataProvider="{selectinseguridad}" creationComplete="cbxInseguridad_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="174"/>
									</mx:FormItem>
									<mx:FormItem label="Impacto Negativo Ruido">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.impactoNegativoRuido,selectruido,'rvLowValue')}"  id="cbxRuido" dataProvider="{selectruido}" labelField="rvMeaning" creationComplete="cbxRuido_creationCompleteHandler(event)"  enabled="{isEnabled}" tabIndex="175"/>
									</mx:FormItem>
									<mx:FormItem label="Aguas Servidas">
										<s:ComboBox selectedIndex="{getItemIndex(condicionesSalubridad.aguasServidas,selectaguasservidas,'rvLowValue')}"  id="cbxAguasServidas" dataProvider="{selectaguasservidas}" creationComplete="cbxAguasServidas_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="176"/>
									</mx:FormItem>
									<mx:FormItem label="Impacto Negativo Otros" horizontalAlign="right">
										<s:TextInput id="impactoNegativoOtrosTextInput" text="{condicionesSalubridad.impactoNegativoOtros}" restrict="{restrict_}" maxChars="100" enabled="{isEnabled}" tabIndex="177"/>
									</mx:FormItem>
									<mx:FormItem label="Otros">
										<s:TextInput id="ambientalOtrosTextInput" text="{condicionesSalubridad.ambientalOtros}" restrict="{restrict_}" maxChars="100" enabled="{isEnabled}" tabIndex="178"/>
									</mx:FormItem>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Acabados" width="100%" height="100%" id="nvcAcabadosEstado" tabIndex="179">
								<mx:Form defaultButton="{btnGuardarConstruccion}" x="204" y="0">
									<mx:VBox>
										<mx:HBox>
											<s:Label  width="80"/>
											<s:Label text="ESTADO" fontWeight="bold" width="150"/>
											<s:Label text="CALIDAD" fontWeight="bold"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Pisos"  width="50"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoPisos,selectestpisos,'rvLowValue')}"  id="cbxEstadoPisos" dataProvider="{selectestpisos}" creationComplete="cbxEstadoPisos_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="180"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.calidadPiso,selectcalpisos,'rvLowValue')}"  id="cbxCalidadPisos" dataProvider="{selectcalpisos}" creationComplete="cbxCalidadPisos_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="181"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Muros" width="50"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoMuros,selectestmuros,'rvLowValue')}"  id="cbxEstadoMuros" dataProvider="{selectestmuros}" creationComplete="cbxEstadoMuros_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="182"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.calidadMuro,selectcalmuros,'rvLowValue')}"  id="cbxCalidadMuros" dataProvider="{selectcalmuros}" creationComplete="cbxCalidadMuros_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="183"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Techos" width="50"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estructuraTechos,selectesttechos,'rvLowValue')}"  id="cbxEstadoTecho" dataProvider="{selectesttechos}" creationComplete="cbxEstadoTecho_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="184"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.calidadTecho,selectcaltechos,'rvLowValue')}"  id="cbxCalidadTechos" dataProvider="{selectcaltechos}" creationComplete="cbxCalidadTechos_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="185"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Madera" width="50"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoMadera,selectestmadera,'rvLowValue')}"  id="cbxEstadoMadera" dataProvider="{selectestmadera}" creationComplete="cbxEstadoMadera_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="186"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.calidadMadera,selectcalmadera,'rvLowValue')}"  id="cbxCalidadMadera" dataProvider="{selectcalmadera}" creationComplete="cbxCalidadMadera_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="187"/>
										</mx:HBox>	
										<mx:HBox>
											<s:Label text="Metal" width="50"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoMetal,selectestmetal,'rvLowValue')}"  id="cbxEstadoMetal" dataProvider="{selectestmetal}" creationComplete="cbxEstadoMetal_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="188"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.calidMetal,selectcalmetal,'rvLowValue')}"  id="cbxCalidadMetal" dataProvider="{selectcalmetal}" creationComplete="cbxCalidadMetal_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="189"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Baños" width="50"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoBanios,selectestbanos,'rvLowValue')}"  id="cbxEstadobanos" dataProvider="{selectestbanos}" creationComplete="cbxEstadobanos_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="190"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.calidadBanio,selectcalmetal,'rvLowValue')}"  id="cbxCalidadBanos" dataProvider="{selectcalbanos}" creationComplete="cbxCalidadBanos_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="191"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label text="Cocina" width="50"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.estadoCocina,selectestcocina,'rvLowValue')}"  id="cbxEstadoCocina" dataProvider="{selectestcocina}"  creationComplete="cbxEstadoCocina_creationCompleteHandler(event)" labelField="rvMeaning"  tabIndex="192"/>
											<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.calidadCocina,selectcalcocina,'rvLowValue')}"  id="cbxCalidadCocina" dataProvider="{selectcalcocina}" creationComplete="cbxCalidadCocina_creationCompleteHandler(event)" labelField="rvMeaning"  tabIndex="193"/>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Propiedad Horizontal" width="100%" height="100%" id="nvcPropiedadHorizontal"  tabIndex="194">
								<mx:Form defaultButton="{btnGuardarConstruccion}" x="101" y="10">
									<mx:HBox>
										<mx:VBox>
											<mx:FormItem label="Sometido a Propiedad Horizontal">
												<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.propiedadHorizontal,selectprophorizontal,'rvLowValue')}"  id="cbxPorpiedadHorizontal" dataProvider="{selectprophorizontal}" creationComplete="cbxPorpiedadHorizontal_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" tabIndex="195" focusOut="cbxPorpiedadHorizontal_focusOutHandler(event)"/>
											</mx:FormItem>
											<mx:FormItem label="Conjunto Agrupacion Cerrada">
												<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.conjuntoAgrupacionCerrada,selectconjcerrado,'rvLowValue')}"  id="cbxAguCerrada" dataProvider="{selectconjcerrado}" creationComplete="cbxAguCerrada_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" width="161" tabIndex="196"/>
											</mx:FormItem>
											<mx:FormItem label="Ubicación Inmueble               ">
												<s:ComboBox selectedIndex="{getItemIndex(informacionConstruccion.ubicacionInmueble,selectubicacion,'rvLowValue')}"  id="cbxUbicacionInmueble" dataProvider="{selectubicacion}" creationComplete="cbxUbicacionInmueble_creationCompleteHandler(event)" labelField="rvMeaning"  enabled="{isEnabled}" width="215" tabIndex="197"/>
											</mx:FormItem>
										</mx:VBox>
										<mx:VBox>
											<mx:FormItem label="Número Edificios">
												<s:TextInput id="numeroEdificiosTextInput" text="{informacionConstruccion.numeroEdificios}" restrict="0-9" maxChars="2" enabled="{isEnabled}" width="125" tabIndex="198"/>
											</mx:FormItem>
											<mx:FormItem label="Unidad Por Piso">
												<s:TextInput id="unidadPorPisoTextInput" text="{informacionConstruccion.unidadPorPiso}" restrict="0-9" maxChars="2" enabled="{isEnabled}" width="130" tabIndex="199"/>
											</mx:FormItem>
											<mx:FormItem label="Total Unidades">
												<s:TextInput id="totalUnidadesTextInput" text="{informacionConstruccion.totalUnidades}" restrict="0-9" maxChars="3" enabled="{isEnabled}" width="133" tabIndex="200"/>
											</mx:FormItem>
										</mx:VBox>
									</mx:HBox>
								</mx:Form>
							</s:NavigatorContent>
							<s:NavigatorContent label="Dotación Comunal" width="100%" height="100%" id="nvcDotacionComunal" tabIndex="201">
								<mx:Form defaultButton="{btnGuardarConstruccion}" x="27" y="0">
									<mx:VBox>
										<mx:HBox>
											<s:Label width="110"  text="Porteria"/>
											<s:CheckBox id="chkPorteria" selected="{isTrue(informacionConstruccion.porteria)}" enabled="{isEnabled}" tabIndex="202"/>
											<s:Label width="110"  text="Piscina"/>
											<s:CheckBox id="piscinaTextInput" selected="{isTrue(informacionConstruccion.piscina)}" enabled="{isEnabled}" tabIndex="206"/>
											<s:Label width="110"  text="Garaje Visitante"/>
											<s:CheckBox id="garajeVisitanteTextInput" selected="{isTrue(informacionConstruccion.garajeVisitante)}" enabled="{isEnabled}" tabIndex="210"/>
											<s:Label width="110"  text="Bomba Eyectora"/>
											<s:CheckBox id="bombaEyectoraTextInput" selected="{isTrue(informacionConstruccion.bombaEyectora)}" enabled="{isEnabled}" tabIndex="214"/>
											<s:Label width="110"  text="Zonas Verdes"/>
											<s:CheckBox id="zonasVerdesTextInput2" selected="{isTrue(informacionConstruccion.zonasVerdes)}" enabled="{isEnabled}" tabIndex="218"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="110"  text="Citófono"/>
											<s:CheckBox id="chkCitofono" selected="{isTrue(informacionConstruccion.citofono)}" enabled="{isEnabled}" tabIndex="203"/>	
											<s:Label width="110"  text="Tanque Agua"/>
											<s:CheckBox id="tanqueAguaTextInput" selected="{isTrue(informacionConstruccion.tanqueAgua)}" enabled="{isEnabled}" tabIndex="207"/>
											<s:Label width="110"  text="Juego Niños"/>
											<s:CheckBox id="juegoNinosTextInput" selected="{isTrue(informacionConstruccion.juegoNinos)}" enabled="{isEnabled}" tabIndex="211"/>
											<s:Label width="110"  text="Aire Acondicionado"/>
											<s:CheckBox id="aireAcondicionadoTextInput" selected="{isTrue(informacionConstruccion.aireAcondicionado)}" enabled="{isEnabled}" tabIndex="215"/>
											<s:Label width="110"  text="Gimnasio"/>
											<s:CheckBox id="gimnasioTextInput" selected="{isTrue(informacionConstruccion.gimnasio)}" enabled="{isEnabled}" tabIndex="219"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="110"  text="Bicicletero"/>
											<s:CheckBox id="bicicleteroTextInput" selected="{isTrue(informacionConstruccion.bicicletero)}" enabled="{isEnabled}" tabIndex="204"/>
											<s:Label width="110"  text="Club House"/>
											<s:CheckBox id="clubHouseTextInput" selected="{isTrue(informacionConstruccion.clubHouse)}" enabled="{isEnabled}" tabIndex="208"/>
											<s:Label width="110"  text="Cancha Multiple"/>
											<s:CheckBox id="canchaMultipleTextInput" selected="{isTrue(informacionConstruccion.canchaMultiple)}" enabled="{isEnabled}" tabIndex="212"/>
											<s:Label width="110"  text="Squash"/>
											<s:CheckBox id="squashTextInput" selected="{isTrue(informacionConstruccion.squash)}" enabled="{isEnabled}" tabIndex="216"/>
											<s:Label width="110"  text="Golfito"/>
											<s:CheckBox id="golfitoTextInput" selected="{isTrue(informacionConstruccion.golfito)}" enabled="{isEnabled}" tabIndex="220"/>
										</mx:HBox>
										<mx:HBox>
											<s:Label width="110"  text="Salón Comunal"/>
											<s:CheckBox id="salonComunalTextInput" selected="{isTrue(informacionConstruccion.salonComunal)}" enabled="{isEnabled}" tabIndex="205"/>
											<s:Label width="110"  text="Planta Eléctrica"/>
											<s:CheckBox id="plantaTextInput" selected="{isTrue(informacionConstruccion.planta)}" enabled="{isEnabled}" tabIndex="209"/>
											<s:Label width="110"  text="Shut Basuras"/>
											<s:CheckBox id="shutBasurasTextInput" selected="{isTrue(informacionConstruccion.shutBasuras)}" enabled="{isEnabled}" tabIndex="213"/>
											<s:Label width="110"  text="Presión"/>
											<s:CheckBox id="presionTextInput" selected="{isTrue(informacionConstruccion.presion)}" enabled="{isEnabled}" tabIndex="217"/>
											<s:Label text="Ascensor" width="110"/>
											<s:CheckBox id="ascensorTextInput" selected="{isTrue(informacionConstruccion.ascensor)}" click="ascensorTextInput_clickHandler(event)" enabled="{isEnabled}" tabIndex="221"/>
										</mx:HBox>
										<mx:HBox width="100%">
											<s:Label text=""  width="570"/>
											<s:Label text="Ascensores" width="100" />
											<s:TextInput id="numeroAscensoresTextInput" text="{informacionConstruccion.numeroAscensores}" width="30" enabled="false" maxChars="2" tabIndex="222"/>
										</mx:HBox>
										<mx:HBox>
											<mx:FormItem label="Otros">
												<s:TextInput id="otrosDotacionTextInput" text="{informacionConstruccion.otrosDotacion}" width="320" restrict="{restrict_}" maxChars="30" enabled="{isEnabled}" tabIndex="223"/>
											</mx:FormItem>
											<mx:FormItem>
												<s:TextInput id="otrosDotacion2TextInput" text="{informacionConstruccion.otrosDotacion2}" width="320" restrict="{restrict_}" maxChars="30" enabled="{isEnabled}" tabIndex="224"/>
											</mx:FormItem>
										</mx:HBox>
									</mx:VBox>
								</mx:Form>
							</s:NavigatorContent>
						</mx:TabNavigator>
						<mx:HBox>
							<s:Button focusOut="btnGuardarConstruccion_focusInHandler(event)" label="Guardar Sección" x="9" y="563" id="btnGuardarConstruccion" click="btnGuardarConstruccion_clearHandler(event)" enabled="{isEnabled}" tabIndex="225"/>
							<s:Button id="idCancelarConstruccion" label="Cancelar" click="cancelSeccion_clickHandler(event)"/>						
						</mx:HBox>
					</mx:VBox>
					<mx:HRule width="100%" x="0" y="505"/>
					<s:BorderContainer width="264" height="46" x="0" y="506">
						<mx:VBox horizontalCenter="-194" verticalCenter="-82">
							<mx:HBox>
								<s:Label text="Usuario Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{informacionConstruccion.usuarioCreacion}" width="65" fontSize="6" height="17" borderVisible="true" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{informacionConstruccion.fechaCreacion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
							<mx:HBox>
								<s:Label text="Usuario Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{informacionConstruccion.usuarioTransaccion}" width="65" fontSize="6" height="17" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{informacionConstruccion.fechaTransaccion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
						</mx:VBox>
					</s:BorderContainer>
				</s:NavigatorContent> 
				<!-- ########################################### FIN CONSTRUCCION ###########################################-->
				
				<!-- ########################################### OFERTA DEMANDA ###########################################-->
				<s:NavigatorContent label="Oferta y Demanda" width="100%" height="100%" tabIndex="227">
					<mx:Form defaultButton="{btnGuardarOfertaDemanda}" x="6" y="10" width="100%">
						<mx:VBox width="100%">
							<mx:HBox>
								<s:Label text="Tiempo Comercialización (en meses)" width="200"/>
								<s:TextInput id="tipoComercializacionTextInput" text="{comportamientoOfertaDemanda.tipoComercializacion}" width="46" restrict="0-9" enabled="{isEnabled}" maxChars="3" tabIndex="228"/>
							</mx:HBox>
							<mx:HBox>
								<s:Label text="Actualidad Edificadora" width="200"/>
								<s:TextArea id="actualidadEdificadoraTextInput" text="{comportamientoOfertaDemanda.actualidadEdificadora}" restrict="{restrict_}" maxChars="500" width="590" enabled="{isEnabled}" height="127" tabIndex="229"/>	
							</mx:HBox>
							<mx:HBox width="100%">
								<s:Label text="Comportamiento Oferta Demanda" width="200"/>
								<s:TextArea id="comportamientoOfertaDemandaTextInput" text="{comportamientoOfertaDemanda.comportamientoOfertaDemanda}" restrict="{restrict_}" maxChars="500" width="590" enabled="{isEnabled}" height="127" tabIndex="230"/>
							</mx:HBox>
							<mx:HBox>
								<s:Button label="Guardar Sección" id="btnGuardarOfertaDemanda" click="btnGuardarOfertaDemanda_clickHandler(event)" enabled="{isEnabled}" tabIndex="231"/>
								<s:Button id="idCancelarOfertaDemanda" label="Cancelar" click="cancelSeccion_clickHandler(event)" tabIndex="232"/>	
							</mx:HBox>
							<mx:HRule width="100%"/>
						</mx:VBox>
						<s:BorderContainer width="267" height="43">
							<mx:VBox horizontalCenter="-194" verticalCenter="-82">
								<mx:HBox>
									<s:Label text="Usuario Creación" fontSize="6" color="#7D7D7D" focusEnabled="false" width="55"/>
									<s:TextInput enabled="false" text="{comportamientoOfertaDemanda.usuarioCreacion}" fontSize="6" height="17" borderVisible="true" color="#7D7D7D" focusEnabled="false"/>
									<s:Label text="Fecha Creación" fontSize="6" color="#7D7D7D" focusEnabled="false" width="55"/>
									<mx:DateField selectedDate="{comportamientoOfertaDemanda.fechaCreacion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
								</mx:HBox>
								<mx:HBox>
									<s:Label text="Usuario Transacción" fontSize="6" color="#7D7D7D" focusEnabled="false" width="55"/>
									<s:TextInput enabled="false" text="{comportamientoOfertaDemanda.usuarioTransaccion}" fontSize="6" height="17" color="#7D7D7D" focusEnabled="false"/>
									<s:Label text="Fecha Transacción" fontSize="6" color="#7D7D7D" focusEnabled="false" width="55"/>
									<mx:DateField selectedDate="{comportamientoOfertaDemanda.fechaTransaccion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
								</mx:HBox>
							</mx:VBox>
						</s:BorderContainer>
					</mx:Form>
				</s:NavigatorContent> 
				<!-- ########################################### FIN OFERTA DEMANDA ###########################################-->
				
				<!-- ########################################### LIQUIDACION AVALUO ###########################################-->
				<s:NavigatorContent label="Liquidación de Avaluo" width="100%" height="100%" tabIndex="233">
					<mx:VBox height="506">
						<mx:VBox>
							<mx:Form defaultButton="{btnGuardarliquidacion}" height="470" width="100%">
								<mx:VBox>
									<mx:HBox width="100%">
										<mx:VBox>
											<s:Label text="Descripción Liquidación" fontWeight="bold" textAlign="center" width="100%"/>
											<s:ComboBox id="cbxDescLiq0" dataProvider="{selectdescliq0}" labelField="rvMeaning" creationComplete="cbxDescLiq0_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo0.descripcionLiquidacion,selectdescliq0,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="234"/>
											<s:ComboBox id="cbxDescLiq1" dataProvider="{selectdescliq1}" labelField="rvMeaning" creationComplete="cbxDescLiq1_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo1.descripcionLiquidacion,selectdescliq1,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="239"/>
											<s:ComboBox id="cbxDescLiq2" dataProvider="{selectdescliq2}" labelField="rvMeaning" creationComplete="cbxDescLiq2_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo2.descripcionLiquidacion,selectdescliq2,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="244"/>
											<s:ComboBox id="cbxDescLiq3" dataProvider="{selectdescliq3}" labelField="rvMeaning" creationComplete="cbxDescLiq3_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo3.descripcionLiquidacion,selectdescliq3,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="249"/>
											<s:ComboBox id="cbxDescLiq4" dataProvider="{selectdescliq4}" labelField="rvMeaning" creationComplete="cbxDescLiq4_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo4.descripcionLiquidacion,selectdescliq4,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="254"/>
											<s:ComboBox id="cbxDescLiq5" dataProvider="{selectdescliq5}" labelField="rvMeaning" creationComplete="cbxDescLiq5_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo5.descripcionLiquidacion,selectdescliq5,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="259"/>
											<s:ComboBox id="cbxDescLiq6" dataProvider="{selectdescliq6}" labelField="rvMeaning" creationComplete="cbxDescLiq6_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo6.descripcionLiquidacion,selectdescliq6,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="264"/>
											<s:ComboBox id="cbxDescLiq7" dataProvider="{selectdescliq7}" labelField="rvMeaning" creationComplete="cbxDescLiq7_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo7.descripcionLiquidacion,selectdescliq7,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="269"/>
											<s:ComboBox id="cbxDescLiq8" dataProvider="{selectdescliq8}" labelField="rvMeaning" creationComplete="cbxDescLiq8_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo8.descripcionLiquidacion,selectdescliq8,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="274"/>
											<s:ComboBox id="cbxDescLiq9" dataProvider="{selectdescliq9}" labelField="rvMeaning" creationComplete="cbxDescLiq9_creationCompleteHandler(event)" selectedIndex="{getItemIndex(liquidacionAvaluo9.descripcionLiquidacion,selectdescliq9,'rvLowValue')}" enabled="{isEnabled}" toolTip="{MSG_DESCLIQ}" tabIndex="279"/>
										</mx:VBox>
										<mx:VBox>
											<s:Label text="Descripción Dependencia" fontWeight="bold" textAlign="center" width="100%"/>
											<s:TextInput id="descripcionDependenciaTextInput0" text="{liquidacionAvaluo0.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="235"/>
											<s:TextInput id="descripcionDependenciaTextInput1" text="{liquidacionAvaluo1.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="240"/>
											<s:TextInput id="descripcionDependenciaTextInput2" text="{liquidacionAvaluo2.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="245"/>
											<s:TextInput id="descripcionDependenciaTextInput3" text="{liquidacionAvaluo3.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="250"/>
											<s:TextInput id="descripcionDependenciaTextInput4" text="{liquidacionAvaluo4.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="255"/>
											<s:TextInput id="descripcionDependenciaTextInput5" text="{liquidacionAvaluo5.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="260"/>
											<s:TextInput id="descripcionDependenciaTextInput6" text="{liquidacionAvaluo6.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="265"/>
											<s:TextInput id="descripcionDependenciaTextInput7" text="{liquidacionAvaluo7.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="270"/>
											<s:TextInput id="descripcionDependenciaTextInput8" text="{liquidacionAvaluo8.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="275"/>
											<s:TextInput id="descripcionDependenciaTextInput9" text="{liquidacionAvaluo9.descripcionDependencia}" height="23" maxChars="30" restrict="{restrict_}" enabled="{isEnabled}" tabIndex="280"/>
										</mx:VBox>
										<mx:VBox>
											<s:Label text="Área (m2)" fontWeight="bold" textAlign="center" width="100%"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput0" text="{liquidacionAvaluo0.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput0_focusOutHandler(event)" tabIndex="236"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput1" text="{liquidacionAvaluo1.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput1_focusOutHandler(event)" tabIndex="241"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput2" text="{liquidacionAvaluo2.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput2_focusOutHandler(event)" tabIndex="246"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput3" text="{liquidacionAvaluo3.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput3_focusOutHandler(event)" tabIndex="251"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput4" text="{liquidacionAvaluo4.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput4_focusOutHandler(event)" tabIndex="256"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput5" text="{liquidacionAvaluo5.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput5_focusOutHandler(event)" tabIndex="261"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput6" text="{liquidacionAvaluo6.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput6_focusOutHandler(event)" tabIndex="266"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput7" text="{liquidacionAvaluo7.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput7_focusOutHandler(event)" tabIndex="271"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput8" text="{liquidacionAvaluo8.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput8_focusOutHandler(event)" tabIndex="276"/>
											<s:TextInput height="23" id="areaLiquidacionTextInput9" text="{liquidacionAvaluo9.areaLiquidacion}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput9_focusOutHandler(event)" tabIndex="281"/>
										</mx:VBox>
										<mx:VBox>
											<s:Label text="Valor Unitario ($/m2)" fontWeight="bold" textAlign="center" width="100%"/>
											<s:TextInput height="23"  id="valorTextInput0" text="{liquidacionAvaluo0.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput0_focusOutHandler(event)" tabIndex="237"/>
											<s:TextInput height="23" id="valorTextInput1" text="{liquidacionAvaluo1.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput1_focusOutHandler(event)" tabIndex="242"/>
											<s:TextInput height="23" id="valorTextInput2" text="{liquidacionAvaluo2.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput2_focusOutHandler(event)" tabIndex="247"/>
											<s:TextInput height="23" id="valorTextInput3" text="{liquidacionAvaluo3.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput3_focusOutHandler(event)" tabIndex="252"/>
											<s:TextInput height="23" id="valorTextInput4" text="{liquidacionAvaluo4.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput4_focusOutHandler(event)" tabIndex="257"/>
											<s:TextInput height="23" id="valorTextInput5" text="{liquidacionAvaluo5.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput5_focusOutHandler(event)" tabIndex="262"/>
											<s:TextInput height="23" id="valorTextInput6" text="{liquidacionAvaluo6.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput6_focusOutHandler(event)" tabIndex="267"/>
											<s:TextInput height="23" id="valorTextInput7" text="{liquidacionAvaluo7.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput7_focusOutHandler(event)" tabIndex="272"/>
											<s:TextInput height="23" id="valorTextInput8" text="{liquidacionAvaluo8.valor}" restrict ="0-9,.," maxChars="23" enabled="{isEnabled}" textAlign="right" focusOut="areaLiquidacionTextInput8_focusOutHandler(event)" tabIndex="277"/>
											<s:TextInput height="23" id="valorTextInput9" text="{liquidacionAvaluo9.valor}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" focusOut="areaLiquidacionTextInput9_focusOutHandler(event)" tabIndex="282"/>
											<s:Label text="Valor Total Avaluo" fontSize="12" fontWeight="bold"/>
											<s:Label text="Valor Asegurable" fontWeight="bold" fontSize="14"/>
										</mx:VBox>
										<mx:VBox>
											<s:Label text="Valor Total" fontWeight="bold" width="100%" textAlign="left"/>
											<mx:HBox>												
												<s:TextInput height="23" id="valorTotalTextInput0F"  text="{formatearMoneda(liquidacionAvaluo0.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="238"/>
												<s:TextInput height="23" id="valorTotalTextInput0"  visible="false" text="{liquidacionAvaluo0.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="238"/>
											</mx:HBox>
											<mx:HBox>
												<s:TextInput height="23" id="valorTotalTextInput1F" text="{formatearMoneda(liquidacionAvaluo1.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="243"/>
												<s:TextInput height="23" id="valorTotalTextInput1" visible="false"  text="{liquidacionAvaluo1.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="243"/>												
											</mx:HBox>
											<mx:HBox>												
												<s:TextInput height="23" id="valorTotalTextInput2F" text="{formatearMoneda(liquidacionAvaluo2.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="248"/>
												<s:TextInput height="23" id="valorTotalTextInput2" visible="false" text="{liquidacionAvaluo2.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="248"/>
											</mx:HBox>
											<mx:HBox>												
												<s:TextInput height="23" id="valorTotalTextInput3F" text="{formatearMoneda(liquidacionAvaluo3.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="253"/>
												<s:TextInput height="23" id="valorTotalTextInput3" visible="false" text="{liquidacionAvaluo3.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="253"/>
											</mx:HBox>
											<mx:HBox>												
												<s:TextInput height="23" id="valorTotalTextInput4F" text="{formatearMoneda(liquidacionAvaluo4.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="258"/>
												<s:TextInput height="23" id="valorTotalTextInput4" visible="false" text="{liquidacionAvaluo4.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="258"/>
											</mx:HBox>
											<mx:HBox>
												<s:TextInput height="23" id="valorTotalTextInput5F" text="{formatearMoneda(liquidacionAvaluo5.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="263"/>
												<s:TextInput height="23" id="valorTotalTextInput5" visible="false" text="{liquidacionAvaluo5.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="263"/>
											</mx:HBox>	
											<mx:HBox>
												<s:TextInput height="23" id="valorTotalTextInput6F" text="{formatearMoneda(liquidacionAvaluo6.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="268"/>
												<s:TextInput height="23" id="valorTotalTextInput6" visible="false" text="{liquidacionAvaluo6.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="268"/>												
											</mx:HBox>			
											<mx:HBox>												
												<s:TextInput height="23" id="valorTotalTextInput7F" text="{formatearMoneda(liquidacionAvaluo7.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="273"/>
												<s:TextInput height="23" id="valorTotalTextInput7" visible="false" text="{liquidacionAvaluo7.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="273"/>
											</mx:HBox>
											<mx:HBox>
												<s:TextInput height="23" id="valorTotalTextInput8F" text="{formatearMoneda(liquidacionAvaluo8.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="278"/>
												<s:TextInput height="23" id="valorTotalTextInput8" visible="false" text="{liquidacionAvaluo8.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="278"/>
											</mx:HBox>
											<mx:HBox>
												<s:TextInput height="23" id="valorTotalTextInput9F" text="{formatearMoneda(liquidacionAvaluo9.valorTotal)}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{false}" tabIndex="283"/>
												<s:TextInput height="23" id="valorTotalTextInput9" visible="false" text="{liquidacionAvaluo9.valorTotal}" restrict ="0-9,.," maxChars="23" focusOut="valorTotalTextInput_focusOutHandler(event)" textAlign="right" enabled="{isEnabled}" tabIndex="283"/>
											</mx:HBox>
											<mx:HBox>
												<s:TextInput id="totalAvaluoTextInputF" text="{formatearMoneda(liquidacionAvaluoTotal.totalAvaluo)}" fontWeight="bold" enabled="false" textAlign="right" tabIndex="284"/>
												<s:TextInput id="totalAvaluoTextInput" visible="false" text="{liquidacionAvaluoTotal.totalAvaluo}" fontWeight="bold" enabled="false" textAlign="right" tabIndex="284"/>
											</mx:HBox>
											<mx:HBox>
												<!--<s:TextInput id="valorAsegurableTextInput" text="{liquidacionAvaluoTotal.valorAsegurable}" fontWeight="bold" fontSize="14" width="129" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}"/>-->
												<s:TextInput id="valorAsegurableTextInputF" text="{formatearMoneda(liquidacionAvaluoTotal.valorAsegurable)}" fontWeight="bold" fontSize="14" width="129" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="false" tabIndex="285"/>
												<s:TextInput id="valorAsegurableTextInput" visible="false" text="{liquidacionAvaluoTotal.valorAsegurable}" fontWeight="bold" fontSize="14" width="129" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="false" tabIndex="285"/>
												<!--<s:TextInput id="valorAsegurableTextInput" text="{liquidacionAvaluoTotal.valorAsegurable}" fontWeight="bold" fontSize="14" width="129" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="{isEnabled}" change="valorAsegurableTextInput.text=cf.format(valorAsegurableTextInput.text);"/>-->
											</mx:HBox>	
										</mx:VBox>
									</mx:HBox>
									<mx:HBox>
										<mx:FormItem label="Calificación" fontWeight="bold" fontSize="16">
											<s:ComboBox id="cbxCalificacion" creationComplete="cbxCalificacion_creationCompleteHandler(event)" labelField="rvMeaning" dataProvider="{selectcalificacion}" selectedIndex="{getItemIndex(liquidacionAvaluoTotal.calificacion,selectcalificacion,'rvLowValue')}" enabled="{isEnabled}" tabIndex="287"/>
										</mx:FormItem>
										
									</mx:HBox>
									<mx:HBox>
										<mx:FormItem label="Valor Uvr Dia">
											<s:TextInput id="valorUvrDiaTextInput" click="valorUvrDiaTextInput_clickHandler(event)" text="{liquidacionAvaluoTotal.valorUvrDia}" restrict ="0-9,.," maxChars="23" textAlign="right" enabled="false" tabIndex="288"/>
										</mx:FormItem>
										<mx:FormItem label="Valor Avaluo en Uvr">
											<mx:HBox>
												<!--<s:TextInput id="avaluoUvrTextInputF" enabled="false" focusIn="valorUvrDiaTextInput_focusOutHandler(event)" text="{formatearMoneda(liquidacionAvaluoTotal.avaluoUvr)}" maxChars="23" textAlign="right" restrict="0-9,.,\," toolTip="{MSG_VALOR_AVALO}" tabIndex="289"/>-->
												<s:TextInput id="avaluoUvrTextInput" focusIn="valorUvrDiaTextInput_focusOutHandler(event)" text="{liquidacionAvaluoTotal.avaluoUvr}" maxChars="23" textAlign="right" restrict="0-9,.,\," toolTip="{MSG_VALOR_AVALO}" tabIndex="289"/>												
											</mx:HBox>
										</mx:FormItem>
									</mx:HBox>
								</mx:VBox>
							</mx:Form>
						</mx:VBox>
						<mx:HBox>
							<s:Button label="Guardar Sección" id="btnGuardarliquidacion"  click="button9_clickHandler(event)" enabled="{isEnabled}" tabIndex="290"/>
							<s:Button id="idCancelarLiquidacion" label="Cancelar" click="cancelSeccion_clickHandler(event)" tabIndex="291"/>	
						</mx:HBox>
					</mx:VBox>
					<mx:HRule width="100%" x="-10" y="509"/>
					<s:BorderContainer width="264" height="43" x="0" y="511">
						<mx:VBox horizontalCenter="-194" verticalCenter="-82">
							<mx:HBox>
								<s:Label text="Usuario Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{liquidacionAvaluoTotal.usuarioCreacion}" width="65" fontSize="6" height="17" borderVisible="true" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{liquidacionAvaluoTotal.fechaCreacion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
							<mx:HBox>
								<s:Label text="Usuario Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<s:TextInput enabled="false" text="{liquidacionAvaluoTotal.usuarioTransaccion}" width="65" fontSize="6" height="17" color="#7D7D7D" focusEnabled="false"/>
								<s:Label text="Fecha Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
								<mx:DateField selectedDate="{liquidacionAvaluoTotal.fechaTransaccion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
							</mx:HBox>
						</mx:VBox>
					</s:BorderContainer>
				</s:NavigatorContent> 
				<!-- ########################################### FIN LIQUIDACION AVALUO ###########################################-->
				
				<!-- ########################################### OBSERVACIONES ###########################################-->
				<s:NavigatorContent label="Observaciones" width="100%" height="100%" tabIndex="292" fontWeight="normal">
					<mx:Form defaultButton="{btnGuardarObservaciones}" x="-5" y="10" width="100%" id="frmObservaciones">
						<mx:FormItem label="Dirección Anexos">
							<s:TextInput id="direccionAnexosTextInput" text="{observaciones.direccionAnexos}" width="405" restrict="{restrict_}" maxChars="100" enabled="true" tabIndex="293" focusOut="direccionAnexosTextInput_changeHandler(event)"/>
						</mx:FormItem>
						<mx:FormItem label="Otras Direcciones">
							<s:TextInput id="otrasDireccionesTextInput" text="{observaciones.otrasDirecciones}" width="404" restrict="{restrict_}" maxChars="100" enabled="true" tabIndex="294" focusOut="validarOtrasDireccciones(event)"/>
						</mx:FormItem>
						<mx:FormItem label="Observación Avaluo">
							<s:TextArea id="observacionAvaluoTextInput" text="{observaciones.observacionAvaluo}" width="689" height="78" restrict="{restrict_}" maxChars="2000" enabled="true" tabIndex="295"/>
							<s:Label x="3" y="65" text="(Max 1999 Caracteres)" fontSize="9"/>
						</mx:FormItem>
						<mx:HBox>
							<s:Button label="Guardar Sección" id="btnGuardarObservaciones" click="btnGuardarObservaciones_clickHandler(event)" enabled="{isEnabled}" tabIndex="296"/>
							<s:Button id="idCancelarObservaciones" label="Cancelar" click="cancelSeccion_clickHandler(event)" tabIndex="297" enabled="true"/>
						</mx:HBox>
						<mx:HRule width="100%"/>
						<s:BorderContainer width="264" height="46">
							<mx:VBox horizontalCenter="-194" verticalCenter="-82">
								<mx:HBox>
									<s:Label text="Usuario Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
									<s:TextInput enabled="false" text="{observaciones.usuarioCreacion}" width="65" fontSize="6" height="17" borderVisible="true" color="#7D7D7D" focusEnabled="false"/>
									<s:Label text="Fecha Creación" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
									<mx:DateField selectedDate="{observaciones.fechaCreacion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
								</mx:HBox>
								<mx:HBox>
									<s:Label text="Usuario Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
									<s:TextInput enabled="false" text="{observaciones.usuarioTransaccion}" width="65" fontSize="6" height="17" color="#7D7D7D" focusEnabled="false"/>
									<s:Label text="Fecha Transacción" width="55" fontSize="6" color="#7D7D7D" focusEnabled="false"/>
									<mx:DateField selectedDate="{observaciones.fechaTransaccion}" formatString="DD/MM/YYYY" enabled="false" fontSize="6" height="17" focusEnabled="false"/>
								</mx:HBox>
							</mx:VBox>
						</s:BorderContainer>
					</mx:Form>
				</s:NavigatorContent> 
				<!-- ########################################### FIN OBSERVACIONES ###########################################-->
				
				<!-- ########################################### ANEXO FOTOGRAFICO ###########################################-->
				<s:NavigatorContent label="Registro Fotográfico" width="100%" height="100%" tabIndex="298">
					<mx:VBox width="100%"  horizontalAlign="center" x="0" y="14" height="100%">
						<mx:HBox width="80%" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
							<mx:Panel id="pnlUpload" title="Cargar Fachada" paddingTop="10" fontWeight="normal" paddingBottom="10" paddingLeft="10" paddingRight="10" height="146" width="100%" dropShadowVisible="false" x="50">
								<file:FileUploadAnexos id="fileUploadFachada" creationComplete="fileUploadFachada.init(uploadProgress, null,this);"/>
								<mx:ProgressBar id="uploadProgress" label="" mode="manual" />
								<mx:ControlBar horizontalAlign="right">
									<s:Button id="startUploadFachada" label="Cargar" click="startUploadFachada_clickHandler(event)" enabled="{isEnabled}" tabIndex="299"/>
								</mx:ControlBar>
							</mx:Panel>
							<mx:Panel id="pnlDownload" title="Descargar Fachada" paddingTop="10" fontWeight="normal" paddingBottom="10" paddingLeft="10" paddingRight="10" height="146" width="100%" dropShadowVisible="false">
								<mx:ProgressBar id="downloadProgress" label="" mode="manual" />
								<mx:ControlBar horizontalAlign="right">
									<s:Button id="startDownload" label="Descargar" click="startDownload_clickHandler(event)"  tabIndex="302"/>
								</mx:ControlBar>
							</mx:Panel>
						</mx:HBox>	
						<mx:HBox width="80%" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
							<mx:Panel id="pnlUploadDocAnexo" title="Cargar Anexo Fotográfico" fontWeight="normal" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10" height="146" width="100%" dropShadowVisible="false">
								<file:FileUploadAnexos id="fileUploadDocAnexos" creationComplete="fileUploadDocAnexos.init(uploadProgressDocAnexos, null,this);"/>
								<mx:ProgressBar id="uploadProgressDocAnexos" label="" mode="manual" />
								<mx:ControlBar horizontalAlign="right">
									<s:Button id="startImgsAnexo" label="Imágenes Individuales" click="startImgsAnexo_clickHandler(event)" enabled="{existsFachada || ((avaluo2.anexosFotograficos != null))}" tabIndex="300"/>
									<s:Button id="startUploadDocAnexos" label="Cargar" click="startUploadDocAnexos_clickHandler(event)" enabled="{isEnabled}" tabIndex="301"/>
								</mx:ControlBar>
							</mx:Panel>
							<mx:Panel id="pnlDownloadAnexo" title="Descargar Anexo Fotográfico" fontWeight="normal" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10" height="146" width="100%" dropShadowVisible="false">
								<mx:ProgressBar id="downloadProgressDocAnexos" label="" mode="manual" />
								<mx:ControlBar horizontalAlign="right">
									<s:Button id="startDownloadDocAnexos" label="Descargar" click="startDownloadDocAnexos_clickHandler(event)"  tabIndex="303"/>
								</mx:ControlBar>
							</mx:Panel>
						</mx:HBox>
						<s:Button id="idCancelarAnexos" label="Cancelar" click="cancelSeccion_clickHandler(event)"/>
					</mx:VBox>
				</s:NavigatorContent> 
				<!-- ########################################### FIN ANEXO FOTOGRAFICO ###########################################-->
				
			</mx:Accordion>
			<s:Label id="mensajes" x="10" y="1" text=" " width="833" color="#FD0000" fontWeight="bold" textDecoration="underline"/>
		</s:NavigatorContent>
		<!-- ########################################### FIN CREACION AVALUO (ACORDEON) ###########################################-->
	</mx:ViewStack>
</mx:Module>