<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   xmlns:comp="com.segurosbolivar.avaluos.componentes.*"
		   xmlns:services="services.*"
		   width="98%" height="98%"		 
		   updateComplete="module1_updateCompleteHandler(event)"
		   xmlns:valueObjects="valueObjects.*">
	
	<fx:Script>
		<![CDATA[
			import com.segurosbolivar.avaluos.modulos.Utilidad;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import org.flexunit.internals.matchers.Each;
			import org.hamcrest.core.throws;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import valueObjects.Avaluo;
			import valueObjects.CampoRequeridoDTO;
			import valueObjects.Ciudad;
			import valueObjects.Departamento;
			import valueObjects.DominiosAux;
			import valueObjects.LiquidacionAvaluo;
			import valueObjects.Usuario;
			
			
			// Variables globales de la clase 
			public static var coordenadasLatitud:String="";
			public static var coordenadasLongitud:String="";
			public var numeroIdentificacion3:String;
			public var consecutivOld:String;
			private static var nombreSeccionDirecccion:String = new String();
			
			public var  numeroIdentificacion3changed:Boolean=false;
			
			
			[Bindable]
			public static var selectDepartamento:ArrayCollection = new ArrayCollection() ;
			
			[Bindable]
			public static var selectTipoId:ArrayCollection = new ArrayCollection() ;
			
			[Bindable]
			public static var selectObjeto:ArrayCollection = new ArrayCollection() ;
			
			[Bindable]
			public static var selectCiudadbasico:ArrayCollection = new ArrayCollection() ;
			
			[Bindable]
			public static var selectSector:ArrayCollection = new ArrayCollection() ;
			
			[Bindable]
			public static var selectMetodologia:ArrayCollection = new ArrayCollection() ;
			
			public function ubicacionGpsTextInput_focusOutHandler(event:FocusEvent):void
			{
				var coordenadas:String = ubicacionGpsTextInput.text; 
				
				var vResult:ValidationResultEvent;
				
				// TODO Auto-generated method stub				
				if(coordenadas!=null && coordenadas.length > 0 )
				{
					//var coordenadasArray:Array = coordenadas.split(";");
					var coordenadasArray:Array = coordenadas.split(",");
					//avaluo.ubicacionGpsTextInput
					try{
						coordenadasLatitud =coordenadasArray[0];
						coordenadasLongitud=coordenadasArray[1];
						
						if(coordenadasLongitud!="" && coordenadasLatitud!="")
						{	
							coordenadasLatitud  = numberFormatter.format(coordenadasLatitud) ;
							coordenadasLongitud = numberFormatter.format(coordenadasLongitud) ;
							parentDocument.avaluo.ubicacionGps = coordenadasLatitud+","+coordenadasLongitud;
							ubicacionGpsTextInput.text = parentDocument.avaluo.ubicacionGps ;
						}
						
					}catch(e:Error)
					{
						
					}
					
					vResult = LatitudNumberValidator.validate(coordenadasLatitud);					
					if (vResult.type==ValidationResultEvent.VALID) {
						// Validation succeeded.
						// valid=true;
						coordenadasLatitudTextInput.text=coordenadasLatitud;
					}else {
						// Validation failed.
						// valid=false;
						coordenadasLatitudTextInput.text="";
						return ; 
					}
					
					vResult = LongitudNumberValidator.validate(coordenadasLongitud);					
					if (vResult.type==ValidationResultEvent.VALID) {
						// Validation failed.
						// valid=false;
						coordenadasLongitudTextInput.text=coordenadasLongitud;
						imprimirEstadoProceso(""); 
					}else{
						coordenadasLongitudTextInput.text="";
					}
				}
			}
			
			protected function getValoresDominioResult_resultHandler(event:ResultEvent):void
			{
				if (selectTipoId == null || selectTipoId.length < 1){ 
					selectTipoId = getValoresDominioResult.lastResult;
					selectTipoId.removeItemAt(0);
				}				
			}
			
			protected function numeroIdentificacionTextInput3_focusOutHandler(event:FocusEvent):void
			{	
				if(numeroIdentificacionTextInput3 != null && 
					numeroIdentificacionTextInput3.text != null && 
					StringUtil.trim(numeroIdentificacionTextInput3.text).length > 0 && 
					fechaAvaluoDateField2 != null && 
					fechaAvaluoDateField2.text != null && 
					StringUtil.trim(fechaAvaluoDateField2.text).length > 0){ 
					var fechaTmp:String = fechaAvaluoDateField2.text.replace("/","").replace("/","");
					existeConsecutivoResult.token = parentDocument.avaluosService.existeConsecutivo(fechaTmp + numeroIdentificacionTextInput3.text);
				}
			}
			
			protected function existeConsecutivoResult_resultHandler(event:ResultEvent):void
			{
				var existeConsecutivo:Boolean=false;
				existeConsecutivo=existeConsecutivoResult.lastResult;
				var mensaje:String = "" ; 
				if(existeConsecutivo)
				{
					mensaje = "Un avaluo con este nuevo consecutivo ya existe." ;
					numeroIdentificacionTextInput3.text = "";					
					consecutivoBancoTextInput.text = "" ;
				}
				else
				{
					var fechaTmp:String = fechaAvaluoDateField2.text.replace("/","").replace("/","");
					consecutivoBancoTextInput.text = fechaTmp + numeroIdentificacionTextInput3.text;
				}	
				imprimirEstadoProceso(mensaje);
			}
			
			protected function fechaAvaluoDateField2_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				var fecha:String = fechaAvaluoDateField2.text;
				getUvrDia(fecha);
				consecutivoBancoTextInput.text = fechaAvaluoDateField2.text.replace("/","").replace("/","") + numeroIdentificacionTextInput3.text;
			}
			
			protected function getUvrDia(arg0:String):void
			{
				getUvrDiaResult.token = parentDocument.liquidacionTotalService.getUvrDia(arg0);
			}
			
			protected function getUvrDiaResult_resultHandler(event:ResultEvent):void
			{
				liquidacionAvaluoTotal.valorUvrDia = getUvrDiaResult.lastResult;
				var uvrDiaNumer:Number = new Number(liquidacionAvaluoTotal.valorUvrDia);
				if(liquidacionAvaluoTotal.totalAvaluo != null && (uvrDiaNumer > 0 )){
					var totalAvaluoNumber:Number = new Number(liquidacionAvaluoTotal.totalAvaluo);
					var uvrDiaNumber:Number = new Number(liquidacionAvaluoTotal.valorUvrDia);
					var avaluoUvr:Number = Math.round((totalAvaluoNumber / uvrDiaNumber)*10000)/10000;
					liquidacionAvaluoTotal.avaluoUvr = new String(avaluoUvr);
				}
			}
			
			protected function cbxObjetivo_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectObjeto==null || selectObjeto.length<1)	
					getValoresDominioResult30.token = parentDocument.dominiosAuxDao.getValoresDominio("OBJETOAVALUO");
				
			}
			
			protected function getValoresDominioResult30_resultHandler(event:ResultEvent):void
			{
				if(selectObjeto == null || selectObjeto.length < 1)
					selectObjeto = getValoresDominioResult30.lastResult;
			}
			
			protected function direccionInmuebleTextInput3_focusOutHandler(event:FocusEvent):void
			{
				if(convierteDireccionDaneResult3.token == null){
					if(direccionInmuebleTextInput3.text != null && direccionInmuebleTextInput3.text.length > 0){
						imprimirEstadoProceso("Validando el formato de la direccion"); 
						convierteDireccionDaneResult3.token = parentDocument.tercerosWebService.convierteDireccionDane(direccionInmuebleTextInput3.text);
					}
				}else{
					convierteDireccionDaneResult3.token = null ;
					convierteDireccionDaneResult3.lastResult = null ;					
				}
			}
			
			protected function convierteDireccionDaneResult3_resultHandler(event:ResultEvent):void
			{
				var mensaje:String = "" ; 
				if(!((convierteDireccionDaneResult3.lastResult != " ") && (convierteDireccionDaneResult3.lastResult))){
					mensaje = "Direcci칩n no v치lida" ;					
				}else{					
					parentDocument.avaluo.direccionInmueble =  convierteDireccionDaneResult3.lastResult;
				}
				imprimirEstadoProceso(mensaje);
				convierteDireccionDaneResult3.token = null ; 
				convierteDireccionDaneResult3.lastResult = null;
			}
			
			/**
			 * Permite llenar el comobo de ciudades del bloque basico, actualiza el codigo del dpto[ok]
			 * */
			protected function cbxDepartamentoBasico_changeHandler(event:IndexChangeEvent):void
			{
				if(event == null || event.oldIndex != -1 )
				{	
					if(cbxDepartamentoBasico.selectedIndex == spark.components.ComboBox.CUSTOM_SELECTED_ITEM)
					{	
						//cbxDepartamentoBasico.selectedIndex = -1;
						cbxDepartamentoBasico.selectedIndex = event.oldIndex;
					}else if(cbxDepartamentoBasico.selectedItem == null){
						selectCiudadbasico = new ArrayCollection(); 
					}else{
						selectCiudadbasico = new ArrayCollection();
						selectCiudadbasico = cbxDepartamentoBasico.selectedItem.ciudadesDepto;
						cbxCiudadBasico.invalidateDisplayList();
						cbxCiudadBasico.selectedIndex = -1;
						txiCodDaneDepto.text = (cbxDepartamentoBasico.selectedItem as Departamento).codDane;
					}										
				}
			}
			
			/**
			 * Permite  llenar el combo de departamentos en informaci칩n b치sica
			 * */
			protected function cbxDepartamento_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectDepartamento==null || selectDepartamento.length<1){
					consultaDepartamentosResult.token = parentDocument.departamentoService.consultaDepartamentos();
				}				
			}
			
			protected function consultaDepartamentosResult_resultHandler(event:ResultEvent):void
			{
				selectDepartamento = consultaDepartamentosResult.lastResult;				
			}
			
			protected function cbxDepartamentoBasico_focusOutHandler(event:FocusEvent):void
			{
				// TODO Auto-generated method stub				
				cbxDepartamentoBasico_changeHandler(null);
				if(parentDocument.avaluo.objCiudad != null){
					cbxCiudadBasico.selectedItem = parentDocument.avaluo.objCiudad ;  
				}				 
			}
			
			/**
			 * Permite actualizar el codigo de la ciudad
			 * */
			protected function cbxCiudadBasico_changeHandler(event:IndexChangeEvent):void
			{
				if(cbxCiudadBasico.selectedIndex == spark.components.ComboBox.CUSTOM_SELECTED_ITEM)
				{	
					cbxCiudadBasico.selectedIndex = event.oldIndex;
				}	
				else{
					txiCodDaneCiudad.text = (cbxCiudadBasico.selectedItem as Ciudad).codDane; 
				}
			}
			
			protected function cbxSector_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectSector==null || selectSector.length<1)
					getValoresDominioResult31.token = parentDocument.dominiosAuxDao.getValoresDominio("SECTOR");				
			}
			
			protected function getValoresDominioResult31_resultHandler(event:ResultEvent):void
			{
				if(selectSector==null || selectSector.length<1)
					selectSector = getValoresDominioResult31.lastResult;
			}
			
			protected function cbxMetodologia_creationCompleteHandler(event:FlexEvent):void
			{
				if(selectMetodologia==null || selectMetodologia.length<1){
					getValoresDominioResult29.token = parentDocument.dominiosAuxDao.getValoresDominio("METODOLOGIA");
				}				
			}
			
			protected function getValoresDominioResult29_resultHandler(event:ResultEvent):void
			{
				if(selectMetodologia==null || selectMetodologia.length<1){
					selectMetodologia = getValoresDominioResult29.lastResult;
				}
			}
			
			public function validarCamposVacios():Boolean{
				var vResult:ValidationResultEvent;
				vResult = LatitudNumberValidator.validate(coordenadasLatitudTextInput.text);
				if (vResult.type!=ValidationResultEvent.VALID) {
					// Validation failed.
					throw new Error("El valor de la latitud es incorrecto");
				}
				
				vResult = LongitudNumberValidator.validate(coordenadasLongitudTextInput.text);
				if (vResult.type!=ValidationResultEvent.VALID) {
					// Validation failed.
					throw new Error("El valor de la longitud es incorrecto");
				}
				
				if(direccionInmuebleTextInput3.text.length == 0){
					throw new Error("La direcci칩n no puede estar vacia, diligencie una direcci칩n.", "Validaci칩n de registros"); 
				}else{
					if(parentDocument.avaluo.direccionInmueble == null || parentDocument.avaluo.direccionInmueble.length == 0){
						throw new Error("Un momento por favor. Se esta terminando de realizar la validaci칩n de la direcci칩n. En un instante puede continuar ", "Validaci칩n de registros"); 
					}else {
						if(parentDocument.avaluo.direccionInmueble != direccionInmuebleTextInput3.text){
							throw new Error("Un momento por favor. Se esta terminando de realizar la validaci칩n de la direcci칩n. En un instante puede continuar", "Validaci칩n de registro");
						}
					}					
				}
				
				var camposObligatorios:ArrayCollection = Utilidad.obtenerCamposVacios(getListaCampos(0), this);
				if(camposObligatorios != null && camposObligatorios.length > 0){
					Utilidad.validarCamposObligarios(camposObligatorios,this); 
					var camposMensaje:String = "" ; 
					for each (var campos:CampoRequeridoDTO in camposObligatorios){
						camposMensaje += campos.nombreComponente ; 
					}
					imprimirEstadoProceso("Recuerde diligenciar los siguientes campos: " + camposMensaje);
				}
				
				validarCampos(0,false);
				
				return true ; 
			}
			
			/**
			 * Actualiza los datos del bloque informaci칩n b치sica
			 * */
			public function guardarInformacionBasica(avaluo:Avaluo, myUsuario:Usuario):void {
				
				if(avaluo != null){
					imprimirEstadoProceso("Guardando Informaci칩n B치sica"); 
					if(avaluo.informacionBarrio != null){
						parentDocument.avaluo.informacionBarrio = avaluo.informacionBarrio ;  
					}
					if(avaluo.informacionInmueble != null){
						parentDocument.avaluo.informacionInmueble = avaluo.informacionInmueble ;
					}
					if(avaluo.informacionConstruccion != null){
						parentDocument.avaluo.informacionConstruccion = avaluo.informacionConstruccion ;
					}
					if(avaluo.condicionSalubridad != null){
						parentDocument.avaluo.condicionSalubridad = avaluo.condicionSalubridad ;
					}
					if(avaluo.compOfertaDemanda!= null){
						parentDocument.avaluo.compOfertaDemanda = avaluo.compOfertaDemanda ;
					}
					if(avaluo.liquidacionAvaluos!= null){
						parentDocument.avaluo.liquidacionAvaluos = avaluo.liquidacionAvaluos ;
					}
					if(avaluo.liquidacionTotal!= null){
						parentDocument.avaluo.liquidacionTotal = avaluo.liquidacionTotal ;
					}
					if(avaluo.observacion!= null){
						parentDocument.avaluo.observacion = avaluo.observacion ;
					}
					if(avaluo.idAvaluo != null){ 
						parentDocument.avaluo.idAvaluo = avaluo.idAvaluo ; 
						parentDocument.avaluo.usuarioCreacion = avaluo.usuarioCreacion ; 
						parentDocument.avaluo.fechaCreacion = avaluo.fechaCreacion ; 
						
						if(avaluo.codigoDaneDepartamento != null && cbxCiudadBasico != null && cbxCiudadBasico.selectedIndex == -1) {
							parentDocument.avaluo.codigoDaneDepartamento = avaluo.codigoDaneDepartamento;
							var indexDepartamento:int = Utilidad.getItemIndex(avaluo.codigoDaneDepartamento,selectDepartamento,'codAsobancaria');
							selectCiudadbasico =  (selectDepartamento[indexDepartamento] as Departamento).ciudadesDepto;
						}
						
						if(avaluo.objCiudad != null) {
							parentDocument.avaluo.objCiudad = avaluo.objCiudad;
						}
						
						if(avaluo.codigoDaneCiudad != null) {
							parentDocument.avaluo.codigoDaneCiudad = avaluo.codigoDaneCiudad;
						}
						
						if(avaluo.idCiudad != null) {
							parentDocument.avaluo.idCiudad = avaluo.idCiudad;
						}
						
					}
					if(avaluo.ubicacionGps != null){
						parentDocument.avaluo.ubicacionGps = avaluo.ubicacionGps;
						ubicacionGpsTextInput_focusOutHandler(null); 
					}
					
				} 
				
				parentDocument.avaluo.nombreSolicitante = nombreSolicitanteTextInput2.text;
				if((cbxIdTipoIdentificacion != null) && (cbxIdTipoIdentificacion.selectedIndex > -1)) {
					parentDocument.avaluo.tipoDocumento = cbxIdTipoIdentificacion.selectedItem.rvAbbreviation;
				}
				if((cbxIdTipoIdentificacion != null) && (cbxIdTipoIdentificacion.selectedIndex > -1)) {
					parentDocument.avaluo.idTipoIdentificacion = cbxIdTipoIdentificacion.selectedItem.rvLowValue;
				}
				
				//cambio de cedula
				parentDocument.avaluo.consecutivoBanco=consecutivoBancoTextInput.text;
				
				parentDocument.avaluo.numeroIdentificacion = numeroIdentificacionTextInput3.text;
				parentDocument.avaluo.fechaAvaluo = fechaAvaluoDateField2.selectedDate;
				parentDocument.avaluo.telefonoSolicitante = telefonoSolicitanteTextInput.text;
				parentDocument.avaluo.celularSolicitante = celularSolicitanteTextInput.text;
				parentDocument.avaluo.correoSolicitante = correoSolicitanteTextInput.text;
				if((cbxSector != null) && (cbxSector.selectedIndex > -1)) {
					parentDocument.avaluo.sector = cbxSector.selectedItem.rvLowValue;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					parentDocument.avaluo.objCiudad = cbxCiudadBasico.selectedItem;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					parentDocument.avaluo.codigoDaneCiudad = cbxCiudadBasico.selectedItem.codDane;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					parentDocument.avaluo.idCiudad = cbxCiudadBasico.selectedItem.codAsobancaria;
				}
				if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
					parentDocument.avaluo.codigoDaneDepartamento = cbxCiudadBasico.selectedItem.departamento.codDane;
				}
				parentDocument.avaluo.nombreConjuntoEdificio = nombreConjuntoEdificioTextInput.text;
				parentDocument.avaluo.barrio = barrioTextInput2.text;
				if((cbxMetodologia != null) && (cbxMetodologia.selectedIndex > -1)) {
					parentDocument.avaluo.idMetodologia = cbxMetodologia.selectedItem.rvLowValue;
				}
				if((cbxObjetivo != null) && (cbxObjetivo.selectedIndex > -1)) {
					parentDocument.avaluo.idObjetoAvaluo = cbxObjetivo.selectedItem.rvLowValue;
				}
				parentDocument.avaluo.justificacion = justificacionTextInput.text;
				
				if(chkTipoInforme == null || chkTipoInforme.selected == false ){
					parentDocument.avaluo.tipoInforme = "1";
				}else {
					parentDocument.avaluo.tipoInforme = "2";
				}
				
				parentDocument.avaluo.ubicacionGps = ubicacionGpsTextInput.text;
				parentDocument.avaluo.TUsuario = myUsuario.codigoUsuario;
				parentDocument.avaluo.usuarioCreacion = myUsuario.codigoUsuario;
				parentDocument.avaluo.usuarioTransaccion = myUsuario.codigoUsuario;
				parentDocument.avaluo.latitudSFBUA 			= coordenadasLatitud;
				parentDocument.avaluo.longitudSFBUA 			= coordenadasLongitud;
				parentDocument.avaluo.sistemaCoordenadasTxtBUA = sisCoordBUATxtTextInput.text;
				
				if(avaluo != null){
					if(avaluo.informacionBarrio != null){
						parentDocument.avaluo.informacionBarrio.getItemAt(0).avaluo = parentDocument.avaluo ;  
					}
					if(avaluo.informacionInmueble != null){
						parentDocument.avaluo.informacionInmueble.getItemAt(0).avaluo = parentDocument.avaluo ;
					}
					if(avaluo.informacionConstruccion != null){
						parentDocument.avaluo.informacionConstruccion.getItemAt(0).avaluo = parentDocument.avaluo ;
					}
					if(avaluo.condicionSalubridad != null){
						parentDocument.avaluo.condicionSalubridad.getItemAt(0).avaluo = parentDocument.avaluo ;
					}
					if(avaluo.compOfertaDemanda!= null){
						parentDocument.avaluo.compOfertaDemanda.getItemAt(0).avaluo = parentDocument.avaluo ;
					}
					if(avaluo.liquidacionAvaluos!= null){
						for each(var liquidacion:LiquidacionAvaluo in parentDocument.avaluo.liquidacionAvaluos){
							liquidacion.avaluo = parentDocument.avaluo ;	
						}						
					}
					if(avaluo.liquidacionTotal!= null){
						parentDocument.avaluo.liquidacionTotal.getItemAt(0).avaluo = parentDocument.avaluo ;
					}
					if(avaluo.observacion!= null){
						parentDocument.avaluo.observacion.getItemAt(0).avaluo = parentDocument.avaluo ;
					}
				} 
				
				updateResult.token = parentDocument.avaluosService.update(parentDocument.avaluo);				 
				
			}
			
			protected function updateResult_resultHandler(event:ResultEvent):void
			{
				if(updateResult != null && updateResult.lastResult != null){
					imprimirEstadoProceso("Transacci칩n exitosa. Bloque Informaci칩n b치sica"); 
					parentDocument.parentDocument.parentDocument.avaluoVO = updateResult.lastResult;
					parentDocument.avaluo = updateResult.lastResult;
					parentDocument.nextTabAvaluo(); 
					parentDocument.parentDocument.parentDocument.valorUvrDiaTextInput_clickHandler(null);
				}
			}
			
			protected function cbxIdTipoIdentificacion_updateCompleteHandler(event:FlexEvent):void
			{
				if (selectTipoId == null || selectTipoId.length < 1){
					var dominio:DominiosAux = new DominiosAux();
					dominio.rvDomain = "TIPOIDENTIFICACION";
					getValoresDominioResult.token = parentDocument.dominiosAuxDao.getValoresDominioProcedatos(dominio);
				}
			}
			
			
			protected function cbxObjetivo_updateCompleteHandler(event:FlexEvent):void
			{
				cbxObjetivo_creationCompleteHandler(null); 				
			}
			
			
			protected function justificacionTextInput_focusOutHandler(event:FocusEvent):void
			{
				sisCoordBUATxtTextInput.setFocus(); 
			}
			
			
			protected function fechaAvaluoDateField2_focusOutHandler(event:FocusEvent):void
			{
				if(numeroIdentificacionTextInput3 != null && 
					numeroIdentificacionTextInput3.text != null && 
					StringUtil.trim(numeroIdentificacionTextInput3.text).length > 0 && 
					fechaAvaluoDateField2 != null && 
					fechaAvaluoDateField2.text != null && 
					StringUtil.trim(fechaAvaluoDateField2.text).length > 0){ 
					var fechaTmp:String = fechaAvaluoDateField2.text.replace("/","").replace("/","");
					existeConsecutivoResult.token = parentDocument.avaluosService.existeConsecutivo(fechaTmp + numeroIdentificacionTextInput3.text);
				}
			}
			
			public function ejecutarValidacionCamposObligatorios(categoria:int):ArrayCollection{
				return Utilidad.validarCamposObligarios(Utilidad.obtenerCamposVacios(getListaCampos(categoria), this),this); 
			}
			
			public function getListaCampos(categoria:int):ArrayCollection
			{
				var arrayDto : ArrayCollection = new ArrayCollection();
				var mapCampos:Object = new Object();
				
				mapCampos["nombreSolicitanteTextInput2"] = "T_NOMBRESOLICITANTE";
				mapCampos["cbxIdTipoIdentificacion"] = "C_IDTIPOIDENTIFICACION";
				mapCampos["cbxObjetivo"] = "C_IDOBJETOAVALUO";
				mapCampos["direccionInmuebleTextInput3"] = "T_DIRINMUEBLE";
				mapCampos["barrioTextInput2"] = "T_BARRIO";
				mapCampos["nombreConjuntoEdificioTextInput"] = "T_NOMBCONJEDIF";
				mapCampos["cbxDepartamentoBasico"] = "A_CODDANE_DEPTO";
				mapCampos["cbxCiudadBasico"] = "A_CODDANE_CIUDAD";
				mapCampos["cbxSector"] = "T_SECTOR";
				mapCampos["ubicacionGpsTextInput"] = "A_UBICGPS";
				//correoSolicitanteTextInput
				mapCampos["correoSolicitanteTextInput"] = "A_SOLCORREO";
				
				mapCampos["telefonoSolicitanteTextInput"] = "A_SOLTEL";
				//celularSolicitanteTextInput
				mapCampos["celularSolicitanteTextInput"] = "A_SOLCEL";
				
				mapCampos["justificacionTextInput"] = "T_JUSTIFICACION";
				//cbxMetodologia
				mapCampos["cbxMetodologia"] = "C_IDMETODOLOGIA";
				
				mapCampos["sisCoordBUATxtTextInput"] = "T_SISTEMA";
				
				
				for (var key:String in mapCampos) {
					trace(" " + key + " - " +mapCampos[key]);
					var campoDto:CampoRequeridoDTO = new CampoRequeridoDTO();
					campoDto.nombretablaBD="PGB_AVALUOS";
					campoDto.nombrecampoBD=mapCampos[key];
					campoDto.nombreComponente=key;
					campoDto.categoriaInmueble=categoria.toString();
					
					arrayDto.addItem(campoDto);
					
				}
				return arrayDto ; 
			}
			
			protected function validarCampos(categoria:int, todos:Boolean):void
			{				
				ejecutarValidacionCamposObligatorios(categoria); 
			}
			
			protected function getAvaluosPorIdResult_resultHandler(event:ResultEvent):void
			{
				//Se instancian nuevamente todos los objetos
				parentDocument.avaluo = new Avaluo(); 
				parentDocument.avaluo = getAvaluosPorIdResult.lastResult as Avaluo;
				
				if(parentDocument.avaluo != null){ 
					
					if(parentDocument.avaluo.ubicacionGps != null){
						ubicacionGpsTextInput_focusOutHandler(null); 
					}
					
					if((cbxCiudadBasico != null) && (cbxCiudadBasico.selectedIndex > -1)) {
						parentDocument.avaluo.codigoDaneDepartamento = cbxCiudadBasico.selectedItem.departamento.codDane;
					}
					
					if(parentDocument.avaluo.codigoDaneDepartamento != null) {
						try{
							var indexDepartamento:int = Utilidad.getItemIndex(parentDocument.avaluo.codigoDaneDepartamento,selectDepartamento,'codAsobancaria');
							selectCiudadbasico =  (selectDepartamento[indexDepartamento] as Departamento).ciudadesDepto;
						}catch(e:Error){
							e.getStackTrace(); 
							trace(e); 
							trace(e.getStackTrace()); 
						}
					}
					validateNow();
					
				}
			}
			
			private function validarCamposFormultario():Boolean{
				try{
					validarCamposVacios();					 
					return true; 
				}catch(e:Error){
					imprimirEstadoProceso(e.message);
				}	
				return false;
			}
			
			/**
			 *  Imprime estado de las novedades durante el registro del formultario 
			 **/			
			public function imprimirEstadoProceso(mensaje:String):void{
				parentDocument.parentDocument.parentDocument.mensajes.text = mensaje ; 
			}
			
			protected function button1_clickHandler(event:MouseEvent):void{
				if(!validarCamposFormultario()){
					return; 
				}
				var mensajeTransaccion:String = "Transacci칩n exitosa. Bloque: Informaci칩n B치sica"; 
				var avaluoTmp:Avaluo = new Avaluo();
				
				imprimirEstadoProceso(mensajeTransaccion);
				
				guardarInformacionBasica(parentDocument.avaluo, parentApplication.myUsuario);
				
				if(parentDocument.avaluo.usuarioCreacion == null)
					auditoriaAvaluo.usuarioCreacion.text = parentApplication.myUsuario.cedulaEmpleado ; 
				else 
					auditoriaAvaluo.usuarioCreacion.text = parentDocument.avaluo.usuarioCreacion ;
				
				if(parentDocument.avaluo.fechaCreacion != null)
					auditoriaAvaluo.fechaCreacion.selectedDate = parentDocument.avaluo.fechaCreacion ; 
				else 
					auditoriaAvaluo.fechaCreacion.selectedDate = new Date() ;
				
				auditoriaAvaluo.usuarioTransaccion.text = parentApplication.myUsuario.cedulaEmpleado ; 
				auditoriaAvaluo.fechaTransaccion.selectedDate = new Date() ;
				
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			protected function selectedConstructor(event:MouseEvent):void
			{
				if(chkTipoInforme.selected)
				{	
					imprimirEstadoProceso("Recuerde que debe marcar la vivienda como nueva y terminada para que sea proyecto constructor");
				}else{
					imprimirEstadoProceso("");
				}			
			}
			
			
			protected function module1_updateCompleteHandler(event:FlexEvent):void
			{
				if(parentDocument.parentDocument.parentDocument.parentDocument.avaluo != null){
					getAvaluosPorIdResult.token = parentDocument.avaluosService.getAvaluosPorId(parentDocument.parentDocument.parentDocument.parentDocument.avaluo.idAvaluo);
				}else{
					parentDocument.avaluo = new Avaluo(); 
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
		
		<valueObjects:LiquidacionAvaluoTotal id="liquidacionAvaluoTotal"/>
		
		<mx:NumberFormatter id="numberFormatter" 
							decimalSeparatorFrom="."
							decimalSeparatorTo="."
							precision="7" 
							rounding="none"
							useThousandsSeparator="true" 
							useNegativeSign="true"/>
		
		<mx:NumberValidator id="LongitudNumberValidator" property="text"
							source="{coordenadasLongitudTextInput}"					
							minValue="-82.500000" maxValue="-66.00000" domain="real"		
							invalid="imprimirEstadoProceso('El valor de las coordenadas de longitud no es v치lido debe estar entre -82.500000 y -66.00000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma')"
							triggerEvent=""
							/>
		
		<mx:NumberValidator id="LatitudNumberValidator" property="text" 
							source="{coordenadasLatitudTextInput}"
							minValue="-4.400000" maxValue="13.500000" domain="real"
							invalid="imprimirEstadoProceso('El valor de las coordenadas de latitud no es valido debe estar entre -4.400000 y 13.500000. Recuerde que el orden debe ser latitud,longitud y el separador debe ser coma')"
							triggerEvent=""
							/>
		
		<mx:DateValidator id="fechaAvaluoDateField2Val" source="{fechaAvaluoDateField2}" property="text" inputFormat="dd/mm/yyyy"
						  formatError= "El formato de la fecha no es el correcto, por favor verifique." 
						  invalidCharError="El formato de la fecha contiene car치cteres no v치lidos, por favor verifique."
						  wrongDayError="Ingrese un dia del m칠s v치lido."
						  wrongLengthError="Ingrese la longitud de la fecha correcta." 
						  wrongMonthError="Ingrese un m칠s v치lido, entre 1 y 12."
						  wrongYearError="Ingrese un a침o v치lido, entre 0 y 9999."
						  />
		
		<s:CallResponder id="getValoresDominioResult" result="getValoresDominioResult_resultHandler(event)"/>
		<s:CallResponder id="existeConsecutivoResult" result="existeConsecutivoResult_resultHandler(event)"/>
		<s:CallResponder id="getUvrDiaResult" result="getUvrDiaResult_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult30" result="getValoresDominioResult30_resultHandler(event)"/>
		<s:CallResponder id="convierteDireccionDaneResult3" result="convierteDireccionDaneResult3_resultHandler(event)"/>
		<s:CallResponder id="consultaDepartamentosResult" result="consultaDepartamentosResult_resultHandler(event)" />
		<s:CallResponder id="getValoresDominioResult31" result="getValoresDominioResult31_resultHandler(event)"/>
		<s:CallResponder id="getValoresDominioResult29" result="getValoresDominioResult29_resultHandler(event)"/>
		<s:CallResponder id="updateResult" result="updateResult_resultHandler(event)"/>
		<s:CallResponder id="getAvaluosPorIdResult" result="getAvaluosPorIdResult_resultHandler(event)"/>
		
		
	</fx:Declarations>
	
	<s:Group width="{parentDocument.parentDocument.parentDocument.tn.width - 10}" height="{parentDocument.parentDocument.parentDocument.tn.height -10}">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		
		<!-- ########################################### INFO BASICA ###########################################-->
		
		<mx:HBox width="100%">
			<mx:VBox>
				<s:Label text="Nombre Solicitante"/>
				<s:TextInput id="nombreSolicitanteTextInput2" text="{parentDocument.avaluo.nombreSolicitante}" width="231" restrict="{Utilidad.restrict_}" maxChars="60" enabled="true" tabIndex="1"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="ID"/>
				<s:ComboBox id="cbxIdTipoIdentificacion" dataProvider="{selectTipoId}" labelField="rvMeaning" selectedIndex="{Utilidad.getItemIndex(parentDocument.avaluo.dominioTipoIdentificacion.rvMeaning,selectTipoId,'rvMeaning')}" width="70" enabled="true" tabIndex="2" updateComplete="cbxIdTipoIdentificacion_updateCompleteHandler(event)"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="N칰mero Identificaci칩n"/>									
				<s:TextInput id="numeroIdentificacionTextInput3" text="{parentDocument.avaluo.numeroIdentificacion}" width="124" restrict ="{Utilidad.onlyNumber}" maxChars="10" enabled="true" focusOut="numeroIdentificacionTextInput3_focusOutHandler(event)" tabIndex="3"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Entidad"/>
				<s:TextInput id="nombreBancoTextInput" text="DAVIVIENDA" enabled="true" width="86" tabIndex="4" editable="false"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Fecha Avaluo"/>
				<mx:DateField id="fechaAvaluoDateField2" selectedDate="{parentDocument.avaluo.fechaAvaluo}" formatString="DD/MM/YYYY" creationComplete="Utilidad.dateChooser_init(fechaAvaluoDateField2)" enabled="true" yearNavigationEnabled="true"  change="fechaAvaluoDateField2_changeHandler(event)" tabIndex="5" editable="true" focusOut="fechaAvaluoDateField2_focusOutHandler(event)"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Consecutivo Banco"/>
				<s:TextInput id="consecutivoBancoTextInput" text="{parentDocument.avaluo.consecutivoBanco}" enabled="true" width="151" tabIndex="6" editable="false"/>
			</mx:VBox>
		</mx:HBox>
		<mx:HBox width="100%">
			<mx:VBox>
				<s:Label text="Objetivo"/>
				<s:ComboBox id="cbxObjetivo" creationComplete="cbxObjetivo_creationCompleteHandler(event)" dataProvider="{selectObjeto}" labelField="rvMeaning" selectedIndex="{Utilidad.getItemIndex(parentDocument.avaluo.idObjetoAvaluo,selectObjeto,'rvLowValue')}" width="135" enabled="true" tabIndex="7" updateComplete="cbxObjetivo_updateCompleteHandler(event)"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Direcci칩n Inmueble"/>
				<s:TextInput id="direccionInmuebleTextInput3" text="{parentDocument.avaluo.direccionInmueble}" width="337" restrict="{Utilidad.restrict_}" maxChars="100" enabled="true" tabIndex="8" focusOut="direccionInmuebleTextInput3_focusOutHandler(event)"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Barrio"/>
				<s:TextInput id="barrioTextInput2" text="{parentDocument.avaluo.barrio}" restrict="{Utilidad.restrict_}" maxChars="30" enabled="true" tabIndex="9"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Nombre Conjunto o Edificio"/>
				<s:TextInput id="nombreConjuntoEdificioTextInput" text="{parentDocument.avaluo.nombreConjuntoEdificio}" width="176" restrict="{Utilidad.restrict_}" maxChars="30" enabled="true" tabIndex="10"/>
			</mx:VBox> 
		</mx:HBox>
		<mx:HBox width="100%">
			<mx:VBox>
				<s:Label text="Departamento"/>
				<s:ComboBox id="cbxDepartamentoBasico" dataProvider="{selectDepartamento}" labelField="departamento" selectedIndex="{Utilidad.getItemIndex(parentDocument.avaluo.objCiudad.departamento.codAsobancaria,selectDepartamento,'codAsobancaria')}" change="cbxDepartamentoBasico_changeHandler(event)"  updateComplete="cbxDepartamento_creationCompleteHandler(event)" width="176" enabled="true" tabIndex="11" focusOut="cbxDepartamentoBasico_focusOutHandler(event)"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="C칩digo"/>
				<s:TextInput id="txiCodDaneDepto" text="{parentDocument.avaluo.objCiudad.departamento.codDane}" editable="false" enabled="true" width="45" tabIndex="12"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Ciudad"/>
				<s:ComboBox id="cbxCiudadBasico" labelField="ciudad" dataProvider="{selectCiudadbasico}" selectedIndex="{Utilidad.getItemIndex(parentDocument.avaluo.objCiudad.codAsobancaria,selectCiudadbasico,'codAsobancaria')}" width="197" change="cbxCiudadBasico_changeHandler(event)" tabIndex="13"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="C칩digo"/>
				<s:TextInput id="txiCodDaneCiudad" text="{parentDocument.avaluo.objCiudad.codDane}" editable="false" enabled="true" width="58" tabIndex="14"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Sector"/>
				<s:ComboBox id="cbxSector" creationComplete="cbxSector_creationCompleteHandler(event)" labelField="rvMeaning" dataProvider="{selectSector}" selectedIndex="{Utilidad.getItemIndex(parentDocument.avaluo.sector,selectSector,'rvLowValue')}" width="96" enabled="true" tabIndex="14"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Coordenadas"/>
				<s:TextInput id="ubicacionGpsTextInput" toolTip="{Utilidad.toolTipCoordenadas}" focusOut="ubicacionGpsTextInput_focusOutHandler(event)" text="{parentDocument.avaluo.ubicacionGps}" width="84" restrict="{Utilidad.decimalCharacter}" maxChars="30" tabIndex="16"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Tel. Fijo"/>
				<s:TextInput id="telefonoSolicitanteTextInput" text="{parentDocument.avaluo.telefonoSolicitante}" width="96" restrict="{Utilidad.onlyNumber}" maxChars="10" enabled="true" tabIndex="17"/>
			</mx:VBox>
		</mx:HBox>
		<mx:HBox width="100%">
			<mx:VBox>
				<s:Label text="Tel. Celular"/>
				<s:TextInput id="celularSolicitanteTextInput" text="{parentDocument.avaluo.celularSolicitante}" width="93" restrict="{Utilidad.onlyNumber}" maxChars="10"  enabled="true" tabIndex="18"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="E- Mail"/>
				<s:TextInput id="correoSolicitanteTextInput" text="{parentDocument.avaluo.correoSolicitante}" width="159" restrict="{Utilidad.restrict_}" maxChars="60" enabled="true" tabIndex="19"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Metodolog칤a"/>
				<s:ComboBox id="cbxMetodologia" dataProvider="{selectMetodologia}" labelField="rvMeaning" selectedIndex="{Utilidad.getItemIndex(parentDocument.avaluo.idMetodologia,selectMetodologia,'rvLowValue')}" creationComplete="cbxMetodologia_creationCompleteHandler(event)" width="211" enabled="true" tabIndex="20"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Justificaci칩n de la Metodolog칤a"/>
				<s:TextInput id="justificacionTextInput" text="{parentDocument.avaluo.justificacion}" width="313" restrict="{Utilidad.restrict_}" enabled="true" maxChars="500" tabIndex="21" focusOut="justificacionTextInput_focusOutHandler(event)"/>
			</mx:VBox>
		</mx:HBox>
		<mx:HBox width="100%">
			<mx:VBox width="96">
				<s:Label text="Latitud" width="90"/>
				<s:TextInput id="coordenadasLatitudTextInput" text="{coordenadasLatitud}" width="90" maxChars="12" visible="true" enabled="true" editable="false"/>
			</mx:VBox>
			<mx:VBox>
				<s:Label text="Longitud" width="90"/>
				<s:TextInput id="coordenadasLongitudTextInput" text="{coordenadasLongitud}" width="90" maxChars="12" visible="true" enabled="true" tabIndex="23" editable="false"/>
			</mx:VBox>
			
			<mx:VBox height="100%">
				<s:Label text="Otro Sist de Coord."/>
				<s:TextInput id="sisCoordBUATxtTextInput" maxChars="20" text="{parentDocument.avaluo.sistemaCoordenadasTxtBUA}" tabIndex="25"/>
			</mx:VBox>
			
		</mx:HBox>
		<mx:HBox width="100%">
			<mx:FormItem label="Proyecto Constructor" width="384">
				<s:CheckBox id="chkTipoInforme" label="Seleccione" click="selectedConstructor(event)"/>
			</mx:FormItem>
		</mx:HBox>
		
		<comp:AuditoriaPanel id="auditoriaAvaluo"></comp:AuditoriaPanel>	
				
		<s:HGroup paddingLeft="10" paddingRight="10">				 
			<mx:Button id="btGuardar" label="Guardar"  click="button1_clickHandler(event)"/>
			<mx:Button label="Cancelar" click="button2_clickHandler(event)"/>
		</s:HGroup>
		
		<!-- ########################################### FIN INFO BASICA ###########################################-->
	</s:Group>
	
	
</mx:Module>